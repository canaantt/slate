"use strict";function Query(t,e){if(!(this instanceof Query))return new Query(t,e);var i=this.constructor.prototype;this.op=i.op||void 0,this.options={},this.setOptions(i.options),this._conditions=i._conditions?utils.clone(i._conditions):{},this._fields=i._fields?utils.clone(i._fields):void 0,this._update=i._update?utils.clone(i._update):void 0,this._path=i._path||void 0,this._distinct=i._distinct||void 0,this._collection=i._collection||void 0,this._traceFunction=i._traceFunction||void 0,e&&this.setOptions(e),t&&(t.find&&t.remove&&t.update?this.collection(t):this.find(t))}/*!
 * @ignore
 */
function push(t,e,i){if(Array.isArray(t.sort))throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");if(i&&i.$meta){var r=t.sort||(t.sort={});return void(r[e]={$meta:i.$meta})}var n=String(i||1).toLowerCase();if(!/^(?:ascending|asc|descending|desc|1|-1)$/.test(n))throw utils.isArray(i)&&(i="["+i+"]"),new TypeError("Invalid sort value: {"+e+": "+i+" }");var r=t.sort||(t.sort={}),s=i.toString().replace("asc","1").replace("ascending","1").replace("desc","-1").replace("descending","-1");r[e]=parseInt(s,10)}function _pushArr(t,e,i){if(t.sort=t.sort||[],!Array.isArray(t.sort))throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");i.toString().replace("asc","1").replace("ascending","1").replace("desc","-1").replace("descending","-1");t.sort.push([e,i])}var slice=require("sliced"),assert=require("assert"),util=require("util"),utils=require("./utils"),debug=require("debug")("mquery"),$withinCmd="$geoWithin";Object.defineProperty(Query,"use$geoWithin",{get:function(){return"$geoWithin"==$withinCmd},set:function(t){$withinCmd=!0===t?"$geoWithin":"$within"}}),Query.prototype.toConstructor=function(){function t(e,i){return this instanceof t?void Query.call(this,e,i):new t(e,i)}utils.inherits(t,Query);var e=t.prototype;return e.options={},e.setOptions(this.options),e.op=this.op,e._conditions=utils.clone(this._conditions),e._fields=utils.clone(this._fields),e._update=utils.clone(this._update),e._path=this._path,e._distinct=this._distinct,e._collection=this._collection,e._traceFunction=this._traceFunction,t},Query.prototype.setOptions=function(t){if(!t||!utils.isObject(t))return this;for(var e,i=utils.keys(t),r=0;r<i.length;++r)if(e=i[r],"function"==typeof this[e]){var n=utils.isArray(t[e])?t[e]:[t[e]];this[e].apply(this,n)}else this.options[e]=t[e];return this},Query.prototype.collection=function(t){return this._collection=new Query.Collection(t),this},Query.prototype.$where=function(t){return this._conditions.$where=t,this},Query.prototype.where=function(){if(!arguments.length)return this;this.op||(this.op="find");var t=typeof arguments[0];if("string"==t)return this._path=arguments[0],2===arguments.length&&(this._conditions[this._path]=arguments[1]),this;if("object"==t&&!Array.isArray(arguments[0]))return this.merge(arguments[0]);throw new TypeError("path must be a string or object")},Query.prototype.equals=function(t){this._ensurePath("equals");var e=this._path;return this._conditions[e]=t,this},Query.prototype.eq=function(t){this._ensurePath("eq");var e=this._path;return this._conditions[e]=t,this},Query.prototype.or=function t(e){var t=this._conditions.$or||(this._conditions.$or=[]);return utils.isArray(e)||(e=[e]),t.push.apply(t,e),this},Query.prototype.nor=function e(t){var e=this._conditions.$nor||(this._conditions.$nor=[]);return utils.isArray(t)||(t=[t]),e.push.apply(e,t),this},Query.prototype.and=function i(t){var i=this._conditions.$and||(this._conditions.$and=[]);return Array.isArray(t)||(t=[t]),i.push.apply(i,t),this},/*!
 * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance
 *
 *     Thing.where('type').nin(array)
 */
"gt gte lt lte ne in nin all regex size maxDistance minDistance".split(" ").forEach(function(t){Query.prototype[t]=function(){var e,i;1===arguments.length?(this._ensurePath(t),i=arguments[0],e=this._path):(i=arguments[1],e=arguments[0]);var r=null===this._conditions[e]||"object"==typeof this._conditions[e]?this._conditions[e]:this._conditions[e]={};return r["$"+t]=i,this}}),Query.prototype.mod=function(){var t,e;1===arguments.length?(this._ensurePath("mod"),t=arguments[0],e=this._path):2!==arguments.length||utils.isArray(arguments[1])?3===arguments.length?(t=slice(arguments,1),e=arguments[0]):(t=arguments[1],e=arguments[0]):(this._ensurePath("mod"),t=slice(arguments),e=this._path);var i=this._conditions[e]||(this._conditions[e]={});return i.$mod=t,this},Query.prototype.exists=function(){var t,e;0===arguments.length?(this._ensurePath("exists"),t=this._path,e=!0):1===arguments.length?"boolean"==typeof arguments[0]?(this._ensurePath("exists"),t=this._path,e=arguments[0]):(t=arguments[0],e=!0):2===arguments.length&&(t=arguments[0],e=arguments[1]);var i=this._conditions[t]||(this._conditions[t]={});return i.$exists=e,this},Query.prototype.elemMatch=function(){if(null==arguments[0])throw new TypeError("Invalid argument");var t,e,i;if("function"==typeof arguments[0])this._ensurePath("elemMatch"),e=this._path,t=arguments[0];else if(utils.isObject(arguments[0]))this._ensurePath("elemMatch"),e=this._path,i=arguments[0];else if("function"==typeof arguments[1])e=arguments[0],t=arguments[1];else{if(!arguments[1]||!utils.isObject(arguments[1]))throw new TypeError("Invalid argument");e=arguments[0],i=arguments[1]}t&&(i=new Query,t(i),i=i._conditions);var r=this._conditions[e]||(this._conditions[e]={});return r.$elemMatch=i,this},Query.prototype.within=function(){if(this._ensurePath("within"),this._geoComparison=$withinCmd,0===arguments.length)return this;if(2===arguments.length)return this.box.apply(this,arguments);if(2<arguments.length)return this.polygon.apply(this,arguments);var t=arguments[0];if(!t)throw new TypeError("Invalid argument");if(t.center)return this.circle(t);if(t.box)return this.box.apply(this,t.box);if(t.polygon)return this.polygon.apply(this,t.polygon);if(t.type&&t.coordinates)return this.geometry(t);throw new TypeError("Invalid argument")},Query.prototype.box=function(){var t,e;if(3===arguments.length)t=arguments[0],e=[arguments[1],arguments[2]];else{if(2!==arguments.length)throw new TypeError("Invalid argument");this._ensurePath("box"),t=this._path,e=[arguments[0],arguments[1]]}var i=this._conditions[t]||(this._conditions[t]={});return i[this._geoComparison||$withinCmd]={$box:e},this},Query.prototype.polygon=function(){var t,e;"string"==typeof arguments[0]?(e=arguments[0],t=slice(arguments,1)):(this._ensurePath("polygon"),e=this._path,t=slice(arguments));var i=this._conditions[e]||(this._conditions[e]={});return i[this._geoComparison||$withinCmd]={$polygon:t},this},Query.prototype.circle=function(){var t,e;if(1===arguments.length)this._ensurePath("circle"),t=this._path,e=arguments[0];else{if(2!==arguments.length)throw new TypeError("Invalid argument");t=arguments[0],e=arguments[1]}if(!("radius"in e&&e.center))throw new Error("center and radius are required");var i=this._conditions[t]||(this._conditions[t]={}),r=e.spherical?"$centerSphere":"$center",n=this._geoComparison||$withinCmd;return i[n]={},i[n][r]=[e.center,e.radius],"unique"in e&&(i[n].$uniqueDocs=!!e.unique),this},Query.prototype.near=function(){var t,e;if(this._geoComparison="$near",0===arguments.length)return this;if(1===arguments.length)this._ensurePath("near"),t=this._path,e=arguments[0];else{if(2!==arguments.length)throw new TypeError("Invalid argument");t=arguments[0],e=arguments[1]}if(!e.center)throw new Error("center is required");var i=this._conditions[t]||(this._conditions[t]={}),r=e.spherical?"$nearSphere":"$near";if(Array.isArray(e.center)){i[r]=e.center;var n="maxDistance"in e?e.maxDistance:null;null!=n&&(i.$maxDistance=n),null!=e.minDistance&&(i.$minDistance=e.minDistance)}else{if("Point"!=e.center.type||!Array.isArray(e.center.coordinates))throw new Error(util.format("Invalid GeoJSON specified for %s",r));i[r]={$geometry:e.center},"maxDistance"in e&&(i[r].$maxDistance=e.maxDistance),"minDistance"in e&&(i[r].$minDistance=e.minDistance)}return this},Query.prototype.intersects=function(){if(this._ensurePath("intersects"),this._geoComparison="$geoIntersects",0===arguments.length)return this;var t=arguments[0];if(null!=t&&t.type&&t.coordinates)return this.geometry(t);throw new TypeError("Invalid argument")},Query.prototype.geometry=function(){if("$within"!=this._geoComparison&&"$geoWithin"!=this._geoComparison&&"$near"!=this._geoComparison&&"$geoIntersects"!=this._geoComparison)throw new Error("geometry() must come after `within()`, `intersects()`, or `near()");var t,e;if(1!==arguments.length)throw new TypeError("Invalid argument");if(this._ensurePath("geometry"),e=this._path,t=arguments[0],!t.type||!Array.isArray(t.coordinates))throw new TypeError("Invalid argument");var i=this._conditions[e]||(this._conditions[e]={});return i[this._geoComparison]={$geometry:t},this},Query.prototype.select=function(){var t=arguments[0];if(!t)return this;if(1!==arguments.length)throw new Error("Invalid select: select only takes 1 argument");this._validate("select");var e=this._fields||(this._fields={}),i=typeof t;if(("string"==i||utils.isArgumentsObject(t))&&"number"==typeof t.length){"string"==i&&(t=t.split(/\s+/));for(var r=0,n=t.length;n>r;++r){var s=t[r];if(s){var o="-"==s[0]?0:1;0===o&&(s=s.substring(1)),e[s]=o}}return this}if(utils.isObject(t)&&!Array.isArray(t)){for(var u=utils.keys(t),r=0;r<u.length;++r)e[u[r]]=t[u[r]];return this}throw new TypeError("Invalid select() argument. Must be string or object.")},Query.prototype.slice=function(){if(0===arguments.length)return this;this._validate("slice");var t,e;if(1===arguments.length){var i=arguments[0];if("object"==typeof i&&!Array.isArray(i)){for(var r=Object.keys(i),n=r.length,s=0;n>s;++s)this.slice(r[s],i[r[s]]);return this}this._ensurePath("slice"),t=this._path,e=arguments[0]}else 2===arguments.length?"number"==typeof arguments[0]?(this._ensurePath("slice"),t=this._path,e=slice(arguments)):(t=arguments[0],e=arguments[1]):3===arguments.length&&(t=arguments[0],e=slice(arguments,1));var o=this._fields||(this._fields={});return o[t]={$slice:e},this},Query.prototype.sort=function(t){if(!t)return this;var e;this._validate("sort");var i=typeof t;if(Array.isArray(t)){e=t.length;for(var r=0;r<t.length;++r)_pushArr(this.options,t[r][0],t[r][1]);return this}if(1===arguments.length&&"string"==i){t=t.split(/\s+/),e=t.length;for(var r=0;e>r;++r){var n=t[r];if(n){var s="-"==n[0]?-1:1;-1===s&&(n=n.substring(1)),push(this.options,n,s)}}return this}if(utils.isObject(t)){for(var o=utils.keys(t),r=0;r<o.length;++r){var n=o[r];push(this.options,n,t[n])}return this}throw new TypeError("Invalid sort() argument. Must be a string, object, or array.")},["limit","skip","maxScan","batchSize","comment"].forEach(function(t){Query.prototype[t]=function(e){return this._validate(t),this.options[t]=e,this}}),Query.prototype.maxTime=function(t){return this._validate("maxTime"),this.options.maxTimeMS=t,this},Query.prototype.snapshot=function(){return this._validate("snapshot"),this.options.snapshot=arguments.length?!!arguments[0]:!0,this},Query.prototype.hint=function(){if(0===arguments.length)return this;this._validate("hint");var t=arguments[0];if(utils.isObject(t)){var e=this.options.hint||(this.options.hint={});for(var i in t)e[i]=t[i];return this}throw new TypeError("Invalid hint. "+t)},Query.prototype.slaveOk=function(t){return this.options.slaveOk=arguments.length?!!t:!0,this},Query.prototype.read=function(t){return arguments.length>1&&!Query.prototype.read.deprecationWarningIssued&&(console.error("Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead."),Query.prototype.read.deprecationWarningIssued=!0),this.options.readPreference=utils.readPref(t),this},Query.prototype.tailable=function(){return this._validate("tailable"),this.options.tailable=arguments.length?!!arguments[0]:!0,this},Query.prototype.merge=function(t){if(!t)return this;if(!Query.canMerge(t))throw new TypeError("Invalid argument. Expected instanceof mquery or plain object");return t instanceof Query?(t._conditions&&utils.merge(this._conditions,t._conditions),t._fields&&(this._fields||(this._fields={}),utils.merge(this._fields,t._fields)),t.options&&(this.options||(this.options={}),utils.merge(this.options,t.options)),t._update&&(this._update||(this._update={}),utils.mergeClone(this._update,t._update)),t._distinct&&(this._distinct=t._distinct),this):(utils.merge(this._conditions,t),this)},Query.prototype.find=function(t,e){if(this.op="find","function"==typeof t?(e=t,t=void 0):Query.canMerge(t)&&this.merge(t),!e)return this;var i=this._conditions,r=this._optionsForExec();return r.fields=this._fieldsForExec(),debug("find",this._collection.collectionName,i,r),e=this._wrapCallback("find",e,{conditions:i,options:r}),this._collection.find(i,r,utils.tick(e)),this},Query.prototype.cursor=function(t){if(this.op){if("find"!==this.op)throw new TypeError(".cursor only support .find method")}else this.find(t);var e=this._conditions,i=this._optionsForExec();return i.fields=this._fieldsForExec(),debug("findCursor",this._collection.collectionName,e,i),this._collection.findCursor(e,i)},Query.prototype.findOne=function(t,e){if(this.op="findOne","function"==typeof t?(e=t,t=void 0):Query.canMerge(t)&&this.merge(t),!e)return this;var i=this._conditions,r=this._optionsForExec();return r.fields=this._fieldsForExec(),debug("findOne",this._collection.collectionName,i,r),e=this._wrapCallback("findOne",e,{conditions:i,options:r}),this._collection.findOne(i,r,utils.tick(e)),this},Query.prototype.count=function(t,e){if(this.op="count",this._validate(),"function"==typeof t?(e=t,t=void 0):Query.canMerge(t)&&this.merge(t),!e)return this;var i=this._conditions,r=this._optionsForExec();return debug("count",this._collection.collectionName,i,r),e=this._wrapCallback("count",e,{conditions:i,options:r}),this._collection.count(i,r,utils.tick(e)),this},Query.prototype.distinct=function(t,e,i){if(this.op="distinct",this._validate(),!i){switch(typeof e){case"function":i=e,"string"==typeof t&&(e=t,t=void 0);break;case"undefined":case"string":break;default:throw new TypeError("Invalid `field` argument. Must be string or function")}switch(typeof t){case"function":i=t,t=e=void 0;break;case"string":e=t,t=void 0}}if("string"==typeof e&&(this._distinct=e),Query.canMerge(t)&&this.merge(t),!i)return this;if(!this._distinct)throw new Error("No value for `distinct` has been declared");var r=this._conditions,n=this._optionsForExec();return debug("distinct",this._collection.collectionName,r,n),i=this._wrapCallback("distinct",i,{conditions:r,options:n}),this._collection.distinct(this._distinct,r,n,utils.tick(i)),this},Query.prototype.update=function(t,e,i,r){this.op="update";var n;switch(arguments.length){case 3:"function"==typeof i&&(r=i,i=void 0);break;case 2:"function"==typeof e&&(r=e,e=t,t=void 0);break;case 1:switch(typeof t){case"function":r=t,t=i=e=void 0;break;case"boolean":n=t,t=void 0;break;default:e=t,t=i=void 0}}if(Query.canMerge(t)&&this.merge(t),e&&this._mergeUpdate(e),utils.isObject(i)&&this.setOptions(i),!n&&!r)return this;if(!this._update||!this.options.overwrite&&0===utils.keys(this._update).length)return r&&utils.soon(r.bind(null,null,0)),this;i=this._optionsForExec(),r||(i.safe=!1);var t=this._conditions;return e=this._updateForExec(),debug("update",this._collection.collectionName,t,e,i),r=this._wrapCallback("update",r,{conditions:t,doc:e,options:i}),this._collection.update(t,e,i,utils.tick(r)),this},Query.prototype.remove=function(t,e){this.op="remove";var i;if("function"==typeof t?(e=t,t=void 0):Query.canMerge(t)?this.merge(t):!0===t&&(i=t,t=void 0),!i&&!e)return this;var r=this._optionsForExec();e||(r.safe=!1);var n=this._conditions;return debug("remove",this._collection.collectionName,n,r),e=this._wrapCallback("remove",e,{conditions:n,options:r}),this._collection.remove(n,r,utils.tick(e)),this},Query.prototype.findOneAndUpdate=function(t,e,i,r){switch(this.op="findOneAndUpdate",this._validate(),arguments.length){case 3:"function"==typeof i&&(r=i,i={});break;case 2:"function"==typeof e&&(r=e,e=t,t=void 0),i=void 0;break;case 1:"function"==typeof t?(r=t,t=i=e=void 0):(e=t,t=i=void 0)}return Query.canMerge(t)&&this.merge(t),e&&this._mergeUpdate(e),i&&this.setOptions(i),r?this._findAndModify("update",r):this},Query.prototype.findOneAndRemove=function(t,e,i){return this.op="findOneAndRemove",this._validate(),"function"==typeof e?(i=e,e=void 0):"function"==typeof t&&(i=t,t=void 0),Query.canMerge(t)&&this.merge(t),e&&this.setOptions(e),i?this._findAndModify("remove",i):this},Query.prototype._findAndModify=function(t,e){assert.equal("function",typeof e);var i,r,n=this._optionsForExec();if("remove"==t)n.remove=!0;else if("new"in n||(n["new"]=!0),"upsert"in n||(n.upsert=!1),r=this._updateForExec(),!r){if(!n.upsert)return this.findOne(e);r={$set:{}}}var i=this._fieldsForExec();i&&(n.fields=i);var s=this._conditions;return debug("findAndModify",this._collection.collectionName,s,r,n),e=this._wrapCallback("findAndModify",e,{conditions:s,doc:r,options:n}),this._collection.findAndModify(s,r,n,utils.tick(e)),this},Query.prototype._wrapCallback=function(t,e,i){var r=this._traceFunction||Query.traceFunction;if(r){i.collectionName=this._collection.collectionName;var n=r&&r.call(null,t,i,this),s=(new Date).getTime();return function(t,i){if(n){var r=(new Date).getTime()-s;n.call(null,t,i,r)}e&&e.apply(null,arguments)}}return e},Query.prototype.setTraceFunction=function(t){return this._traceFunction=t,this},Query.prototype.exec=function(t,e){switch(typeof t){case"function":e=t,t=null;break;case"string":this.op=t}assert.ok(this.op,"Missing query type: (find, update, etc)"),("update"==this.op||"remove"==this.op)&&(e||(e=!0));var i=this;return"function"!=typeof e?new Query.Promise(function(t,e){i[i.op](function(r,n){r?e(r):t(n),i=t=e=null})}):void this[this.op](e)},Query.prototype.thunk=function(){var t=this;return function(e){t.exec(e)}},Query.prototype.then=function(t,e){var i=this,r=new Query.Promise(function(t,e){i.exec(function(r,n){r?e(r):t(n),i=t=e=null})});return r.then(t,e)},Query.prototype.stream=function(t){if("find"!=this.op)throw new Error("stream() is only available for find");var e=this._conditions,i=this._optionsForExec();return i.fields=this._fieldsForExec(),debug("stream",this._collection.collectionName,e,i,t),this._collection.findStream(e,i,t)},Query.prototype.selected=function(){return!!(this._fields&&Object.keys(this._fields).length>0)},Query.prototype.selectedInclusively=function(){if(!this._fields)return!1;var t=Object.keys(this._fields);if(0===t.length)return!1;for(var e=0;e<t.length;++e){var i=t[e];if(0===this._fields[i])return!1;if(this._fields[i]&&"object"==typeof this._fields[i]&&this._fields[i].$meta)return!1}return!0},Query.prototype.selectedExclusively=function(){if(!this._fields)return!1;var t=Object.keys(this._fields);if(0===t.length)return!1;for(var e=0;e<t.length;++e){var i=t[e];if(0===this._fields[i])return!0}return!1},Query.prototype._mergeUpdate=function(t){this._update||(this._update={}),t instanceof Query?t._update&&utils.mergeClone(this._update,t._update):utils.mergeClone(this._update,t)},Query.prototype._optionsForExec=function(){var t=utils.clone(this.options,{retainKeyOrder:!0});return t},Query.prototype._fieldsForExec=function(){return utils.clone(this._fields,{retainKeyOrder:!0})},Query.prototype._updateForExec=function(){for(var t=utils.clone(this._update,{retainKeyOrder:!0}),e=utils.keys(t),i=e.length,r={};i--;){var n=e[i];this.options.overwrite?r[n]=t[n]:"$"!==n[0]?(r.$set||(t.$set?r.$set=t.$set:r.$set={}),r.$set[n]=t[n],e.splice(i,1),~e.indexOf("$set")||e.push("$set")):"$set"===n?r.$set||(r[n]=t[n]):r[n]=t[n]}return this._compiledUpdate=r,r},Query.prototype._ensurePath=function(t){if(!this._path){var e=t+"() must be used after where() when called with these arguments";throw new Error(e)}},/*!
 * Permissions
 */
Query.permissions=require("./permissions"),Query._isPermitted=function(t,e){var i=Query.permissions[e];return i?!0!==i[t]:!0},Query.prototype._validate=function(t){var e,i;if(void 0===t){if(i=Query.permissions[this.op],"function"!=typeof i)return!0;e=i(this)}else Query._isPermitted(t,this.op)||(e=t);if(e)throw new Error(e+" cannot be used with "+this.op)},Query.canMerge=function(t){return t instanceof Query||utils.isObject(t)},Query.setGlobalTraceFunction=function(t){Query.traceFunction=t},/*!
 * Exports.
 */
Query.utils=utils,Query.env=require("./env"),Query.Collection=require("./collection"),Query.BaseCollection=require("./collection/collection"),Query.Promise=require("bluebird"),module.exports=exports=Query;