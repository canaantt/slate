<h1 id="mquery">mquery</h1>

<p>===========</p>

<p><code class="prettyprint">mquery</code> is a fluent mongodb query builder designed to run in multiple environments. As of v0.1, <code class="prettyprint">mquery</code> runs on <code class="prettyprint">Node.js</code> only with support for the MongoDB shell and browser environments planned for upcoming releases.</p>

<h2 id="features">Features</h2>

<ul>
<li>fluent query builder api</li>
<li>custom base query support</li>
<li>MongoDB 2.4 geoJSON support</li>
<li>method + option combinations validation</li>
<li>node.js driver compatibility</li>
<li>environment detection</li>
<li><a href="https://github.com/visionmedia/debug">debug</a> support</li>
<li>separated collection implementations for maximum flexibility</li>
</ul>

<p><a href="https://travis-ci.org/aheckmann/mquery"><img alt="Build Status" src="https://travis-ci.org/aheckmann/mquery.png" /></a></p>

<h2 id="use">Use</h2>
<pre class="highlight javascript"><code><span class="nx">require</span><span class="p">(</span><span class="s1">'mongodb'</span><span class="p">).</span><span class="nx">connect</span><span class="p">(</span><span class="nx">uri</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">db</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="k">return</span> <span class="nx">handleError</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>

  <span class="c1">// get a collection</span>
  <span class="kd">var</span> <span class="nx">collection</span> <span class="o">=</span> <span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">(</span><span class="s1">'artists'</span><span class="p">);</span>

  <span class="c1">// pass it to the constructor</span>
  <span class="nx">mquery</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">find</span><span class="p">({..},</span> <span class="nx">callback</span><span class="p">);</span>

  <span class="c1">// or pass it to the collection method</span>
  <span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">({..}).</span><span class="nx">collection</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">exec</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>

  <span class="c1">// or better yet, create a custom query constructor that has it always set</span>
  <span class="kd">var</span> <span class="nx">Artist</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">toConstructor</span><span class="p">();</span>
  <span class="nx">Artist</span><span class="p">().</span><span class="nx">find</span><span class="p">(..).</span><span class="nx">where</span><span class="p">(..).</span><span class="nx">exec</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="p">})</span>
</code></pre>

<p><code class="prettyprint">mquery</code> requires a collection object to work with. In the example above we just pass the collection object created using the official <a href="https://github.com/mongodb/node-mongodb-native">MongoDB driver</a>.</p>

<h2 id="fluent-api">Fluent API</h2>

<ul>
<li><a href="#find">find</a></li>
<li><a href="#findOne">findOne</a></li>
<li><a href="#count">count</a></li>
<li><a href="#remove">remove</a></li>
<li><a href="#update">update</a></li>
<li><a href="#findoneandupdate">findOneAndUpdate</a></li>
<li><a href="#findoneandremove">findOneAndRemove</a></li>
<li><a href="#distinct">distinct</a></li>
<li><a href="#exec">exec</a></li>
<li><a href="#stream">stream</a></li>
<li><a href="#all">all</a></li>
<li><a href="#and">and</a></li>
<li><a href="#box">box</a></li>
<li><a href="#circle">circle</a></li>
<li><a href="#elemmatch">elemMatch</a></li>
<li><a href="#equals">equals</a></li>
<li><a href="#exists">exists</a></li>
<li><a href="#geometry">geometry</a></li>
<li><a href="#gt">gt</a></li>
<li><a href="#gte">gte</a></li>
<li><a href="#in">in</a></li>
<li><a href="#intersects">intersects</a></li>
<li><a href="#lt">lt</a></li>
<li><a href="#lte">lte</a></li>
<li><a href="#maxdistance">maxDistance</a></li>
<li><a href="#mod">mod</a></li>
<li><a href="#ne">ne</a></li>
<li><a href="#nin">nin</a></li>
<li><a href="#nor">nor</a></li>
<li><a href="#near">near</a></li>
<li><a href="#or">or</a></li>
<li><a href="#polygon">polygon</a></li>
<li><a href="#regex">regex</a></li>
<li><a href="#select">select</a></li>
<li><a href="#selected">selected</a></li>
<li><a href="#selectedinclusively">selectedInclusively</a></li>
<li><a href="#selectedexclusively">selectedExclusively</a></li>
<li><a href="#size">size</a></li>
<li><a href="#slice">slice</a></li>
<li><a href="#within">within</a></li>
<li><a href="#where">where</a></li>
<li><a href="#where-1">$where</a></li>
<li><a href="#batchsize">batchSize</a></li>
<li><a href="#comment">comment</a></li>
<li><a href="#hint">hint</a></li>
<li><a href="#limit">limit</a></li>
<li><a href="#maxscan">maxScan</a></li>
<li><a href="#maxtime">maxTime</a></li>
<li><a href="#skip">skip</a></li>
<li><a href="#sort">sort</a></li>
<li><a href="#read">read</a></li>
<li><a href="#slaveok">slaveOk</a></li>
<li><a href="#snapshot">snapshot</a></li>
<li><a href="#tailable">tailable</a></li>
</ul>

<h2 id="helpers">Helpers</h2>

<ul>
<li><a href="#collection">collection</a></li>
<li><a href="#then">then</a></li>
<li><a href="#thunk">thunk</a></li>
<li><a href="#mergeobject">merge</a></li>
<li><a href="#setoptionsoptions">setOptions</a></li>
<li><a href="#settracefunctionfunc">setTraceFunction</a></li>
<li><a href="#mquerysetglobaltracefunctionfunc">mquery.setGlobalTraceFunction</a></li>
<li><a href="#mquerycanmerge">mquery.canMerge</a></li>
<li><a href="#mqueryusegeowithin">mquery.use$geoWithin</a></li>
</ul>

<h3 id="find">find()</h3>

<p>Declares this query a <em>find</em> query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="nx">match</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">docs</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">assert</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">docs</span><span class="p">));</span>
<span class="p">})</span>
</code></pre>

<h3 id="findone">findOne()</h3>

<p>Declares this query a <em>findOne</em> query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">findOne</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">findOne</span><span class="p">(</span><span class="nx">match</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">findOne</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">findOne</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// the document may not be found</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre>

<h3 id="count">count()</h3>

<p>Declares this query a <em>count</em> query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">count</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">count</span><span class="p">(</span><span class="nx">match</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">count</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">count</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">number</span><span class="p">){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'we found %d matching documents'</span><span class="p">,</span> <span class="nx">number</span><span class="p">);</span>
<span class="p">})</span>
</code></pre>

<h3 id="remove">remove()</h3>

<p>Declares this query a <em>remove</em> query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">remove</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">remove</span><span class="p">(</span><span class="nx">match</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">remove</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">remove</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">){})</span>
</code></pre>

<h3 id="update">update()</h3>

<p>Declares this query an <em>update</em> query. Optionally pass an update document, match clause, options or callback. If a callback is passed, the query is executed. To force execution without passing a callback, run <code class="prettyprint">update(true)</code>.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span>

<span class="c1">// the following all execute the command</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">({</span><span class="na">$set</span><span class="p">:</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">result</span><span class="p">){})</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">update</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="c1">// executes (unsafe write)</span>
</code></pre>

<h5 id="the-update-document">the update document</h5>

<p>All paths passed that are not <code class="prettyprint">$atomic</code> operations will become <code class="prettyprint">$set</code> ops. For example:</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">where</span><span class="p">({</span> <span class="na">_id</span><span class="p">:</span> <span class="nx">id</span> <span class="p">}).</span><span class="nx">update</span><span class="p">({</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'words'</span> <span class="p">},</span> <span class="nx">callback</span><span class="p">)</span>
</code></pre>

<p>becomes</p>
<pre class="highlight javascript"><code><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="na">_id</span><span class="p">:</span> <span class="nx">id</span> <span class="p">},</span> <span class="p">{</span> <span class="na">$set</span><span class="p">:</span> <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'words'</span> <span class="p">}},</span> <span class="nx">callback</span><span class="p">)</span>
</code></pre>

<p>This behavior can be overridden using the <code class="prettyprint">overwrite</code> option (see below).</p>

<h5 id="options">options</h5>

<p>Options are passed to the <code class="prettyprint">setOptions()</code> method.</p>

<ul>
<li>overwrite</li>
</ul>

<p>Passing an empty object <code class="prettyprint">{ }</code> as the update document will result in a no-op unless the <code class="prettyprint">overwrite</code> option is passed. Without the <code class="prettyprint">overwrite</code> option, the update operation will be ignored and the callback executed without sending the command to MongoDB to prevent accidently overwritting documents in the collection.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">q</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">where</span><span class="p">({</span> <span class="na">_id</span><span class="p">:</span> <span class="nx">id</span> <span class="p">}).</span><span class="nx">setOptions</span><span class="p">({</span> <span class="na">overwrite</span><span class="p">:</span> <span class="kc">true</span> <span class="p">});</span>
<span class="nx">q</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="p">},</span> <span class="nx">callback</span><span class="p">);</span> <span class="c1">// overwrite with an empty doc</span>
</code></pre>

<p>The <code class="prettyprint">overwrite</code> option isn&rsquo;t just for empty objects, it also provides a means to override the default <code class="prettyprint">$set</code> conversion and send the update document as is.</p>
<pre class="highlight javascript"><code><span class="c1">// create a base query</span>
<span class="kd">var</span> <span class="nx">base</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">({</span> <span class="na">_id</span><span class="p">:</span> <span class="mi">108</span> <span class="p">}).</span><span class="nx">collection</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">toConstructor</span><span class="p">();</span>

<span class="nx">base</span><span class="p">().</span><span class="nx">findOne</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span> <span class="c1">// { _id: 108, name: 'cajon' })</span>

  <span class="nx">base</span><span class="p">().</span><span class="nx">setOptions</span><span class="p">({</span> <span class="na">overwrite</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}).</span><span class="nx">update</span><span class="p">({</span> <span class="na">changed</span><span class="p">:</span> <span class="kc">true</span> <span class="p">},</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">base</span><span class="p">.</span><span class="nx">findOne</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span> <span class="c1">// { _id: 108, changed: true }) - the doc was overwritten</span>
    <span class="p">});</span>
  <span class="p">});</span>
<span class="p">})</span>
</code></pre>

<ul>
<li>multi</li>
</ul>

<p>Updates only modify a single document by default. To update multiple documents, set the <code class="prettyprint">multi</code> option to <code class="prettyprint">true</code>.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">()</span>
  <span class="p">.</span><span class="nx">collection</span><span class="p">(</span><span class="nx">coll</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="sr">/^match/</span> <span class="p">},</span> <span class="p">{</span> <span class="na">$addToSet</span><span class="p">:</span> <span class="p">{</span> <span class="na">arr</span><span class="p">:</span> <span class="mi">4</span> <span class="p">}},</span> <span class="p">{</span> <span class="na">multi</span><span class="p">:</span> <span class="kc">true</span> <span class="p">},</span> <span class="nx">callback</span><span class="p">)</span>

<span class="c1">// another way of doing it</span>
<span class="nx">mquery</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="sr">/^match/</span> <span class="p">})</span>
  <span class="p">.</span><span class="nx">collection</span><span class="p">(</span><span class="nx">coll</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">setOptions</span><span class="p">({</span> <span class="na">multi</span><span class="p">:</span> <span class="kc">true</span> <span class="p">})</span>
  <span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="na">$addToSet</span><span class="p">:</span> <span class="p">{</span> <span class="na">arr</span><span class="p">:</span> <span class="mi">4</span> <span class="p">}},</span> <span class="nx">callback</span><span class="p">)</span>

<span class="c1">// update multiple documents with an empty doc</span>
<span class="kd">var</span> <span class="nx">q</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">where</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="sr">/^match/</span> <span class="p">});</span>
<span class="nx">q</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">({</span> <span class="na">multi</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">overwrite</span><span class="p">:</span> <span class="kc">true</span> <span class="p">})</span>
<span class="nx">q</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="p">});</span>
<span class="nx">q</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>

<h3 id="findoneandupdate">findOneAndUpdate()</h3>

<p>Declares this query a <em>findAndModify</em> with update query. Optionally pass a match clause, update document, options, or callback. If a callback is passed, the query is executed.</p>

<p>When executed, the first matching document (if found) is modified according to the update document and passed back to the callback.</p>

<h5 id="options">options</h5>

<p>Options are passed to the <code class="prettyprint">setOptions()</code> method.</p>

<ul>
<li><code class="prettyprint">new</code>: boolean - true to return the modified document rather than the original. defaults to true</li>
<li><code class="prettyprint">upsert</code>: boolean - creates the object if it doesn&rsquo;t exist. defaults to false</li>
<li><code class="prettyprint">sort</code>: if multiple docs are found by the match condition, sets the sort order to choose which doc to update</li>
</ul>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">()</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">updateDocument</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span>

<span class="c1">// the following all execute the command</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">findOneAndUpdate</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">updateDocument</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// the document may not be found</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre>

<h3 id="findoneandremove">findOneAndRemove()</h3>

<p>Declares this query a <em>findAndModify</em> with remove query. Optionally pass a match clause, options, or callback. If a callback is passed, the query is executed.</p>

<p>When executed, the first matching document (if found) is modified according to the update document, removed from the collection and passed to the callback.</p>

<h5 id="options">options</h5>

<p>Options are passed to the <code class="prettyprint">setOptions()</code> method.</p>

<ul>
<li><code class="prettyprint">sort</code>: if multiple docs are found by the condition, sets the sort order to choose which doc to modify and remove</li>
</ul>
<pre class="highlight javascript"><code><span class="nx">A</span><span class="p">.</span><span class="nx">where</span><span class="p">().</span><span class="nx">findOneAndRemove</span><span class="p">()</span>
<span class="nx">A</span><span class="p">.</span><span class="nx">where</span><span class="p">().</span><span class="nx">findOneAndRemove</span><span class="p">(</span><span class="nx">match</span><span class="p">)</span>
<span class="nx">A</span><span class="p">.</span><span class="nx">where</span><span class="p">().</span><span class="nx">findOneAndRemove</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span>

<span class="c1">// the following all execute the command</span>
<span class="nx">A</span><span class="p">.</span><span class="nx">where</span><span class="p">().</span><span class="nx">findOneAndRemove</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">A</span><span class="p">.</span><span class="nx">where</span><span class="p">().</span><span class="nx">findOneAndRemove</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">A</span><span class="p">.</span><span class="nx">where</span><span class="p">().</span><span class="nx">findOneAndRemove</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">doc</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// the document may not be found</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre>

<h3 id="distinct">distinct()</h3>

<p>Declares this query a <em>distinct</em> query. Optionally pass the distinct field, a match clause or callback. If a callback is passed the query is executed.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">match</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">field</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">field</span><span class="p">)</span>

<span class="c1">// the following all execute the command</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">field</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">distinct</span><span class="p">(</span><span class="nx">match</span><span class="p">,</span> <span class="nx">field</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
<span class="p">})</span>
</code></pre>

<h3 id="exec">exec()</h3>

<p>Executes the query.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">findOne</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'route'</span><span class="p">).</span><span class="nx">intersects</span><span class="p">(</span><span class="nx">polygon</span><span class="p">).</span><span class="nx">exec</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">docs</span><span class="p">){})</span>
</code></pre>

<h3 id="stream">stream()</h3>

<p>Executes the query and returns a stream.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">stream</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">().</span><span class="nx">stream</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
<span class="nx">stream</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'data'</span><span class="p">,</span> <span class="nx">cb</span><span class="p">);</span>
<span class="nx">stream</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'close'</span><span class="p">,</span> <span class="nx">fn</span><span class="p">);</span>
</code></pre>

<p>Note: this only works with <code class="prettyprint">find()</code> operations.</p>

<p>Note: returns the stream object directly from the node-mongodb-native driver. (currently streams1 type stream). Any options will be passed along to the <a href="http://mongodb.github.io/node-mongodb-native/api-generated/cursor.html#stream">driver method</a>.</p>

<hr>

<h3 id="all">all()</h3>

<p>Specifies an <code class="prettyprint">$all</code> query condition</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'permission'</span><span class="p">).</span><span class="nx">all</span><span class="p">([</span><span class="s1">'read'</span><span class="p">,</span> <span class="s1">'write'</span><span class="p">])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/all/">MongoDB documentation</a></p>

<h3 id="and">and()</h3>

<p>Specifies arguments for an <code class="prettyprint">$and</code> condition</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">and</span><span class="p">([{</span> <span class="na">color</span><span class="p">:</span> <span class="s1">'green'</span> <span class="p">},</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="s1">'ok'</span> <span class="p">}])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/and/">MongoDB documentation</a></p>

<h3 id="box">box()</h3>

<p>Specifies a <code class="prettyprint">$box</code> condition</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">lowerLeft</span> <span class="o">=</span> <span class="p">[</span><span class="mf">40.73083</span><span class="p">,</span> <span class="o">-</span><span class="mf">73.99756</span><span class="p">]</span>
<span class="kd">var</span> <span class="nx">upperRight</span><span class="o">=</span> <span class="p">[</span><span class="mf">40.741404</span><span class="p">,</span>  <span class="o">-</span><span class="mf">73.988135</span><span class="p">]</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'location'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">box</span><span class="p">(</span><span class="nx">lowerLeft</span><span class="p">,</span> <span class="nx">upperRight</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/box/">MongoDB Documentation</a></p>

<h3 id="circle">circle()</h3>

<p>Specifies a <code class="prettyprint">$center</code> or <code class="prettyprint">$centerSphere</code> condition.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">area</span> <span class="o">=</span> <span class="p">{</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">],</span> <span class="na">radius</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="na">unique</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">circle</span><span class="p">(</span><span class="nx">area</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">circle</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">,</span> <span class="nx">area</span><span class="p">);</span>

<span class="c1">// for spherical calculations</span>
<span class="kd">var</span> <span class="nx">area</span> <span class="o">=</span> <span class="p">{</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">],</span> <span class="na">radius</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="na">unique</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">spherical</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">circle</span><span class="p">(</span><span class="nx">area</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">circle</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">,</span> <span class="nx">area</span><span class="p">);</span>
</code></pre>

<ul>
<li><a href="http://docs.mongodb.org/manual/reference/operator/center/">MongoDB Documentation - center</a></li>
<li><a href="http://docs.mongodb.org/manual/reference/operator/centerSphere/">MongoDB Documentation - centerSphere</a></li>
</ul>

<h3 id="elemmatch">elemMatch()</h3>

<p>Specifies an <code class="prettyprint">$elemMatch</code> condition</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'comment'</span><span class="p">).</span><span class="nx">elemMatch</span><span class="p">({</span> <span class="na">author</span><span class="p">:</span> <span class="s1">'autobot'</span><span class="p">,</span> <span class="na">votes</span><span class="p">:</span> <span class="p">{</span><span class="na">$gte</span><span class="p">:</span> <span class="mi">5</span><span class="p">}})</span>

<span class="nx">query</span><span class="p">.</span><span class="nx">elemMatch</span><span class="p">(</span><span class="s1">'comment'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">elem</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">elem</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'author'</span><span class="p">).</span><span class="nx">equals</span><span class="p">(</span><span class="s1">'autobot'</span><span class="p">);</span>
  <span class="nx">elem</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'votes'</span><span class="p">).</span><span class="nx">gte</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
<span class="p">})</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/elemMatch/">MongoDB Documentation</a></p>

<h3 id="equals">equals()</h3>

<p>Specifies the complementary comparison value for the path specified with <code class="prettyprint">where()</code>.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'age'</span><span class="p">).</span><span class="nx">equals</span><span class="p">(</span><span class="mi">49</span><span class="p">);</span>

<span class="c1">// is the same as</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">({</span> <span class="s1">'age'</span><span class="p">:</span> <span class="mi">49</span> <span class="p">});</span>
</code></pre>

<h3 id="exists">exists()</h3>

<p>Specifies an <code class="prettyprint">$exists</code> condition</p>
<pre class="highlight javascript"><code><span class="c1">// { name: { $exists: true }}</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'name'</span><span class="p">).</span><span class="nx">exists</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'name'</span><span class="p">).</span><span class="nx">exists</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">exists</span><span class="p">(</span><span class="s1">'name'</span><span class="p">)</span>

<span class="c1">// { name: { $exists: false }}</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'name'</span><span class="p">).</span><span class="nx">exists</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">exists</span><span class="p">(</span><span class="s1">'name'</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/exists/">MongoDB Documentation</a></p>

<h3 id="geometry">geometry()</h3>

<p>Specifies a <code class="prettyprint">$geometry</code> condition</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">polyA</span> <span class="o">=</span> <span class="p">[[[</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span> <span class="p">],</span> <span class="p">[</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">40</span> <span class="p">],</span> <span class="p">[</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span> <span class="p">],</span> <span class="p">[</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">20</span> <span class="p">]]]</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Polygon'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="nx">polyA</span> <span class="p">})</span>

<span class="c1">// or</span>
<span class="kd">var</span> <span class="nx">polyB</span> <span class="o">=</span> <span class="p">[[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">],</span> <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span> <span class="p">]]</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'LineString'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="nx">polyB</span> <span class="p">})</span>

<span class="c1">// or</span>
<span class="kd">var</span> <span class="nx">polyC</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">]</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Point'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="nx">polyC</span> <span class="p">})</span>

<span class="c1">// or</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">intersects</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Point'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="nx">polyC</span> <span class="p">})</span>

<span class="c1">// or</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">near</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Point'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span> <span class="p">})</span>
</code></pre>

<p><code class="prettyprint">geometry()</code> <strong>must</strong> come after <code class="prettyprint">intersects()</code>, <code class="prettyprint">within()</code>, or <code class="prettyprint">near()</code>.</p>

<p>The <code class="prettyprint">object</code> argument must contain <code class="prettyprint">type</code> and <code class="prettyprint">coordinates</code> properties.</p>

<ul>
<li>type <code class="prettyprint">String</code></li>
<li>coordinates <code class="prettyprint">Array</code></li>
</ul>

<p><a href="http://docs.mongodb.org/manual/reference/operator/geometry/">MongoDB Documentation</a></p>

<h3 id="gt">gt()</h3>

<p>Specifies a <code class="prettyprint">$gt</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'clicks'</span><span class="p">).</span><span class="nx">gt</span><span class="p">(</span><span class="mi">999</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/gt/">MongoDB Documentation</a></p>

<h3 id="gte">gte()</h3>

<p>Specifies a <code class="prettyprint">$gte</code> query condition.</p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/gte/">MongoDB Documentation</a></p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'clicks'</span><span class="p">).</span><span class="nx">gte</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>
</code></pre>

<h3 id="in">in()</h3>

<p>Specifies an <code class="prettyprint">$in</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'author_id'</span><span class="p">).</span><span class="k">in</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">48901</span><span class="p">,</span> <span class="mi">761</span><span class="p">])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/in/">MongoDB Documentation</a></p>

<h3 id="intersects">intersects()</h3>

<p>Declares an <code class="prettyprint">$geoIntersects</code> query for <code class="prettyprint">geometry()</code>.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'path'</span><span class="p">).</span><span class="nx">intersects</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s1">'LineString'</span>
  <span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[[</span><span class="mf">180.0</span><span class="p">,</span> <span class="mf">11.0</span><span class="p">],</span> <span class="p">[</span><span class="mi">180</span><span class="p">,</span> <span class="mf">9.0</span><span class="p">]]</span>
<span class="p">})</span>

<span class="c1">// geometry arguments are supported</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'path'</span><span class="p">).</span><span class="nx">intersects</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s1">'LineString'</span>
  <span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[[</span><span class="mf">180.0</span><span class="p">,</span> <span class="mf">11.0</span><span class="p">],</span> <span class="p">[</span><span class="mi">180</span><span class="p">,</span> <span class="mf">9.0</span><span class="p">]]</span>
<span class="p">})</span>
</code></pre>

<p><strong>Must</strong> be used after <code class="prettyprint">where()</code>.</p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/geoIntersects/">MongoDB Documentation</a></p>

<h3 id="lt">lt()</h3>

<p>Specifies a <code class="prettyprint">$lt</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'clicks'</span><span class="p">).</span><span class="nx">lt</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/lt/">MongoDB Documentation</a></p>

<h3 id="lte">lte()</h3>

<p>Specifies a <code class="prettyprint">$lte</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'clicks'</span><span class="p">).</span><span class="nx">lte</span><span class="p">(</span><span class="mi">49</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/lte/">MongoDB Documentation</a></p>

<h3 id="maxdistance">maxDistance()</h3>

<p>Specifies a <code class="prettyprint">$maxDistance</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'location'</span><span class="p">).</span><span class="nx">near</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">139</span><span class="p">,</span> <span class="mf">74.3</span><span class="p">]</span> <span class="p">}).</span><span class="nx">maxDistance</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/maxDistance/">MongoDB Documentation</a></p>

<h3 id="mod">mod()</h3>

<p>Specifies a <code class="prettyprint">$mod</code> condition</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'count'</span><span class="p">).</span><span class="nx">mod</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/mod/">MongoDB Documentation</a></p>

<h3 id="ne">ne()</h3>

<p>Specifies a <code class="prettyprint">$ne</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'status'</span><span class="p">).</span><span class="nx">ne</span><span class="p">(</span><span class="s1">'ok'</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/ne/">MongoDB Documentation</a></p>

<h3 id="nin">nin()</h3>

<p>Specifies an <code class="prettyprint">$nin</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'author_id'</span><span class="p">).</span><span class="nx">nin</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">48901</span><span class="p">,</span> <span class="mi">761</span><span class="p">])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/nin/">MongoDB Documentation</a></p>

<h3 id="nor">nor()</h3>

<p>Specifies arguments for an <code class="prettyprint">$nor</code> condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">nor</span><span class="p">([{</span> <span class="na">color</span><span class="p">:</span> <span class="s1">'green'</span> <span class="p">},</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="s1">'ok'</span> <span class="p">}])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/nor/">MongoDB Documentation</a></p>

<h3 id="near">near()</h3>

<p>Specifies arguments for a <code class="prettyprint">$near</code> or <code class="prettyprint">$nearSphere</code> condition.</p>

<p>These operators return documents sorted by distance.</p>

<h4 id="example">Example</h4>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">near</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span> <span class="p">});</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">near</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span> <span class="na">maxDistance</span><span class="p">:</span> <span class="mi">5</span> <span class="p">});</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">near</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">,</span> <span class="p">{</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span> <span class="na">maxDistance</span><span class="p">:</span> <span class="mi">5</span> <span class="p">});</span>

<span class="c1">// GeoJSON</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">near</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Point'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span> <span class="p">}});</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">near</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Point'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span> <span class="p">},</span> <span class="na">maxDistance</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="na">spherical</span><span class="p">:</span> <span class="kc">true</span> <span class="p">});</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">near</span><span class="p">().</span><span class="nx">geometry</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Point'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span> <span class="p">});</span>

<span class="c1">// For a $nearSphere condition, pass the `spherical` option.</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">near</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span> <span class="na">maxDistance</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="na">spherical</span><span class="p">:</span> <span class="kc">true</span> <span class="p">});</span>
</code></pre>

<p><a href="http://www.mongodb.org/display/DOCS/Geospatial+Indexing">MongoDB Documentation</a></p>

<h3 id="or">or()</h3>

<p>Specifies arguments for an <code class="prettyprint">$or</code> condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">or</span><span class="p">([{</span> <span class="na">color</span><span class="p">:</span> <span class="s1">'red'</span> <span class="p">},</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="s1">'emergency'</span> <span class="p">}])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/or/">MongoDB Documentation</a></p>

<h3 id="polygon">polygon()</h3>

<p>Specifies a <code class="prettyprint">$polygon</code> condition</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">().</span><span class="nx">polygon</span><span class="p">([</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">],</span> <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">25</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">15</span><span class="p">])</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">polygon</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">,</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">],</span> <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">25</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">15</span><span class="p">])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/polygon/">MongoDB Documentation</a></p>

<h3 id="regex">regex()</h3>

<p>Specifies a <code class="prettyprint">$regex</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'name'</span><span class="p">).</span><span class="nx">regex</span><span class="p">(</span><span class="sr">/^sixstepsrecords/</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/regex/">MongoDB Documentation</a></p>

<h3 id="select">select()</h3>

<p>Specifies which document fields to include or exclude</p>
<pre class="highlight javascript"><code><span class="c1">// 1 means include, 0 means exclude</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">select</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">address</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">_id</span><span class="p">:</span> <span class="mi">0</span> <span class="p">})</span>

<span class="c1">// or</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">select</span><span class="p">(</span><span class="s1">'name address -_id'</span><span class="p">)</span>
</code></pre>

<h5 id="string-syntax">String syntax</h5>

<p>When passing a string, prefixing a path with <code class="prettyprint">-</code> will flag that path as excluded. When a path does not have the <code class="prettyprint">-</code> prefix, it is included.</p>
<pre class="highlight javascript"><code><span class="c1">// include a and b, exclude c</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s1">'a b -c'</span><span class="p">);</span>

<span class="c1">// or you may use object notation, useful when</span>
<span class="c1">// you have keys already prefixed with a "-"</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">select</span><span class="p">({</span><span class="na">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">b</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">c</span><span class="p">:</span> <span class="mi">0</span><span class="p">});</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<h3 id="selected">selected()</h3>

<p>Determines if the query has selected any fields.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">();</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selected</span><span class="p">()</span> <span class="c1">// false</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s1">'-name'</span><span class="p">);</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selected</span><span class="p">()</span> <span class="c1">// true</span>
</code></pre>

<h3 id="selectedinclusively">selectedInclusively()</h3>

<p>Determines if the query has selected any fields inclusively.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">().</span><span class="nx">select</span><span class="p">(</span><span class="s1">'name'</span><span class="p">);</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selectedInclusively</span><span class="p">()</span> <span class="c1">// true</span>

<span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">();</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selected</span><span class="p">()</span> <span class="c1">// false</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s1">'-name'</span><span class="p">);</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selectedInclusively</span><span class="p">()</span> <span class="c1">// false</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selectedExclusively</span><span class="p">()</span> <span class="c1">// true</span>
</code></pre>

<h3 id="selectedexclusively">selectedExclusively()</h3>

<p>Determines if the query has selected any fields exclusively.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">().</span><span class="nx">select</span><span class="p">(</span><span class="s1">'-name'</span><span class="p">);</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selectedExclusively</span><span class="p">()</span> <span class="c1">// true</span>

<span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">();</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selected</span><span class="p">()</span> <span class="c1">// false</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s1">'name'</span><span class="p">);</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selectedExclusively</span><span class="p">()</span> <span class="c1">// false</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">selectedInclusively</span><span class="p">()</span> <span class="c1">// true</span>
</code></pre>

<h3 id="size">size()</h3>

<p>Specifies a <code class="prettyprint">$size</code> query condition.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'someArray'</span><span class="p">).</span><span class="nx">size</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/operator/size/">MongoDB Documentation</a></p>

<h3 id="slice">slice()</h3>

<p>Specifies a <code class="prettyprint">$slice</code> projection for a <code class="prettyprint">path</code></p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'comments'</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'comments'</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'comments'</span><span class="p">).</span><span class="nx">slice</span><span class="p">([</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/projection/slice/">MongoDB Documentation</a></p>

<h3 id="within">within()</h3>

<p>Sets a <code class="prettyprint">$geoWithin</code> or <code class="prettyprint">$within</code> argument for geo-spatial queries.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">within</span><span class="p">().</span><span class="nx">box</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">within</span><span class="p">().</span><span class="nx">circle</span><span class="p">()</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">within</span><span class="p">().</span><span class="nx">geometry</span><span class="p">()</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">({</span> <span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="mi">50</span><span class="p">,</span><span class="mi">50</span><span class="p">],</span> <span class="na">radius</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="na">unique</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">spherical</span><span class="p">:</span> <span class="kc">true</span> <span class="p">});</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">({</span> <span class="na">box</span><span class="p">:</span> <span class="p">[[</span><span class="mf">40.73</span><span class="p">,</span> <span class="o">-</span><span class="mf">73.9</span><span class="p">],</span> <span class="p">[</span><span class="mf">40.7</span><span class="p">,</span> <span class="o">-</span><span class="mf">73.988</span><span class="p">]]</span> <span class="p">});</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">({</span> <span class="na">polygon</span><span class="p">:</span> <span class="p">[[],[],[],[]]</span> <span class="p">});</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">([],</span> <span class="p">[],</span> <span class="p">[])</span> <span class="c1">// polygon</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">([],</span> <span class="p">[])</span> <span class="c1">// box</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'loc'</span><span class="p">).</span><span class="nx">within</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'LineString'</span><span class="p">,</span> <span class="na">coordinates</span><span class="p">:</span> <span class="p">[...]</span> <span class="p">});</span> <span class="c1">// geometry</span>
</code></pre>

<p>As of mquery 2.0, <code class="prettyprint">$geoWithin</code> is used by default. This impacts you if running MongoDB &lt; 2.4. To alter this behavior, see <a href="#mqueryusegeowithin">mquery.use$geoWithin</a>.</p>

<p><strong>Must</strong> be used after <code class="prettyprint">where()</code>.</p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/geoWithin/">MongoDB Documentation</a></p>

<h3 id="where">where()</h3>

<p>Specifies a <code class="prettyprint">path</code> for use with chaining</p>
<pre class="highlight javascript"><code><span class="c1">// instead of writing:</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">({</span><span class="na">age</span><span class="p">:</span> <span class="p">{</span><span class="na">$gte</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span> <span class="na">$lte</span><span class="p">:</span> <span class="mi">65</span><span class="p">}});</span>

<span class="c1">// we can instead write:</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">where</span><span class="p">(</span><span class="s1">'age'</span><span class="p">).</span><span class="nx">gte</span><span class="p">(</span><span class="mi">21</span><span class="p">).</span><span class="nx">lte</span><span class="p">(</span><span class="mi">65</span><span class="p">);</span>

<span class="c1">// passing query conditions is permitted too</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">().</span><span class="nx">where</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="s1">'vonderful'</span> <span class="p">})</span>

<span class="c1">// chaining</span>
<span class="nx">mquery</span><span class="p">()</span>
<span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'age'</span><span class="p">).</span><span class="nx">gte</span><span class="p">(</span><span class="mi">21</span><span class="p">).</span><span class="nx">lte</span><span class="p">(</span><span class="mi">65</span><span class="p">)</span>
<span class="p">.</span><span class="nx">where</span><span class="p">({</span> <span class="s1">'name'</span><span class="p">:</span> <span class="o">/^</span><span class="nx">vonderful</span><span class="o">/</span><span class="nx">i</span> <span class="p">})</span>
<span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="s1">'friends'</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>
</code></pre>

<h3 id="where">$where()</h3>

<p>Specifies a <code class="prettyprint">$where</code> condition.</p>

<p>Use <code class="prettyprint">$where</code> when you need to select documents using a JavaScript expression.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">$where</span><span class="p">(</span><span class="s1">'this.comments.length &gt; 10 || this.name.length &gt; 5'</span><span class="p">).</span><span class="nx">exec</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span>

<span class="nx">query</span><span class="p">.</span><span class="nx">$where</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">comments</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">;</span>
<span class="p">})</span>
</code></pre>

<p>Only use <code class="prettyprint">$where</code> when you have a condition that cannot be met using other MongoDB operators like <code class="prettyprint">$lt</code>. Be sure to read about all of <a href="http://docs.mongodb.org/manual/reference/operator/where/">its caveats</a> before using.</p>

<hr>

<h3 id="batchsize">batchSize()</h3>

<p>Specifies the batchSize option.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">batchSize</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/method/cursor.batchSize/">MongoDB documentation</a></p>

<h3 id="comment">comment()</h3>

<p>Specifies the comment option.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">comment</span><span class="p">(</span><span class="s1">'login query'</span><span class="p">);</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/">MongoDB documentation</a></p>

<h3 id="hint">hint()</h3>

<p>Sets query hints.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">hint</span><span class="p">({</span> <span class="na">indexA</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">indexB</span><span class="p">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">})</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/hint/">MongoDB documentation</a></p>

<h3 id="limit">limit()</h3>

<p>Specifies the limit option.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">limit</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/method/cursor.limit/">MongoDB documentation</a></p>

<h3 id="maxscan">maxScan()</h3>

<p>Specifies the maxScan option.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">maxScan</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/maxScan/">MongoDB documentation</a></p>

<h3 id="maxtime">maxTime()</h3>

<p>Specifies the maxTimeMS option.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">maxTime</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/method/cursor.maxTimeMS/">MongoDB documentation</a></p>

<h3 id="skip">skip()</h3>

<p>Specifies the skip option.</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">skip</span><span class="p">(</span><span class="mi">100</span><span class="p">).</span><span class="nx">limit</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/method/cursor.skip/">MongoDB documentation</a></p>

<h3 id="sort">sort()</h3>

<p>Sets the query sort order.</p>

<p>If an object is passed, key values allowed are <code class="prettyprint">asc</code>, <code class="prettyprint">desc</code>, <code class="prettyprint">ascending</code>, <code class="prettyprint">descending</code>, <code class="prettyprint">1</code>, and <code class="prettyprint">-1</code>.</p>

<p>If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with <code class="prettyprint">-</code> which will be treated as descending.</p>
<pre class="highlight javascript"><code><span class="c1">// these are equivalent</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">sort</span><span class="p">({</span> <span class="na">field</span><span class="p">:</span> <span class="s1">'asc'</span><span class="p">,</span> <span class="na">test</span><span class="p">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">});</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="s1">'field -test'</span><span class="p">);</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/method/cursor.sort/">MongoDB documentation</a></p>

<h3 id="read">read()</h3>

<p>Sets the readPreference option for the query.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'primary'</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'p'</span><span class="p">)</span>  <span class="c1">// same as primary</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'primaryPreferred'</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'pp'</span><span class="p">)</span> <span class="c1">// same as primaryPreferred</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'secondary'</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'s'</span><span class="p">)</span>  <span class="c1">// same as secondary</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'secondaryPreferred'</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'sp'</span><span class="p">)</span> <span class="c1">// same as secondaryPreferred</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'nearest'</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">read</span><span class="p">(</span><span class="s1">'n'</span><span class="p">)</span>  <span class="c1">// same as nearest</span>
</code></pre>

<h5 id="preferences">Preferences:</h5>

<ul>
<li><code class="prettyprint">primary</code> - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.</li>
<li><code class="prettyprint">secondary</code> - Read from secondary if available, otherwise error.</li>
<li><code class="prettyprint">primaryPreferred</code> - Read from primary if available, otherwise a secondary.</li>
<li><code class="prettyprint">secondaryPreferred</code> - Read from a secondary if available, otherwise read from the primary.</li>
<li><code class="prettyprint">nearest</code> - All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.</li>
</ul>

<p>Aliases</p>

<ul>
<li><code class="prettyprint">p</code>   primary</li>
<li><code class="prettyprint">pp</code>  primaryPreferred</li>
<li><code class="prettyprint">s</code>   secondary</li>
<li><code class="prettyprint">sp</code>  secondaryPreferred</li>
<li><code class="prettyprint">n</code>   nearest</li>
</ul>

<h5 id="preference-tags">Preference Tags:</h5>

<p>To keep the separation of concerns between <code class="prettyprint">mquery</code> and your driver
clean, <code class="prettyprint">mquery#read()</code> no longer handles specifying a second <code class="prettyprint">tags</code> argument as of version 0.5.
If you need to specify tags, pass any non-string argument as the first argument.
<code class="prettyprint">mquery</code> will pass this argument untouched to your collections methods later.
For example:</p>
<pre class="highlight javascript"><code><span class="c1">// example of specifying tags using the Node.js driver</span>
<span class="kd">var</span> <span class="nx">ReadPref</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'mongodb'</span><span class="p">).</span><span class="nx">ReadPreference</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">preference</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ReadPref</span><span class="p">(</span><span class="s1">'secondary'</span><span class="p">,</span> <span class="p">[{</span> <span class="na">dc</span><span class="p">:</span><span class="s1">'sf'</span><span class="p">,</span> <span class="na">s</span><span class="p">:</span> <span class="mi">1</span> <span class="p">},{</span> <span class="na">dc</span><span class="p">:</span><span class="s1">'ma'</span><span class="p">,</span> <span class="na">s</span><span class="p">:</span> <span class="mi">2</span> <span class="p">}]);</span>
<span class="nx">mquery</span><span class="p">(..).</span><span class="nx">read</span><span class="p">(</span><span class="nx">preference</span><span class="p">).</span><span class="nx">exec</span><span class="p">();</span>
</code></pre>

<p>Read more about how to use read preferences <a href="http://docs.mongodb.org/manual/applications/replication/#read-preference">here</a> and <a href="http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences">here</a>.</p>

<h3 id="slaveok">slaveOk()</h3>

<p>Sets the slaveOk option. <code class="prettyprint">true</code> allows reading from secondaries.</p>

<p><strong>deprecated</strong> use <a href="#read">read()</a> preferences instead if on mongodb &gt;= 2.2</p>
<pre class="highlight javascript"><code><span class="nx">query</span><span class="p">.</span><span class="nx">slaveOk</span><span class="p">()</span> <span class="c1">// true</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">slaveOk</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="nx">query</span><span class="p">.</span><span class="nx">slaveOk</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</code></pre>

<p><a href="http://docs.mongodb.org/manual/reference/method/rs.slaveOk/">MongoDB documentation</a></p>

<h3 id="snapshot">snapshot()</h3>

<p>Specifies this query as a snapshot query.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">snapshot</span><span class="p">()</span> <span class="c1">// true</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">snapshot</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">snapshot</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/reference/operator/snapshot/">MongoDB documentation</a></p>

<h3 id="tailable">tailable()</h3>

<p>Sets tailable option.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">tailable</span><span class="p">()</span> <span class="o">&lt;==</span> <span class="kc">true</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">tailable</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="nx">mquery</span><span class="p">().</span><span class="nx">tailable</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</code></pre>

<p><em>Cannot be used with <code class="prettyprint">distinct()</code>.</em></p>

<p><a href="http://docs.mongodb.org/manual/tutorial/create-tailable-cursor/">MongoDB Documentation</a></p>

<h2 id="helpers">Helpers</h2>

<h3 id="collection">collection()</h3>

<p>Sets the querys collection.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">collection</span><span class="p">(</span><span class="nx">aCollection</span><span class="p">)</span>
</code></pre>

<h3 id="then">then()</h3>

<p>Executes the query and returns a promise which will be resolved with the query results or rejected if the query responds with an error.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">find</span><span class="p">(..).</span><span class="nx">then</span><span class="p">(</span><span class="nx">success</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
</code></pre>

<p>This is very useful when combined with <a href="https://github.com/visionmedia/co">co</a> or <a href="https://github.com/koajs/koa">koa</a>, which automatically resolve promise-like objects for you.</p>
<pre class="highlight javascript"><code><span class="nx">co</span><span class="p">(</span><span class="kd">function</span><span class="o">*</span><span class="p">(){</span>
  <span class="kd">var</span> <span class="nx">doc</span> <span class="o">=</span> <span class="k">yield</span> <span class="nx">mquery</span><span class="p">().</span><span class="nx">findOne</span><span class="p">({</span> <span class="na">_id</span><span class="p">:</span> <span class="mi">499</span> <span class="p">});</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span> <span class="c1">// { _id: 499, name: 'amazing', .. }</span>
<span class="p">})();</span>
</code></pre>

<p><em>NOTE</em>:
The returned promise is a <a href="https://github.com/petkaantonov/bluebird/">bluebird</a> promise but this is customizable. If you want to
use your favorite promise library, simply set <code class="prettyprint">mquery.Promise = YourPromiseConstructor</code>.
Your <code class="prettyprint">Promise</code> must be <a href="http://promisesaplus.com/">promises A+</a> compliant.</p>

<h3 id="thunk">thunk()</h3>

<p>Returns a thunk which when called runs the query&rsquo;s <code class="prettyprint">exec</code> method passing the results to the callback.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">thunk</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">(</span><span class="nx">collection</span><span class="p">).</span><span class="nx">find</span><span class="p">({..}).</span><span class="nx">thunk</span><span class="p">();</span>

<span class="nx">thunk</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">results</span><span class="p">)</span> <span class="p">{</span>

<span class="p">})</span>
</code></pre>

<h3 id="merge-object">merge(object)</h3>

<p>Merges other mquery or match condition objects into this one. When an muery instance is passed, its match conditions, field selection and options are merged.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">drum</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'drum'</span> <span class="p">}).</span><span class="nx">collection</span><span class="p">(</span><span class="nx">instruments</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">redDrum</span> <span class="o">=</span> <span class="nx">mqery</span><span class="p">({</span> <span class="na">color</span><span class="p">:</span> <span class="s1">'red'</span> <span class="p">}).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">drum</span><span class="p">);</span>
<span class="nx">redDrum</span><span class="p">.</span><span class="nx">count</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'there are %d red drums'</span><span class="p">,</span> <span class="nx">n</span><span class="p">);</span>
<span class="p">})</span>
</code></pre>

<p>Internally uses <code class="prettyprint">mquery.canMerge</code> to determine validity.</p>

<h3 id="setoptions-options">setOptions(options)</h3>

<p>Sets query options.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">().</span><span class="nx">setOptions</span><span class="p">({</span> <span class="na">collection</span><span class="p">:</span> <span class="nx">coll</span><span class="p">,</span> <span class="na">limit</span><span class="p">:</span> <span class="mi">20</span> <span class="p">})</span>
</code></pre>

<h5 id="options">options</h5>

<ul>
<li><a href="#tailable">tailable</a> *</li>
<li><a href="#sort">sort</a> *</li>
<li><a href="#limit">limit</a> *</li>
<li><a href="#skip">skip</a> *</li>
<li><a href="#maxscan">maxScan</a> *</li>
<li><a href="#maxtime">maxTime</a> *</li>
<li><a href="#batchSize">batchSize</a> *</li>
<li><a href="#comment">comment</a> *</li>
<li><a href="#snapshot">snapshot</a> *</li>
<li><a href="#hint">hint</a> *</li>
<li><a href="#slaveOk">slaveOk</a> *</li>
<li><a href="http://docs.mongodb.org/manual/reference/write-concern/">safe</a>: Boolean - passed through to the collection. Setting to <code class="prettyprint">true</code> is equivalent to <code class="prettyprint">{ w: 1 }</code></li>
<li><a href="#collection">collection</a>: the collection to query against</li>
</ul>

<p><em>* denotes a query helper method is also available</em></p>

<h3 id="settracefunction-func">setTraceFunction(func)</h3>

<p>Set a function to trace this query. Useful for profiling or logging.</p>
<pre class="highlight javascript"><code><span class="kd">function</span> <span class="nx">traceFunction</span> <span class="p">(</span><span class="nx">method</span><span class="p">,</span> <span class="nx">queryInfo</span><span class="p">,</span> <span class="nx">query</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'starting '</span> <span class="o">+</span> <span class="nx">method</span> <span class="o">+</span> <span class="s1">' query'</span><span class="p">);</span>

  <span class="k">return</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">result</span><span class="p">,</span> <span class="nx">millis</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'finished '</span> <span class="o">+</span> <span class="nx">method</span> <span class="o">+</span> <span class="s1">' query in '</span> <span class="o">+</span> <span class="nx">millis</span> <span class="o">+</span> <span class="s1">'ms'</span><span class="p">);</span>
  <span class="p">};</span>
<span class="p">}</span>

<span class="nx">mquery</span><span class="p">().</span><span class="nx">setTraceFunction</span><span class="p">(</span><span class="nx">traceFunction</span><span class="p">).</span><span class="nx">findOne</span><span class="p">({</span><span class="na">name</span><span class="p">:</span> <span class="s1">'Joe'</span><span class="p">},</span> <span class="nx">cb</span><span class="p">);</span>
</code></pre>

<p>The trace function is passed (method, queryInfo, query)</p>

<ul>
<li>method is the name of the method being called (e.g. findOne)</li>
<li>queryInfo contains information about the query:

<ul>
<li>conditions: query conditions/criteria</li>
<li>options: options such as sort, fields, etc</li>
<li>doc: document being updated</li>
</ul></li>
<li>query is the query object</li>
</ul>

<p>The trace function should return a callback function which accepts:
- err: error, if any
- result: result, if any
- millis: time spent waiting for query result</p>

<p>NOTE: stream requests are not traced.</p>

<h3 id="mquery-setglobaltracefunction-func">mquery.setGlobalTraceFunction(func)</h3>

<p>Similar to <code class="prettyprint">setTraceFunction()</code> but automatically applied to all queries.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">.</span><span class="nx">setTraceFunction</span><span class="p">(</span><span class="nx">traceFunction</span><span class="p">);</span>
</code></pre>

<h3 id="mquery-canmerge-conditions">mquery.canMerge(conditions)</h3>

<p>Determines if <code class="prettyprint">conditions</code> can be merged using <code class="prettyprint">mquery().merge()</code>.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">({</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'drum'</span> <span class="p">});</span>
<span class="kd">var</span> <span class="nx">okToMerge</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">.</span><span class="nx">canMerge</span><span class="p">(</span><span class="nx">anObject</span><span class="p">)</span>
<span class="k">if</span> <span class="p">(</span><span class="nx">okToMerge</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">query</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">anObject</span><span class="p">);</span>
<span class="p">}</span>
</code></pre>

<h2 id="mquery-use-geowithin">mquery.use$geoWithin</h2>

<p>MongoDB 2.4 introduced the <code class="prettyprint">$geoWithin</code> operator which replaces and is 100% backward compatible with <code class="prettyprint">$within</code>. As of mquery 0.2, we default to using <code class="prettyprint">$geoWithin</code> for all <code class="prettyprint">within()</code> calls.</p>

<p>If you are running MongoDB &lt; 2.4 this will be problematic. To force <code class="prettyprint">mquery</code> to be backward compatible and always use <code class="prettyprint">$within</code>, set the <code class="prettyprint">mquery.use$geoWithin</code> flag to <code class="prettyprint">false</code>.</p>
<pre class="highlight javascript"><code><span class="nx">mquery</span><span class="p">.</span><span class="nx">use$geoWithin</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</code></pre>

<h2 id="custom-base-queries">Custom Base Queries</h2>

<p>Often times we want custom base queries that encapsulate predefined criteria. With <code class="prettyprint">mquery</code> this is easy. First create the query you want to reuse and call its <code class="prettyprint">toConstructor()</code> method which returns a new subclass of <code class="prettyprint">mquery</code> that retains all options and criteria of the original.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">greatMovies</span> <span class="o">=</span> <span class="nx">mquery</span><span class="p">(</span><span class="nx">movieCollection</span><span class="p">).</span><span class="nx">where</span><span class="p">(</span><span class="s1">'rating'</span><span class="p">).</span><span class="nx">gte</span><span class="p">(</span><span class="mf">4.5</span><span class="p">).</span><span class="nx">toConstructor</span><span class="p">();</span>

<span class="c1">// use it!</span>
<span class="nx">greatMovies</span><span class="p">().</span><span class="nx">count</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'There are %d great movies'</span><span class="p">,</span> <span class="nx">n</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">greatMovies</span><span class="p">().</span><span class="nx">where</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="sr">/^Life/</span> <span class="p">}).</span><span class="nx">select</span><span class="p">(</span><span class="s1">'name'</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">docs</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">docs</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>

<h2 id="validation">Validation</h2>

<p>Method and options combinations are checked for validity at runtime to prevent creation of invalid query constructs. For example, a <code class="prettyprint">distinct</code> query does not support specifying options like <code class="prettyprint">hint</code> or field selection. In this case an error will be thrown so you can catch these mistakes in development.</p>

<h2 id="debug-support">Debug support</h2>

<p>Debug mode is provided through the use of the <a href="https://github.com/visionmedia/debug">debug</a> module. To enable:</p>

<p>DEBUG=mquery node yourprogram.js</p>

<p>Read the debug module documentation for more details.</p>

<h2 id="general-compatibility">General compatibility</h2>

<h4 id="objectids">ObjectIds</h4>

<p><code class="prettyprint">mquery</code> clones query arguments before passing them to a <code class="prettyprint">collection</code> method for execution.
This prevents accidental side-affects to the objects you pass.
To clone <code class="prettyprint">ObjectIds</code> we need to make some assumptions.</p>

<p>First, to check if an object is an <code class="prettyprint">ObjectId</code>, we check its constructors name. If it matches either
<code class="prettyprint">ObjectId</code> or <code class="prettyprint">ObjectID</code> we clone it.</p>

<p>To clone <code class="prettyprint">ObjectIds</code>, we call its optional <code class="prettyprint">clone</code> method. If a <code class="prettyprint">clone</code> method does not exist, we fall
back to calling <code class="prettyprint">new obj.constructor(obj.id)</code>. We assume, for compatibility with the
Node.js driver, that the <code class="prettyprint">ObjectId</code> instance has a public <code class="prettyprint">id</code> property and that
when creating an <code class="prettyprint">ObjectId</code> instance we can pass that <code class="prettyprint">id</code> as an argument.</p>

<h4 id="read-preferences">Read Preferences</h4>

<p><code class="prettyprint">mquery</code> supports specifying <a href="#">Read Preferences</a> to control from which MongoDB node your query will read.
The Read Preferences spec also support specifying tags. To pass tags, some
drivers (Node.js driver) require passing a special constructor that handles both the read preference and its tags.
If you need to specify tags, pass an instance of your drivers ReadPreference constructor or roll your own. <code class="prettyprint">mquery</code> will store whatever you provide and pass later to your collection during execution.</p>

<h2 id="future-goals">Future goals</h2>

<ul>
<li>mongo shell compatibility</li>
<li>browser compatibility</li>
</ul>

<h2 id="installation">Installation</h2>

<p>$ npm install mquery</p>

<h2 id="license">License</h2>

<p><a href="https://github.com/aheckmann/mquery/blob/master/LICENSE">MIT</a></p>
