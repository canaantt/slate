<h2 id="2-10-2-2015-10-01">2.10.2 (2015-10-01)</h2>

<p>Features:</p>

<ul>
<li><code class="prettyprint">.timeout()</code> now takes a custom error object as second argument</li>
</ul>

<h2 id="2-10-1-2015-09-21">2.10.1 (2015-09-21)</h2>

<ul>
<li>Fix error &ldquo;Cannot promisify an API that has normal methods with &lsquo;Async&rsquo;-suffix&rdquo; when promisifying certain objects with a custom promisifier</li>
</ul>

<h2 id="2-10-0-2015-09-08">2.10.0 (2015-09-08)</h2>

<p>Features:</p>

<ul>
<li><code class="prettyprint">Promise.using</code> can now take the promises-for-resources as an array (<a href=".">#733</a>).</li>
<li>Browser builds for minimal core are now hosted on CDN (<a href=".">#724</a>).</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Disabling debug mode with <code class="prettyprint">BLUEBIRD_DEBUG=0</code> environment variable now works (<a href=".">#719</a>).</li>
<li>Fix unhandled rejection reporting when passing rejected promise to <code class="prettyprint">.return()</code> (<a href=".">#721</a>).</li>
<li>Fix unbound promise&rsquo;s then handlers being called with wrong <code class="prettyprint">this</code> value (<a href=".">#738</a>).</li>
</ul>

<h2 id="2-9-34-2015-07-15">2.9.34 (2015-07-15)</h2>

<p>Bugfixes:</p>

<ul>
<li> Correct domain for .map, .each, .filter, .reduce callbacks (<a href=".">#701</a>).

<ul>
<li>Preserve bound-with-promise promises across the entire chain (<a href=".">#702</a>).</li>
</ul></li>
</ul>

<h2 id="2-9-33-2015-07-09">2.9.33 (2015-07-09)</h2>

<p>Bugfixes:</p>

<ul>
<li>Methods on <code class="prettyprint">Function.prototype</code> are no longer promisified (<a href=".">#680</a>).</li>
</ul>

<h2 id="2-9-32-2015-07-03">2.9.32 (2015-07-03)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.return(primitiveValue)</code> returning a wrapped version of the primitive value when a Node.js domain is active (<a href=".">#689</a>).</li>
</ul>

<h2 id="2-9-31-2015-07-03">2.9.31 (2015-07-03)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix Promises/A+ compliance issue regarding circular thenables: the correct behavior is to go into an infinite loop instead of warning with an error (Fixes <a href=".">#682</a>).</li>
<li>Fix &ldquo;(node) warning: possible EventEmitter memory leak detected&rdquo; (<a href=".">#661</a>).</li>
<li>Fix callbacks sometimes being called with a wrong node.js domain (<a href=".">#664</a>).</li>
<li>Fix callbacks sometimes not being called at all in iOS 8.1 WebApp mode (<a href=".">#666</a>, <a href=".">#687</a>).</li>
</ul>

<h2 id="2-9-30-2015-06-14">2.9.30 (2015-06-14)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix regression with <code class="prettyprint">promisifyAll</code> not promisifying certain methods</li>
</ul>

<h2 id="2-9-29-2015-06-14">2.9.29 (2015-06-14)</h2>

<p>Bugfixes:</p>

<ul>
<li>Improve <code class="prettyprint">promisifyAll</code> detection of functions that are class constructors. Fixes mongodb 2.x promisification.</li>
</ul>

<h2 id="2-9-28-2015-06-14">2.9.28 (2015-06-14)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix handled rejection being reported as unhandled in certain scenarios when using <a href=".">.all</a> or <a href=".">Promise.join</a> (<a href=".">#645</a>)</li>
<li>Fix custom scheduler not being called in Google Chrome when long stack traces are enabled (<a href=".">#650</a>)</li>
</ul>

<h2 id="2-9-27-2015-05-30">2.9.27 (2015-05-30)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">sinon.useFakeTimers()</code> breaking scheduler (<a href=".">#631</a>)</li>
</ul>

<p>Misc:</p>

<ul>
<li>Add nw testing facilities (<code class="prettyprint">node tools/test --nw</code>)</li>
</ul>

<h2 id="2-9-26-2015-05-25">2.9.26 (2015-05-25)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix crash in NW <a href=".">#624</a></li>
<li>Fix <a href="."><code class="prettyprint">.return()</code></a> not supporting <code class="prettyprint">undefined</code> as return value <a href=".">#627</a></li>
</ul>

<h2 id="2-9-25-2015-04-28">2.9.25 (2015-04-28)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix crash in node 0.8</li>
</ul>

<h2 id="2-9-24-2015-04-02">2.9.24 (2015-04-02)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix not being able to load multiple bluebird copies introduced in 2.9.22 (<a href=".">#559</a>, <a href=".">#561</a>, <a href=".">#560</a>).</li>
</ul>

<h2 id="2-9-23-2015-04-02">2.9.23 (2015-04-02)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix node.js domain propagation (<a href=".">#521</a>).</li>
</ul>

<h2 id="2-9-22-2015-04-02">2.9.22 (2015-04-02)</h2>

<ul>
<li>Fix <code class="prettyprint">.promisify</code> crashing in phantom JS (<a href=".">#556</a>)</li>
</ul>

<h2 id="2-9-21-2015-03-30">2.9.21 (2015-03-30)</h2>

<ul>
<li>Fix error object&rsquo;s <code class="prettyprint">&#39;stack&#39;</code>&rsquo; overwriting causing an error when its defined to be a setter that throws an error (<a href=".">#552</a>).</li>
</ul>

<h2 id="2-9-20-2015-03-29">2.9.20 (2015-03-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix regression where there is a long delay between calling <code class="prettyprint">.cancel()</code> and promise actually getting cancelled in Chrome when long stack traces are enabled</li>
</ul>

<h2 id="2-9-19-2015-03-29">2.9.19 (2015-03-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix crashing in Chrome when long stack traces are disabled</li>
</ul>

<h2 id="2-9-18-2015-03-29">2.9.18 (2015-03-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix settlePromises using trampoline</li>
</ul>

<h2 id="2-9-17-2015-03-29">2.9.17 (2015-03-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix Chrome DevTools async stack traceability (<a href=".">#542</a>).</li>
</ul>

<h2 id="2-9-16-2015-03-28">2.9.16 (2015-03-28)</h2>

<p>Features:</p>

<ul>
<li>Use setImmediate if available</li>
</ul>

<h2 id="2-9-15-2015-03-26">2.9.15 (2015-03-26)</h2>

<p>Features:</p>

<ul>
<li>Added <code class="prettyprint">.asCallback</code> alias for <code class="prettyprint">.nodeify</code>.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Don&rsquo;t always use nextTick, but try to pick up setImmediate or setTimeout in NW. Fixes <a href=".">#534</a>, <a href=".">#525</a></li>
<li>Make progress a core feature. Fixes <a href=".">#535</a> Note that progress has been removed in 3.x - this is only a fix necessary for 2.x custom builds.</li>
</ul>

<h2 id="2-9-14-2015-03-12">2.9.14 (2015-03-12)</h2>

<p>Bugfixes:</p>

<ul>
<li>Always use process.nextTick. Fixes <a href=".">#525</a></li>
</ul>

<h2 id="2-9-13-2015-02-27">2.9.13 (2015-02-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix .each, .filter, .reduce and .map callbacks being called synchornously if the input is immediate. (<a href=".">#513</a>)</li>
</ul>

<h2 id="2-9-12-2015-02-19">2.9.12 (2015-02-19)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix memory leak introduced in 2.9.0 (<a href=".">#502</a>)</li>
</ul>

<h2 id="2-9-11-2015-02-19">2.9.11 (2015-02-19)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href=".">#503</a></li>
</ul>

<h2 id="2-9-10-2015-02-18">2.9.10 (2015-02-18)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href=".">#501</a></li>
</ul>

<h2 id="2-9-9-2015-02-12">2.9.9 (2015-02-12)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">TypeError: Cannot assign to read only property &#39;length&#39;</code> when jsdom has declared a read-only length for all objects to inherit.</li>
</ul>

<h2 id="2-9-8-2015-02-10">2.9.8 (2015-02-10)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix regression introduced in 2.9.7 where promisify didn&rsquo;t properly dynamically look up methods on <code class="prettyprint">this</code></li>
</ul>

<h2 id="2-9-7-2015-02-08">2.9.7 (2015-02-08)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">promisify</code> not retaining custom properties of the function. This enables promisifying the <code class="prettyprint">&quot;request&quot;</code> module&rsquo;s export function and its methods at the same time.</li>
<li>Fix <code class="prettyprint">promisifyAll</code> methods being dependent on <code class="prettyprint">this</code> when they are not originally dependent on <code class="prettyprint">this</code>. This enables e.g. passing promisified <code class="prettyprint">fs</code> functions directly as callbacks without having to bind them to <code class="prettyprint">fs</code>.</li>
<li>Fix <code class="prettyprint">process.nextTick</code> being used over <code class="prettyprint">setImmediate</code> in node.</li>
</ul>

<h2 id="2-9-6-2015-02-02">2.9.6 (2015-02-02)</h2>

<p>Bugfixes:</p>

<ul>
<li>Node environment detection can no longer be fooled</li>
</ul>

<h2 id="2-9-5-2015-02-02">2.9.5 (2015-02-02)</h2>

<p>Misc:</p>

<ul>
<li>Warn when <a href="."><code class="prettyprint">.then()</code></a> is passed non-functions</li>
</ul>

<h2 id="2-9-4-2015-01-30">2.9.4 (2015-01-30)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href=".">.timeout()</a> not calling <code class="prettyprint">clearTimeout</code> with the proper handle in node causing the process to wait for unneeded timeout. This was a regression introduced in 2.9.1.</li>
</ul>

<h2 id="2-9-3-2015-01-27">2.9.3 (2015-01-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix node-webkit compatibility issue (<a href="https://github.com/petkaantonov/bluebird/pull/467">#467</a>)</li>
<li>Fix long stack trace support in recent firefox versions</li>
</ul>

<h2 id="2-9-2-2015-01-26">2.9.2 (2015-01-26)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix critical bug regarding to using promisifyAll in browser that was introduced in 2.9.0 (<a href="https://github.com/petkaantonov/bluebird/issues/466">#466</a>).</li>
</ul>

<p>Misc:</p>

<ul>
<li>Add <code class="prettyprint">&quot;browser&quot;</code> entry point to package.json</li>
</ul>

<h2 id="2-9-1-2015-01-24">2.9.1 (2015-01-24)</h2>

<p>Features:</p>

<ul>
<li>If a bound promise is returned by the callback to <a href="#promisemethodfunction-fn---function"><code class="prettyprint">Promise.method</code></a> and <a href="#promisetryfunction-fn--arraydynamicdynamic-arguments--dynamic-ctx----promise"><code class="prettyprint">Promise.try</code></a>, the returned promise will be bound to the same value</li>
</ul>

<h2 id="2-9-0-2015-01-24">2.9.0 (2015-01-24)</h2>

<p>Features:</p>

<ul>
<li>Add <a href="API.md#promisefromnodefunction-resolver---promise"><code class="prettyprint">Promise.fromNode</code></a></li>
<li>Add new paramter <code class="prettyprint">value</code> for <a href="API.md#promisebinddynamic-thisarg--dynamic-value---promise"><code class="prettyprint">Promise.bind</code></a></li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix several issues with <a href="API.md#cancellation"><code class="prettyprint">cancellation</code></a> and <a href="API.md#binddynamic-thisarg---promise"><code class="prettyprint">.bind()</code></a> interoperation when <code class="prettyprint">thisArg</code> is a promise or thenable</li>
<li>Fix promises created in <a href="API#disposerfunction-disposer---disposer"><code class="prettyprint">disposers</code></a> not having proper long stack trace context</li>
<li>Fix <a href="API.md#promisejoinpromisethenablevalue-promises-function-handler---promise"><code class="prettyprint">Promise.join</code></a> sometimes passing the passed in callback function as the last argument to itself.</li>
</ul>

<p>Misc:</p>

<ul>
<li>Reduce minified full browser build file size by not including unused code generation functionality.</li>
<li>Major internal refactoring related to testing code and source code file layout</li>
</ul>

<h2 id="2-8-2-2015-01-20">2.8.2 (2015-01-20)</h2>

<p>Features:</p>

<ul>
<li><a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#global-rejection-events">Global rejection events</a> are now fired both as DOM3 events and as legacy events in browsers</li>
</ul>

<h2 id="2-8-1-2015-01-20">2.8.1 (2015-01-20)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix long stack trace stiching consistency when rejected from thenables</li>
</ul>

<h2 id="2-8-0-2015-01-19">2.8.0 (2015-01-19)</h2>

<p>Features:</p>

<ul>
<li>Major debuggability improvements:

<ul>
<li>Long stack traces have been re-designed. They are now much more readable,
succint, relevant and consistent across bluebird features.</li>
<li>Long stack traces are supported now in IE10+</li>
</ul></li>
</ul>

<h2 id="2-7-1-2015-01-15">2.7.1 (2015-01-15)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/447">#447</a></li>
</ul>

<h2 id="2-7-0-2015-01-15">2.7.0 (2015-01-15)</h2>

<p>Features:</p>

<ul>
<li>Added more context to stack traces originating from coroutines (<a href="https://github.com/petkaantonov/bluebird/issues/421">#421</a>)</li>
<li>Implemented <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#global-rejection-events">global rejection events</a> (<a href="https://github.com/petkaantonov/bluebird/issues/428">#428</a>, <a href="https://github.com/petkaantonov/bluebird/issues/357">#357</a>)</li>
<li><a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#option-promisifier">Custom promisifiers</a> are now passed the default promisifier which can be used to add enhancements on top of normal node promisification</li>
<li><a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#option-filter">Promisification filters</a> are now passed <code class="prettyprint">passesDefaultFilter</code> boolean</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.noConflict()</code> call signature (<a href="#">#446</a>)</li>
<li>Fix <code class="prettyprint">Promise.method</code>ified functions being called with <code class="prettyprint">undefined</code> when they were called with no arguments</li>
</ul>

<h2 id="2-6-4-2015-01-12">2.6.4 (2015-01-12)</h2>

<p>Bugfixes:</p>

<ul>
<li><code class="prettyprint">OperationalErrors</code> thrown by promisified functions retain custom properties, such as <code class="prettyprint">.code</code> and <code class="prettyprint">.path</code>.</li>
</ul>

<h2 id="2-6-3-2015-01-12">2.6.3 (2015-01-12)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/429">#429</a></li>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/432">#432</a></li>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/433">#433</a></li>
</ul>

<h2 id="2-6-2-2015-01-07">2.6.2 (2015-01-07)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/426">#426</a></li>
</ul>

<h2 id="2-6-1-2015-01-07">2.6.1 (2015-01-07)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fixed built browser files not being included in the git tag release for bower</li>
</ul>

<h2 id="2-6-0-2015-01-06">2.6.0 (2015-01-06)</h2>

<p>Features:</p>

<ul>
<li>Significantly improve parallel promise performance and memory usage (+50% faster, -50% less memory)</li>
</ul>

<h2 id="2-5-3-2014-12-30">2.5.3 (2014-12-30)</h2>

<h2 id="2-5-2-2014-12-29">2.5.2 (2014-12-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix bug where already resolved promise gets attached more handlers while calling its handlers resulting in some handlers not being called</li>
<li>Fix bug where then handlers are not called in the same order as they would run if Promises/A+ 2.3.2 was implemented as adoption</li>
<li>Fix bug where using <code class="prettyprint">Object.create(null)</code> as a rejection reason would crash bluebird</li>
</ul>

<h2 id="2-5-1-2014-12-29">2.5.1 (2014-12-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.finally</code> throwing null error when it is derived from a promise that is resolved with a promise that is resolved with a promise</li>
</ul>

<h2 id="2-5-0-2014-12-28">2.5.0 (2014-12-28)</h2>

<p>Features:</p>

<ul>
<li><a href="#API.md#https://github.com/petkaantonov/bluebird/blob/master/API.md#getstring-propertyname---promise"><code class="prettyprint">.get</code></a> now supports negative indexing.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix bug with <code class="prettyprint">Promise.method</code> wrapped function returning a promise that never resolves if the function returns a promise that is resolved with another promise</li>
<li>Fix bug with <code class="prettyprint">Promise.delay</code> never resolving if the value is a promise that is resolved with another promise</li>
</ul>

<h2 id="2-4-3-2014-12-28">2.4.3 (2014-12-28)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix memory leak as described in <a href="https://github.com/promises-aplus/promises-spec/issues/179">this Promises/A+ spec issue</a>.</li>
</ul>

<h2 id="2-4-2-2014-12-21">2.4.2 (2014-12-21)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix bug where spread rejected handler is ignored in case of rejection</li>
<li>Fix synchronous scheduler passed to <code class="prettyprint">setScheduler</code> causing infinite loop</li>
</ul>

<h2 id="2-4-1-2014-12-20">2.4.1 (2014-12-20)</h2>

<p>Features:</p>

<ul>
<li>Error messages now have links to wiki pages for additional information</li>
<li>Promises now clean up all references (to handlers, child promises etc) as soon as possible.</li>
</ul>

<h2 id="2-4-0-2014-12-18">2.4.0 (2014-12-18)</h2>

<p>Features:</p>

<ul>
<li>Better filtering of bluebird internal calls in long stack traces, especially when using minified file in browsers</li>
<li>Small performance improvements for all collection methods</li>
<li>Promises now delete references to handlers attached to them as soon as possible</li>
<li>Additional stack traces are now output on stderr/<code class="prettyprint">console.warn</code> for errors that are thrown in the process/window from rejected <code class="prettyprint">.done()</code> promises. See <a href="https://github.com/petkaantonov/bluebird/issues/411">#411</a></li>
</ul>

<h2 id="2-3-11-2014-10-31">2.3.11 (2014-10-31)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/371">#371</a>, <a href="https://github.com/petkaantonov/bluebird/issues/373">#373</a></li>
</ul>

<h2 id="2-3-10-2014-10-28">2.3.10 (2014-10-28)</h2>

<p>Features:</p>

<ul>
<li><code class="prettyprint">Promise.method</code> no longer wraps primitive errors</li>
<li><code class="prettyprint">Promise.try</code> no longer wraps primitive errors</li>
</ul>

<h2 id="2-3-7-2014-10-25">2.3.7 (2014-10-25)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/359">#359</a>, <a href="https://github.com/petkaantonov/bluebird/issues/362">#362</a> and <a href="https://github.com/petkaantonov/bluebird/issues/364">#364</a></li>
</ul>

<h2 id="2-3-6-2014-10-15">2.3.6 (2014-10-15)</h2>

<p>Features:</p>

<ul>
<li>Implement <a href="API.md#reflect---promisepromiseinspection"><code class="prettyprint">.reflect()</code></a></li>
</ul>

<h2 id="2-3-5-2014-10-06">2.3.5 (2014-10-06)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix issue when promisifying methods whose names contain the string &#39;args&rsquo;</li>
</ul>

<h2 id="2-3-4-2014-09-27">2.3.4 (2014-09-27)</h2>

<ul>
<li><code class="prettyprint">P</code> alias was not declared inside WebWorkers</li>
</ul>

<h2 id="2-3-3-2014-09-27">2.3.3 (2014-09-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/318">#318</a>, <a href="https://github.com/petkaantonov/bluebird/issues/#314">#314</a></li>
</ul>

<h2 id="2-3-2-2014-08-25">2.3.2 (2014-08-25)</h2>

<p>Bugfixes:</p>

<ul>
<li><code class="prettyprint">P</code> alias for <code class="prettyprint">Promise</code> now exists in global scope when using browser builds without a module loader, fixing an issue with firefox extensions</li>
</ul>

<h2 id="2-3-1-2014-08-23">2.3.1 (2014-08-23)</h2>

<p>Features:</p>

<ul>
<li><code class="prettyprint">.using</code> can now be used with disposers created from different bluebird copy</li>
</ul>

<h2 id="2-3-0-2014-08-13">2.3.0 (2014-08-13)</h2>

<p>Features:</p>

<ul>
<li><a href="API.md#binddynamic-thisarg---promise"><code class="prettyprint">.bind()</code></a> and <a href="API.md#promisebinddynamic-thisarg---promise"><code class="prettyprint">Promise.bind()</code></a> now await for the resolution of the <code class="prettyprint">thisArg</code> if it&rsquo;s a promise or a thenable</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/276">#276</a></li>
</ul>

<h2 id="2-2-2-2014-07-14">2.2.2 (2014-07-14)</h2>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/259">#259</a></li>
</ul>

<h2 id="2-2-1-2014-07-07">2.2.1 (2014-07-07)</h2>

<ul>
<li>Fix multiline error messages only showing the first line</li>
</ul>

<h2 id="2-2-0-2014-07-07">2.2.0 (2014-07-07)</h2>

<p>Bugfixes:</p>

<ul>
<li><code class="prettyprint">.any</code> and <code class="prettyprint">.some</code> now consistently reject with RangeError when input array contains too few promises</li>
<li>Fix iteration bug with <code class="prettyprint">.reduce</code> when input array contains already fulfilled promises</li>
</ul>

<h2 id="2-1-3-2014-06-18">2.1.3 (2014-06-18)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/235">#235</a></li>
</ul>

<h2 id="2-1-2-2014-06-15">2.1.2 (2014-06-15)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/232">#232</a></li>
</ul>

<h2 id="2-1-1-2014-06-11">2.1.1 (2014-06-11)</h2>

<h2 id="2-1-0-2014-06-11">2.1.0 (2014-06-11)</h2>

<p>Features:</p>

<ul>
<li>Add <a href="API.md#option-promisifier"><code class="prettyprint">promisifier</code></a> option to <code class="prettyprint">Promise.promisifyAll()</code></li>
<li>Improve performance of <code class="prettyprint">.props()</code> and collection methods when used with immediate values</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix a bug where .reduce calls the callback for an already visited item</li>
<li>Fix a bug where stack trace limit is calculated to be too small, which resulted in too short stack traces</li>
</ul>

<p><sub>Add undocumented experimental <code class="prettyprint">yieldHandler</code> option to <code class="prettyprint">Promise.coroutine</code></sub></p>

<h2 id="2-0-7-2014-06-08">2.0.7 (2014-06-08)</h2>

<h2 id="2-0-6-2014-06-07">2.0.6 (2014-06-07)</h2>

<h2 id="2-0-5-2014-06-05">2.0.5 (2014-06-05)</h2>

<h2 id="2-0-4-2014-06-05">2.0.4 (2014-06-05)</h2>

<h2 id="2-0-3-2014-06-05">2.0.3 (2014-06-05)</h2>

<h2 id="2-0-2-2014-06-04">2.0.2 (2014-06-04)</h2>

<h2 id="2-0-1-2014-06-04">2.0.1 (2014-06-04)</h2>

<h2 id="2-0-0-2014-06-04">2.0.0 (2014-06-04)</h2>

<h1 id="what-39-s-new-in-2-0">What&rsquo;s new in 2.0</h1>

<ul>
<li><a href="API.md#resource-management">Resource management</a> - never leak resources again</li>
<li><a href="API.md#promisification">Promisification</a> on steroids - entire modules can now be promisified with one line of code</li>
<li><a href="API.md#mapfunction-mapper--object-options---promise"><code class="prettyprint">.map()</code></a>, <a href="API.md#eachfunction-iterator---promise"><code class="prettyprint">.each()</code></a>, <a href="API.md#filterfunction-filterer--object-options---promise"><code class="prettyprint">.filter()</code></a>, <a href="API.md#reducefunction-reducer--dynamic-initialvalue---promise"><code class="prettyprint">.reduce()</code></a> reimagined from simple sugar to powerful concurrency coordination tools</li>
<li><a href="API.md">API Documentation</a> has been reorganized and more elaborate examples added</li>
<li>Deprecated <a href="#progression-migration">progression</a> and <a href="#deferred-migration">deferreds</a></li>
<li>Improved performance and readability</li>
</ul>

<p>Features:</p>

<ul>
<li>Added <a href="API.md#promiseusingpromisedisposer-promise-promisedisposer-promise--function-handler---promise"><code class="prettyprint">using()</code></a> and <a href="API.md#disposerfunction-disposer---disposer"><code class="prettyprint">disposer()</code></a></li>
<li><a href="API.md#mapfunction-mapper--object-options---promise"><code class="prettyprint">.map()</code></a> now calls the handler as soon as items in the input array become fulfilled</li>
<li>Added a concurrency option to <a href="API.md#mapfunction-mapper--object-options---promise"><code class="prettyprint">.map()</code></a></li>
<li><a href="API.md#filterfunction-filterer--object-options---promise"><code class="prettyprint">.filter()</code></a> now calls the handler as soon as items in the input array become fulfilled</li>
<li>Added a concurrency option to <a href="API.md#filterfunction-filterer--object-options---promise"><code class="prettyprint">.filter()</code></a></li>
<li><a href="API.md#reducefunction-reducer--dynamic-initialvalue---promise"><code class="prettyprint">.reduce()</code></a> now calls the handler as soon as items in the input array become fulfilled, but in-order</li>
<li>Added <a href="API.md#eachfunction-iterator---promise"><code class="prettyprint">.each()</code></a></li>
<li><a href="API.md#promiseresolvedynamic-value---promise"><code class="prettyprint">Promise.resolve()</code></a> behaves like <code class="prettyprint">Promise.cast</code>. <code class="prettyprint">Promise.cast</code> deprecated.</li>
<li><a href="API.md#synchronous-inspection">Synchronous inspection</a>: Removed <code class="prettyprint">.inspect()</code>, added <a href="API.md#value---dynamic"><code class="prettyprint">.value()</code></a> and <a href="API.md#reason---dynamic"><code class="prettyprint">.reason()</code></a></li>
<li><a href="API.md#promisejoinpromisethenablevalue-promises-function-handler---promise"><code class="prettyprint">Promise.join()</code></a> now takes a function as the last argument</li>
<li>Added <a href="API.md#promisesetschedulerfunction-scheduler---void"><code class="prettyprint">Promise.setScheduler()</code></a></li>
<li><a href="API.md#cancelerror-reason---promise"><code class="prettyprint">.cancel()</code></a> supports a custom cancellation reason</li>
<li><a href="API.md#timeoutint-ms--string-message---promise"><code class="prettyprint">.timeout()</code></a> now cancels the promise instead of rejecting it</li>
<li><a href="API.md#nodeifyfunction-callback--object-options---promise"><code class="prettyprint">.nodeify()</code></a> now supports passing multiple success results when mapping promises to nodebacks</li>
<li>Added <code class="prettyprint">suffix</code> and <code class="prettyprint">filter</code> options to <a href="API.md#promisepromisifyallobject-target--object-options---object"><code class="prettyprint">Promise.promisifyAll()</code></a></li>
</ul>

<p>Breaking changes:</p>

<ul>
<li>Sparse array holes are not skipped by collection methods but treated as existing elements with <code class="prettyprint">undefined</code> value</li>
<li><code class="prettyprint">.map()</code> and <code class="prettyprint">.filter()</code> do not call the given mapper or filterer function in any specific order</li>
<li>Removed the <code class="prettyprint">.inspect()</code> method</li>
<li>Yielding an array from a coroutine is not supported by default. You can use <a href="API.md#promisecoroutineaddyieldhandlerfunction-handler---void"><code class="prettyprint">coroutine.addYieldHandler()</code></a> to configure the old behavior (or any behavior you want).</li>
<li><a href="API.md#any---promise"><code class="prettyprint">.any()</code></a> and <a href="API.md#someint-count---promise"><code class="prettyprint">.some()</code></a> no longer use an array as the rejection reason. <a href="API.md#aggregateerror"><code class="prettyprint">AggregateError</code></a> is used instead.</li>
</ul>

<h2 id="1-2-4-2014-04-27">1.2.4 (2014-04-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix promisifyAll causing a syntax error when a method name is not a valid identifier</li>
<li>Fix syntax error when es5.js is used in strict mode</li>
</ul>

<h2 id="1-2-3-2014-04-17">1.2.3 (2014-04-17)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/179">#179</a></li>
</ul>

<h2 id="1-2-2-2014-04-09">1.2.2 (2014-04-09)</h2>

<p>Bugfixes:</p>

<ul>
<li>Promisified methods from promisifyAll no longer call the original method when it is overriden</li>
<li>Nodeify doesn&rsquo;t pass second argument to the callback if the promise is fulfilled with <code class="prettyprint">undefined</code></li>
</ul>

<h2 id="1-2-1-2014-03-31">1.2.1 (2014-03-31)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/168">#168</a></li>
</ul>

<h2 id="1-2-0-2014-03-29">1.2.0 (2014-03-29)</h2>

<p>Features:</p>

<ul>
<li>New method: <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#value---dynamic"><code class="prettyprint">.value()</code></a></li>
<li>New method: <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#reason---dynamic"><code class="prettyprint">.reason()</code></a></li>
<li>New method: <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#promiseonunhandledrejectionhandledfunction-handler---undefined"><code class="prettyprint">Promise.onUnhandledRejectionHandled()</code></a></li>
<li><code class="prettyprint">Promise.map()</code>, <code class="prettyprint">.map()</code>, <code class="prettyprint">Promise.filter()</code> and <code class="prettyprint">.filter()</code> start calling their callbacks as soon as possible while retaining a correct order. See <a href="https://github.com/petkaantonov/bluebird/commit/8085922fb95a9987fda0cf2337598ab4a98dc315"><code class="prettyprint">8085922f</code></a>.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/165">#165</a></li>
<li>Fix <a href="https://github.com/petkaantonov/bluebird/issues/166">#166</a></li>
</ul>

<h2 id="1-1-1-2014-03-18">1.1.1 (2014-03-18)</h2>

<p>Bugfixes:</p>

<ul>
<li><a href="https://github.com/petkaantonov/bluebird/issues/138">#138</a></li>
<li><a href="https://github.com/petkaantonov/bluebird/issues/144">#144</a></li>
<li><a href="https://github.com/petkaantonov/bluebird/issues/148">#148</a></li>
<li><a href="https://github.com/petkaantonov/bluebird/issues/151">#151</a></li>
</ul>

<h2 id="1-1-0-2014-03-08">1.1.0 (2014-03-08)</h2>

<p>Features:</p>

<ul>
<li>Implement <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#tapfunction-handler---promise"><code class="prettyprint">Promise.prototype.tap()</code></a></li>
<li>Implement <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#promisecoroutineaddyieldhandlerfunction-handler---void"><code class="prettyprint">Promise.coroutine.addYieldHandler()</code></a></li>
<li>Deprecate <code class="prettyprint">Promise.prototype.spawn</code></li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix already rejected promises being reported as unhandled when handled through collection methods</li>
<li>Fix browserisfy crashing from checking <code class="prettyprint">process.version.indexOf</code></li>
</ul>

<h2 id="1-0-8-2014-03-03">1.0.8 (2014-03-03)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix active domain being lost across asynchronous boundaries in Node.JS 10.xx</li>
</ul>

<h2 id="1-0-7-2014-02-25">1.0.7 (2014-02-25)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix handled errors being reported</li>
</ul>

<h2 id="1-0-6-2014-02-17">1.0.6 (2014-02-17)</h2>

<p>Bugfixes:</p>

<ul>
<li> Fix bug with unhandled rejections not being reported
when using <code class="prettyprint">Promise.try</code> or <code class="prettyprint">Promise.method</code> without
attaching further handlers</li>
</ul>

<h2 id="1-0-5-2014-02-15">1.0.5 (2014-02-15)</h2>

<p>Features:</p>

<ul>
<li>Node.js performance: promisified functions try to check amount of passed arguments in most optimal order</li>
<li>Node.js promisified functions will have same <code class="prettyprint">.length</code> as the original function minus one (for the callback parameter)</li>
</ul>

<h2 id="1-0-4-2014-02-09">1.0.4 (2014-02-09)</h2>

<p>Features:</p>

<ul>
<li>Possibly unhandled rejection handler will always get a stack trace, even if the rejection or thrown error was not an error</li>
<li>Unhandled rejections are tracked per promise, not per error. So if you create multiple branches from a single ancestor and that ancestor gets rejected, each branch with no error handler with the end will cause a possibly unhandled rejection handler invocation</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix unhandled non-writable objects or primitives not reported by possibly unhandled rejection handler</li>
</ul>

<h2 id="1-0-3-2014-02-05">1.0.3 (2014-02-05)</h2>

<p>Bugfixes:</p>

<ul>
<li><a href="https://github.com/petkaantonov/bluebird/issues/88">#93</a></li>
</ul>

<h2 id="1-0-2-2014-02-04">1.0.2 (2014-02-04)</h2>

<p>Features:</p>

<ul>
<li>Significantly improve performance of foreign bluebird thenables</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li><a href="https://github.com/petkaantonov/bluebird/issues/88">#88</a></li>
</ul>

<h2 id="1-0-1-2014-01-28">1.0.1 (2014-01-28)</h2>

<p>Features:</p>

<ul>
<li>Error objects that have property <code class="prettyprint">.isAsync = true</code> will now be caught by <code class="prettyprint">.error()</code></li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix TypeError and RangeError shims not working without <code class="prettyprint">new</code> operator</li>
</ul>

<h2 id="1-0-0-2014-01-12">1.0.0 (2014-01-12)</h2>

<p>Features:</p>

<ul>
<li><code class="prettyprint">.filter</code>, <code class="prettyprint">.map</code>, and <code class="prettyprint">.reduce</code> no longer skip sparse array holes. This is a backwards incompatible change.</li>
<li>Like <code class="prettyprint">.map</code> and <code class="prettyprint">.filter</code>, <code class="prettyprint">.reduce</code> now allows returning promises and thenables from the iteration function.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li><a href="https://github.com/petkaantonov/bluebird/issues/58">#58</a></li>
<li><a href="https://github.com/petkaantonov/bluebird/issues/61">#61</a></li>
<li><a href="https://github.com/petkaantonov/bluebird/issues/64">#64</a></li>
<li><a href="https://github.com/petkaantonov/bluebird/issues/60">#60</a></li>
</ul>

<h2 id="0-11-6-1-2013-12-29">0.11.6-1 (2013-12-29)</h2>

<h2 id="0-11-6-0-2013-12-29">0.11.6-0 (2013-12-29)</h2>

<p>Features:</p>

<ul>
<li><p>You may now return promises and thenables from the filterer function used in <code class="prettyprint">Promise.filter</code> and <code class="prettyprint">Promise.prototype.filter</code>.</p></li>
<li><p><code class="prettyprint">.error()</code> now catches additional sources of rejections:</p>

<ul>
<li>Rejections originating from <code class="prettyprint">Promise.reject</code></li>
<li>Rejections originating from thenables using
the <code class="prettyprint">reject</code> callback</li>
<li>Rejections originating from promisified callbacks
which use the <code class="prettyprint">errback</code> argument</li>
<li>Rejections originating from <code class="prettyprint">new Promise</code> constructor
where the <code class="prettyprint">reject</code> callback is called explicitly</li>
<li>Rejections originating from <code class="prettyprint">PromiseResolver</code> where
<code class="prettyprint">.reject()</code> method is called explicitly</li>
</ul></li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">captureStackTrace</code> being called when it was <code class="prettyprint">null</code></li>
<li>Fix <code class="prettyprint">Promise.map</code> not unwrapping thenables</li>
</ul>

<h2 id="0-11-5-1-2013-12-15">0.11.5-1 (2013-12-15)</h2>

<h2 id="0-11-5-0-2013-12-03">0.11.5-0 (2013-12-03)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of collection methods</li>
<li>Improve performance of promise chains</li>
</ul>

<h2 id="0-11-4-1-2013-12-02">0.11.4-1 (2013-12-02)</h2>

<h2 id="0-11-4-0-2013-12-02">0.11.4-0 (2013-12-02)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">Promise.some</code> behavior with arguments like negative integers, 0&hellip;</li>
<li>Fix stack traces of synchronously throwing promisified functions&rsquo;</li>
</ul>

<h2 id="0-11-3-0-2013-12-02">0.11.3-0 (2013-12-02)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of generators</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix critical bug with collection methods.</li>
</ul>

<h2 id="0-11-2-0-2013-12-02">0.11.2-0 (2013-12-02)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of all collection methods</li>
</ul>

<h2 id="0-11-1-0-2013-12-02">0.11.1-0 (2013-12-02)</h2>

<p>Features:</p>

<ul>
<li>Improve overall performance.</li>
<li>Improve performance of promisified functions.</li>
<li>Improve performance of catch filters.</li>
<li>Improve performance of .finally.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.finally()</code> rejecting if passed non-function. It will now ignore non-functions like <code class="prettyprint">.then</code>.</li>
<li>Fix <code class="prettyprint">.finally()</code> not converting thenables returned from the handler to promises.</li>
<li><code class="prettyprint">.spread()</code> now rejects if the ultimate value given to it is not spreadable.</li>
</ul>

<h2 id="0-11-0-0-2013-12-02">0.11.0-0 (2013-12-02)</h2>

<p>Features:</p>

<ul>
<li>Improve overall performance when not using <code class="prettyprint">.bind()</code> or cancellation.</li>
<li>Promises are now not cancellable by default. This is backwards incompatible change - see <a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#cancellable---promise"><code class="prettyprint">.cancellable()</code></a></li>
<li><a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#promisedelaydynamic-value-int-ms---promise"><code class="prettyprint">Promise.delay</code></a></li>
<li><a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#delayint-ms---promise"><code class="prettyprint">.delay()</code></a></li>
<li><a href="https://github.com/petkaantonov/bluebird/blob/master/API.md#timeoutint-ms--string-message---promise"><code class="prettyprint">.timeout()</code></a></li>
</ul>

<h2 id="0-10-14-0-2013-12-01">0.10.14-0 (2013-12-01)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix race condition when mixing 3rd party asynchrony.</li>
</ul>

<h2 id="0-10-13-1-2013-11-30">0.10.13-1 (2013-11-30)</h2>

<h2 id="0-10-13-0-2013-11-30">0.10.13-0 (2013-11-30)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix another bug with progression.</li>
</ul>

<h2 id="0-10-12-0-2013-11-30">0.10.12-0 (2013-11-30)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix bug with progression.</li>
</ul>

<h2 id="0-10-11-4-2013-11-29">0.10.11-4 (2013-11-29)</h2>

<h2 id="0-10-11-2-2013-11-29">0.10.11-2 (2013-11-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.race()</code> not propagating bound values.</li>
</ul>

<h2 id="0-10-11-1-2013-11-29">0.10.11-1 (2013-11-29)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of <code class="prettyprint">Promise.race</code></li>
</ul>

<h2 id="0-10-11-0-2013-11-29">0.10.11-0 (2013-11-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fixed <code class="prettyprint">Promise.promisifyAll</code> invoking property accessors. Only data properties with function values are considered.</li>
</ul>

<h2 id="0-10-10-0-2013-11-28">0.10.10-0 (2013-11-28)</h2>

<p>Features:</p>

<ul>
<li>Disable long stack traces in browsers by default. Call <code class="prettyprint">Promise.longStackTraces()</code> to enable them.</li>
</ul>

<h2 id="0-10-9-1-2013-11-27">0.10.9-1 (2013-11-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fail early when <code class="prettyprint">new Promise</code> is constructed incorrectly</li>
</ul>

<h2 id="0-10-9-0-2013-11-27">0.10.9-0 (2013-11-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Promise.props now takes a <a href="https://github.com/petkaantonov/bluebird/blob/f41edac61b7c421608ff439bb5a09b7cffeadcf9/test/mocha/props.js#L197-L217">thenable-for-collection</a></li>
<li>All promise collection methods now reject when a promise-or-thenable-for-collection turns out not to give a collection</li>
</ul>

<h2 id="0-10-8-0-2013-11-25">0.10.8-0 (2013-11-25)</h2>

<p>Features:</p>

<ul>
<li>All static collection methods take thenable-for-collection</li>
</ul>

<h2 id="0-10-7-0-2013-11-25">0.10.7-0 (2013-11-25)</h2>

<p>Features:</p>

<ul>
<li>throw TypeError when thenable resolves with itself</li>
<li>Make .race() and Promise.race() forever pending on empty collections</li>
</ul>

<h2 id="0-10-6-0-2013-11-25">0.10.6-0 (2013-11-25)</h2>

<p>Bugfixes:</p>

<ul>
<li>Promise.resolve and PromiseResolver.resolve follow thenables too.</li>
</ul>

<h2 id="0-10-5-0-2013-11-24">0.10.5-0 (2013-11-24)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix infinite loop when thenable resolves with itself</li>
</ul>

<h2 id="0-10-4-1-2013-11-24">0.10.4-1 (2013-11-24)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix a file missing from build. (Critical fix)</li>
</ul>

<h2 id="0-10-4-0-2013-11-24">0.10.4-0 (2013-11-24)</h2>

<p>Features:</p>

<ul>
<li>Remove dependency of es5-shim and es5-sham when using ES3.</li>
</ul>

<h2 id="0-10-3-0-2013-11-24">0.10.3-0 (2013-11-24)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of <code class="prettyprint">Promise.method</code></li>
</ul>

<h2 id="0-10-2-1-2013-11-24">0.10.2-1 (2013-11-24)</h2>

<p>Features:</p>

<ul>
<li>Rename PromiseResolver#asCallback to PromiseResolver#callback</li>
</ul>

<h2 id="0-10-2-0-2013-11-24">0.10.2-0 (2013-11-24)</h2>

<p>Features:</p>

<ul>
<li>Remove memoization of thenables</li>
</ul>

<h2 id="0-10-1-0-2013-11-21">0.10.1-0 (2013-11-21)</h2>

<p>Features:</p>

<ul>
<li>Add methods <code class="prettyprint">Promise.resolve()</code>, <code class="prettyprint">Promise.reject()</code>, <code class="prettyprint">Promise.defer()</code> and <code class="prettyprint">.resolve()</code>.</li>
</ul>

<h2 id="0-10-0-1-2013-11-17">0.10.0-1 (2013-11-17)</h2>

<h2 id="0-10-0-0-2013-11-17">0.10.0-0 (2013-11-17)</h2>

<p>Features:</p>

<ul>
<li>Implement <code class="prettyprint">Promise.method()</code></li>
<li>Implement <code class="prettyprint">.return()</code></li>
<li>Implement <code class="prettyprint">.throw()</code></li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix promises being able to use themselves as resolution or follower value</li>
</ul>

<h2 id="0-9-11-1-2013-11-14">0.9.11-1 (2013-11-14)</h2>

<p>Features:</p>

<ul>
<li>Implicit <code class="prettyprint">Promise.all()</code> when yielding an array from generators</li>
</ul>

<h2 id="0-9-11-0-2013-11-13">0.9.11-0 (2013-11-13)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.spread</code> not unwrapping thenables</li>
</ul>

<h2 id="0-9-10-2-2013-11-13">0.9.10-2 (2013-11-13)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of promisified functions on V8</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Report unhandled rejections even when long stack traces are disabled</li>
<li>Fix <code class="prettyprint">.error()</code> showing up in stack traces</li>
</ul>

<h2 id="0-9-10-1-2013-11-05">0.9.10-1 (2013-11-05)</h2>

<p>Bugfixes:</p>

<ul>
<li>Catch filter method calls showing in stack traces</li>
</ul>

<h2 id="0-9-10-0-2013-11-05">0.9.10-0 (2013-11-05)</h2>

<p>Bugfixes:</p>

<ul>
<li>Support primitives in catch filters</li>
</ul>

<h2 id="0-9-9-0-2013-11-05">0.9.9-0 (2013-11-05)</h2>

<p>Features:</p>

<ul>
<li>Add <code class="prettyprint">Promise.race()</code> and <code class="prettyprint">.race()</code></li>
</ul>

<h2 id="0-9-8-0-2013-11-01">0.9.8-0 (2013-11-01)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix bug with <code class="prettyprint">Promise.try</code> not unwrapping returned promises and thenables</li>
</ul>

<h2 id="0-9-7-0-2013-10-29">0.9.7-0 (2013-10-29)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix bug with build files containing duplicated code for promise.js</li>
</ul>

<h2 id="0-9-6-0-2013-10-28">0.9.6-0 (2013-10-28)</h2>

<p>Features:</p>

<ul>
<li>Improve output of reporting unhandled non-errors</li>
<li>Implement RejectionError wrapping and <code class="prettyprint">.error()</code> method</li>
</ul>

<h2 id="0-9-5-0-2013-10-27">0.9.5-0 (2013-10-27)</h2>

<p>Features:</p>

<ul>
<li>Allow fresh copies of the library to be made</li>
</ul>

<h2 id="0-9-4-1-2013-10-27">0.9.4-1 (2013-10-27)</h2>

<h2 id="0-9-4-0-2013-10-27">0.9.4-0 (2013-10-27)</h2>

<p>Bugfixes:</p>

<ul>
<li>Rollback non-working multiple fresh copies feature</li>
</ul>

<h2 id="0-9-3-0-2013-10-27">0.9.3-0 (2013-10-27)</h2>

<p>Features:</p>

<ul>
<li>Allow fresh copies of the library to be made</li>
<li>Add more components to customized builds</li>
</ul>

<h2 id="0-9-2-1-2013-10-25">0.9.2-1 (2013-10-25)</h2>

<h2 id="0-9-2-0-2013-10-25">0.9.2-0 (2013-10-25)</h2>

<p>Features:</p>

<ul>
<li>Allow custom builds</li>
</ul>

<h2 id="0-9-1-1-2013-10-22">0.9.1-1 (2013-10-22)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix unhandled rethrown exceptions not reported</li>
</ul>

<h2 id="0-9-1-0-2013-10-22">0.9.1-0 (2013-10-22)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of <code class="prettyprint">Promise.try</code></li>
<li>Extend <code class="prettyprint">Promise.try</code> to accept arguments and ctx to make it more usable in promisification of synchronous functions.</li>
</ul>

<h2 id="0-9-0-0-2013-10-18">0.9.0-0 (2013-10-18)</h2>

<p>Features:</p>

<ul>
<li>Implement <code class="prettyprint">.bind</code> and <code class="prettyprint">Promise.bind</code></li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix <code class="prettyprint">.some()</code> when argument is a pending promise that later resolves to an array</li>
</ul>

<h2 id="0-8-5-1-2013-10-17">0.8.5-1 (2013-10-17)</h2>

<p>Features:</p>

<ul>
<li>Enable process wide long stack traces through BLUEBIRD_DEBUG environment variable</li>
</ul>

<h2 id="0-8-5-0-2013-10-16">0.8.5-0 (2013-10-16)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of all collection methods</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix .finally passing the value to handlers</li>
<li>Remove kew from benchmarks due to bugs in the library breaking the benchmark</li>
<li>Fix some bluebird library calls potentially appearing in stack traces</li>
</ul>

<h2 id="0-8-4-1-2013-10-15">0.8.4-1 (2013-10-15)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix .pending() call showing in long stack traces</li>
</ul>

<h2 id="0-8-4-0-2013-10-15">0.8.4-0 (2013-10-15)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix PromiseArray and its sub-classes swallowing possibly unhandled rejections</li>
</ul>

<h2 id="0-8-3-3-2013-10-14">0.8.3-3 (2013-10-14)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix AMD-declaration using named module.</li>
</ul>

<h2 id="0-8-3-2-2013-10-14">0.8.3-2 (2013-10-14)</h2>

<p>Features:</p>

<ul>
<li>The mortals that can handle it may now release Zalgo by <code class="prettyprint">require(&quot;bluebird/zalgo&quot;);</code></li>
</ul>

<h2 id="0-8-3-1-2013-10-14">0.8.3-1 (2013-10-14)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix memory leak when using the same promise to attach handlers over and over again</li>
</ul>

<h2 id="0-8-3-0-2013-10-13">0.8.3-0 (2013-10-13)</h2>

<p>Features:</p>

<ul>
<li>Add <code class="prettyprint">Promise.props()</code> and <code class="prettyprint">Promise.prototype.props()</code>. They work like <code class="prettyprint">.all()</code> for object properties.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix bug with .some returning garbage when sparse arrays have rejections</li>
</ul>

<h2 id="0-8-2-2-2013-10-13">0.8.2-2 (2013-10-13)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of <code class="prettyprint">.reduce()</code> when <code class="prettyprint">initialValue</code> can be synchronously cast to a value</li>
</ul>

<h2 id="0-8-2-1-2013-10-12">0.8.2-1 (2013-10-12)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix .npmignore having irrelevant files</li>
</ul>

<h2 id="0-8-2-0-2013-10-12">0.8.2-0 (2013-10-12)</h2>

<p>Features:</p>

<ul>
<li>Improve performance of <code class="prettyprint">.some()</code></li>
</ul>

<h2 id="0-8-1-0-2013-10-11">0.8.1-0 (2013-10-11)</h2>

<p>Bugfixes:</p>

<ul>
<li>Remove uses of dynamic evaluation (<code class="prettyprint">new Function</code>, <code class="prettyprint">eval</code> etc) when strictly not necessary. Use feature detection to use static evaluation to avoid errors when dynamic evaluation is prohibited.</li>
</ul>

<h2 id="0-8-0-3-2013-10-10">0.8.0-3 (2013-10-10)</h2>

<p>Features:</p>

<ul>
<li>Add <code class="prettyprint">.asCallback</code> property to <code class="prettyprint">PromiseResolver</code>s</li>
</ul>

<h2 id="0-8-0-2-2013-10-10">0.8.0-2 (2013-10-10)</h2>

<h2 id="0-8-0-1-2013-10-09">0.8.0-1 (2013-10-09)</h2>

<p>Features:</p>

<ul>
<li>Improve overall performance. Be able to sustain infinite recursion when using promises.</li>
</ul>

<h2 id="0-8-0-0-2013-10-09">0.8.0-0 (2013-10-09)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix stackoverflow error when function calls itself &ldquo;synchronously&rdquo; from a promise handler</li>
</ul>

<h2 id="0-7-12-2-2013-10-09">0.7.12-2 (2013-10-09)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix safari 6 not using <code class="prettyprint">MutationObserver</code> as a scheduler</li>
<li>Fix process exceptions interfering with internal queue flushing</li>
</ul>

<h2 id="0-7-12-1-2013-10-09">0.7.12-1 (2013-10-09)</h2>

<p>Bugfixes:</p>

<ul>
<li>Don&rsquo;t try to detect if generators are available to allow shims to be used</li>
</ul>

<h2 id="0-7-12-0-2013-10-08">0.7.12-0 (2013-10-08)</h2>

<p>Features:</p>

<ul>
<li>Promisification now consider all functions on the object and its prototype chain</li>
<li>Individual promisifcation uses current <code class="prettyprint">this</code> if no explicit receiver is given</li>
<li>Give better stack traces when promisified callbacks throw or errback primitives such as strings by wrapping them in an <code class="prettyprint">Error</code> object.</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>Fix runtime APIs throwing synchronous errors</li>
</ul>

<h2 id="0-7-11-0-2013-10-08">0.7.11-0 (2013-10-08)</h2>

<p>Features:</p>

<ul>
<li>Deprecate <code class="prettyprint">Promise.promisify(Object target)</code> in favor of <code class="prettyprint">Promise.promisifyAll(Object target)</code> to avoid confusion with function objects</li>
<li>Coroutines now throw error when a non-promise is <code class="prettyprint">yielded</code></li>
</ul>

<h2 id="0-7-10-1-2013-10-05">0.7.10-1 (2013-10-05)</h2>

<p>Features:</p>

<ul>
<li>Make tests pass Internet Explorer 8</li>
</ul>

<h2 id="0-7-10-0-2013-10-05">0.7.10-0 (2013-10-05)</h2>

<p>Features:</p>

<ul>
<li>Create browser tests</li>
</ul>

<h2 id="0-7-9-1-2013-10-03">0.7.9-1 (2013-10-03)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix promise cast bug when thenable fulfills using itself as the fulfillment value</li>
</ul>

<h2 id="0-7-9-0-2013-10-03">0.7.9-0 (2013-10-03)</h2>

<p>Features:</p>

<ul>
<li>More performance improvements when long stack traces are enabled</li>
</ul>

<h2 id="0-7-8-1-2013-10-02">0.7.8-1 (2013-10-02)</h2>

<p>Features:</p>

<ul>
<li>Performance improvements when long stack traces are enabled</li>
</ul>

<h2 id="0-7-8-0-2013-10-02">0.7.8-0 (2013-10-02)</h2>

<p>Bugfixes:</p>

<ul>
<li>Fix promisified methods not turning synchronous exceptions into rejections</li>
</ul>

<h2 id="0-7-7-1-2013-10-02">0.7.7-1 (2013-10-02)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-7-0-2013-10-01">0.7.7-0 (2013-10-01)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-6-0-2013-09-29">0.7.6-0 (2013-09-29)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-5-0-2013-09-28">0.7.5-0 (2013-09-28)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-4-1-2013-09-28">0.7.4-1 (2013-09-28)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-4-0-2013-09-28">0.7.4-0 (2013-09-28)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-3-1-2013-09-28">0.7.3-1 (2013-09-28)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-3-0-2013-09-27">0.7.3-0 (2013-09-27)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-2-0-2013-09-27">0.7.2-0 (2013-09-27)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-1-5-2013-09-26">0.7.1-5 (2013-09-26)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-1-4-2013-09-25">0.7.1-4 (2013-09-25)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-1-3-2013-09-25">0.7.1-3 (2013-09-25)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-1-2-2013-09-24">0.7.1-2 (2013-09-24)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-1-1-2013-09-24">0.7.1-1 (2013-09-24)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-1-0-2013-09-24">0.7.1-0 (2013-09-24)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-0-1-2013-09-23">0.7.0-1 (2013-09-23)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-7-0-0-2013-09-23">0.7.0-0 (2013-09-23)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-5-2-2013-09-20">0.6.5-2 (2013-09-20)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-5-1-2013-09-18">0.6.5-1 (2013-09-18)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-5-0-2013-09-18">0.6.5-0 (2013-09-18)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-4-1-2013-09-18">0.6.4-1 (2013-09-18)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-4-0-2013-09-18">0.6.4-0 (2013-09-18)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-3-4-2013-09-18">0.6.3-4 (2013-09-18)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-3-3-2013-09-18">0.6.3-3 (2013-09-18)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-3-2-2013-09-16">0.6.3-2 (2013-09-16)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-3-1-2013-09-16">0.6.3-1 (2013-09-16)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-3-0-2013-09-15">0.6.3-0 (2013-09-15)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-2-1-2013-09-14">0.6.2-1 (2013-09-14)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-2-0-2013-09-14">0.6.2-0 (2013-09-14)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-1-0-2013-09-14">0.6.1-0 (2013-09-14)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-6-0-0-2013-09-13">0.6.0-0 (2013-09-13)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-6-2013-09-12">0.5.9-6 (2013-09-12)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-5-2013-09-12">0.5.9-5 (2013-09-12)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-4-2013-09-12">0.5.9-4 (2013-09-12)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-3-2013-09-11">0.5.9-3 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-2-2013-09-11">0.5.9-2 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-1-2013-09-11">0.5.9-1 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-9-0-2013-09-11">0.5.9-0 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-8-1-2013-09-11">0.5.8-1 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-8-0-2013-09-11">0.5.8-0 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-7-0-2013-09-11">0.5.7-0 (2013-09-11)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-6-1-2013-09-10">0.5.6-1 (2013-09-10)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-6-0-2013-09-10">0.5.6-0 (2013-09-10)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-5-1-2013-09-10">0.5.5-1 (2013-09-10)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-5-0-2013-09-09">0.5.5-0 (2013-09-09)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-4-1-2013-09-08">0.5.4-1 (2013-09-08)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-4-0-2013-09-08">0.5.4-0 (2013-09-08)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-3-0-2013-09-07">0.5.3-0 (2013-09-07)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-2-0-2013-09-07">0.5.2-0 (2013-09-07)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-1-0-2013-09-07">0.5.1-0 (2013-09-07)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-5-0-0-2013-09-07">0.5.0-0 (2013-09-07)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-4-0-0-2013-09-06">0.4.0-0 (2013-09-06)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-3-0-1-2013-09-06">0.3.0-1 (2013-09-06)</h2>

<p>Features:</p>

<ul>
<li>feature</li>
</ul>

<p>Bugfixes:</p>

<ul>
<li>bugfix</li>
</ul>

<h2 id="0-3-0-2013-09-06">0.3.0 (2013-09-06)</h2>
