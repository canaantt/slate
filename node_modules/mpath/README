<h1 id="mpath">mpath</h1>

<p>{G,S}et javascript object values using MongoDB-like path notation.</p>

<h3 id="getting">Getting</h3>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">mpath</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'mpath'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'comments.1.title'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">)</span> <span class="c1">// 'exciting!'</span>
</code></pre>

<p><code class="prettyprint">mpath.get</code> supports array property notation as well.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'comments.title'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">)</span> <span class="c1">// ['funny', 'exciting!']</span>
</code></pre>

<p>Array property and indexing syntax, when used together, are very powerful.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">array</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">]}},</span> <span class="p">{</span> <span class="na">y</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span> <span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">z</span><span class="p">:</span> <span class="mi">10</span> <span class="p">}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="s1">'Turkey Day'</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="kc">null</span> <span class="p">}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="p">{</span> <span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="kc">null</span><span class="p">,</span> <span class="mi">1</span><span class="p">]}}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="kc">null</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">y</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="kc">null</span><span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="s1">'ha'</span> <span class="p">}}</span>
  <span class="p">];</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">found</span> <span class="o">=</span> <span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'array.o.array.x.b.1'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">found</span><span class="p">);</span> <span class="c1">// prints..</span>

    <span class="p">[</span> <span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">]</span>
    <span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">]</span>
    <span class="p">,</span> <span class="p">[</span><span class="kc">null</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
    <span class="p">,</span> <span class="p">[</span><span class="kc">null</span><span class="p">]</span>
    <span class="p">,</span> <span class="p">[</span><span class="kc">undefined</span><span class="p">]</span>
    <span class="p">,</span> <span class="p">[</span><span class="kc">undefined</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">]</span>
    <span class="p">,</span> <span class="kc">undefined</span>
    <span class="p">]</span>

</code></pre>

<h5 id="field-selection-rules">Field selection rules:</h5>

<p>The following rules are iteratively applied to each <code class="prettyprint">segment</code> in the passed <code class="prettyprint">path</code>. For example:</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">path</span> <span class="o">=</span> <span class="s1">'one.two.14'</span><span class="p">;</span> <span class="c1">// path</span>
<span class="s1">'one'</span> <span class="c1">// segment 0</span>
<span class="s1">'two'</span> <span class="c1">// segment 1</span>
<span class="mi">14</span>    <span class="c1">// segment 2</span>
</code></pre>

<ul>
<li>1) when value of the segment parent is not an array, return the value of <code class="prettyprint">parent.segment</code></li>
<li>2) when value of the segment parent is an array

<ul>
<li>a) if the segment is an integer, replace the parent array with the value at <code class="prettyprint">parent[segment]</code></li>
<li>b) if not an integer, keep the array but replace each array <code class="prettyprint">item</code> with the value returned from calling <code class="prettyprint">get(remainingSegments, item)</code> or undefined if falsey.</li>
</ul></li>
</ul>

<h5 id="maps">Maps</h5>

<p><code class="prettyprint">mpath.get</code> also accepts an optional <code class="prettyprint">map</code> argument which receives each individual found value. The value returned from the <code class="prettyprint">map</code> function will be used in the original found values place.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'comments.title'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="s1">'funny'</span> <span class="o">==</span> <span class="nx">val</span>
    <span class="p">?</span> <span class="s1">'amusing'</span>
    <span class="p">:</span> <span class="nx">val</span><span class="p">;</span>
<span class="p">});</span>
<span class="c1">// ['amusing', 'exciting!']</span>
</code></pre>

<h3 id="setting">Setting</h3>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'comments.1.title'</span><span class="p">,</span> <span class="s1">'hilarious'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">)</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">comments</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">title</span><span class="p">)</span> <span class="c1">// 'hilarious'</span>
</code></pre>

<p><code class="prettyprint">mpath.set</code> supports the same array property notation as <code class="prettyprint">mpath.get</code>.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'comments.title'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'hilarious'</span><span class="p">,</span> <span class="s1">'fruity'</span><span class="p">],</span> <span class="nx">obj</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span> <span class="c1">// prints..</span>

  <span class="p">{</span> <span class="nl">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'hilarious'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'fruity'</span> <span class="p">}</span>
  <span class="p">]}</span>
</code></pre>

<p>Array property and indexing syntax can be used together also when setting.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">array</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">]}},</span> <span class="p">{</span> <span class="na">y</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span> <span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">z</span><span class="p">:</span> <span class="mi">10</span> <span class="p">}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="s1">'Turkey Day'</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="kc">null</span> <span class="p">}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="p">{</span> <span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="kc">null</span><span class="p">,</span> <span class="mi">1</span><span class="p">]}}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="kc">null</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">y</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="kc">null</span><span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="s1">'ha'</span> <span class="p">}}</span>
  <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'array.1.o'</span><span class="p">,</span> <span class="s1">'this was changed'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">'util'</span><span class="p">).</span><span class="nx">inspect</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="mi">1000</span><span class="p">));</span> <span class="c1">// prints..</span>

<span class="p">{</span>
  <span class="nl">array</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">]}},</span> <span class="p">{</span> <span class="na">y</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span> <span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="s1">'this was changed'</span> <span class="p">}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="p">{</span><span class="na">b</span><span class="p">:</span> <span class="kc">null</span> <span class="p">}},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="p">{</span> <span class="na">b</span><span class="p">:</span> <span class="p">[</span><span class="kc">null</span><span class="p">,</span> <span class="mi">1</span><span class="p">]}}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="kc">null</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">y</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="kc">null</span><span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="s1">'ha'</span> <span class="p">}}</span>
  <span class="p">];</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'array.o.array.x'</span><span class="p">,</span> <span class="s1">'this was changed too'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">'util'</span><span class="p">).</span><span class="nx">inspect</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="mi">1000</span><span class="p">));</span> <span class="c1">// prints..</span>

<span class="p">{</span>
  <span class="nl">array</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="s1">'this was changed too'</span><span class="p">},</span> <span class="p">{</span> <span class="na">y</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="na">x</span><span class="p">:</span> <span class="s1">'this was changed too'</span><span class="p">}</span> <span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="s1">'this was changed'</span> <span class="p">}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="s1">'this was changed too'</span><span class="p">},</span> <span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="s1">'this was changed too'</span><span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="s1">'this was changed too'</span><span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[{</span><span class="na">x</span><span class="p">:</span> <span class="s1">'this was changed too'</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">array</span><span class="p">:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="kc">null</span><span class="p">]</span> <span class="p">}}</span>
    <span class="p">,</span> <span class="p">{</span> <span class="na">o</span><span class="p">:</span> <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="s1">'ha'</span> <span class="p">}}</span>
  <span class="p">];</span>
<span class="p">}</span>
</code></pre>

<h4 id="setting-arrays">Setting arrays</h4>

<p>By default, setting a property within an array to another array results in each element of the new array being set to the item in the destination array at the matching index. An example is helpful.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'comments.title'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'hilarious'</span><span class="p">,</span> <span class="s1">'fruity'</span><span class="p">],</span> <span class="nx">obj</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span> <span class="c1">// prints..</span>

  <span class="p">{</span> <span class="nl">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'hilarious'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'fruity'</span> <span class="p">}</span>
  <span class="p">]}</span>
</code></pre>

<p>If we do not desire this destructuring-like assignment behavior we may instead specify the <code class="prettyprint">$</code> operator in the path being set to force the array to be copied directly.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'comments.$.title'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'hilarious'</span><span class="p">,</span> <span class="s1">'fruity'</span><span class="p">],</span> <span class="nx">obj</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span> <span class="c1">// prints..</span>

  <span class="p">{</span> <span class="nl">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="p">[</span><span class="s1">'hilarious'</span><span class="p">,</span> <span class="s1">'fruity'</span><span class="p">]</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="p">[</span><span class="s1">'hilarious'</span><span class="p">,</span> <span class="s1">'fruity'</span><span class="p">]</span> <span class="p">}</span>
  <span class="p">]}</span>
</code></pre>

<h4 id="field-assignment-rules">Field assignment rules</h4>

<p>The rules utilized mirror those used on <code class="prettyprint">mpath.get</code>, meaning we can take values returned from <code class="prettyprint">mpath.get</code>, update them, and reassign them using <code class="prettyprint">mpath.set</code>. Note that setting nested arrays of arrays can get unweildy quickly. Check out the <a href="https://github.com/aheckmann/mpath/blob/master/test/index.js">tests</a> for more extreme examples.</p>

<h5 id="maps">Maps</h5>

<p><code class="prettyprint">mpath.set</code> also accepts an optional <code class="prettyprint">map</code> argument which receives each individual value being set. The value returned from the <code class="prettyprint">map</code> function will be used in the original values place.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'funny'</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span> <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'comments.title'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'hilarious'</span><span class="p">,</span> <span class="s1">'fruity'</span><span class="p">],</span> <span class="nx">obj</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">val</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span> <span class="c1">// prints..</span>

  <span class="p">{</span> <span class="nl">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="mi">9</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="mi">6</span> <span class="p">}</span>
  <span class="p">]}</span>
</code></pre>

<h3 id="custom-object-types">Custom object types</h3>

<p>Sometimes you may want to enact the same functionality on custom object types that store all their real data internally, say for an ODM type object. No fear, <code class="prettyprint">mpath</code> has you covered. Simply pass the name of the property being used to store the internal data and it will be traversed instead:</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">mpath</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'mpath'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">comments</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'exciting!'</span><span class="p">,</span> <span class="na">_doc</span><span class="p">:</span> <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="s1">'great!'</span> <span class="p">}}</span>
    <span class="p">]</span>
<span class="p">}</span>

<span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'comments.0.title'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">,</span> <span class="s1">'_doc'</span><span class="p">)</span>            <span class="c1">// 'great!'</span>
<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'comments.0.title'</span><span class="p">,</span> <span class="s1">'nov 3rd'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">,</span> <span class="s1">'_doc'</span><span class="p">)</span>
<span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'comments.0.title'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">,</span> <span class="s1">'_doc'</span><span class="p">)</span>            <span class="c1">// 'nov 3rd'</span>
<span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'comments.0.title'</span><span class="p">,</span> <span class="nx">obj</span><span class="p">)</span>                    <span class="c1">// 'exciting'</span>
</code></pre>

<p>When used with a <code class="prettyprint">map</code>, the <code class="prettyprint">map</code> argument comes last.</p>
<pre class="highlight javascript"><code><span class="nx">mpath</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">path</span><span class="p">,</span> <span class="nx">obj</span><span class="p">,</span> <span class="s1">'_doc'</span><span class="p">,</span> <span class="nx">map</span><span class="p">);</span>
<span class="nx">mpath</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">path</span><span class="p">,</span> <span class="nx">val</span><span class="p">,</span> <span class="nx">obj</span><span class="p">,</span> <span class="s1">'_doc'</span><span class="p">,</span> <span class="nx">map</span><span class="p">);</span>
</code></pre>

<p><a href="https://github.com/aheckmann/mpath/blob/master/LICENSE">LICENSE</a></p>
