"use strict";var f=require("util").format,MongoError=require("../error"),classFilters={},filteredClasses={},level=null,pid=process.pid,currentLogger=null,Logger=function(e,s){if(!(this instanceof Logger))return new Logger(e,s);s=s||{};this.className=e,s.logger?currentLogger=s.logger:null==currentLogger&&(currentLogger=console.log),s.loggerLevel&&(level=s.loggerLevel||"error"),null==filteredClasses[this.className]&&(classFilters[this.className]=!0)};Logger.prototype.debug=function(e,s){if(this.isDebug()&&(Object.keys(filteredClasses).length>0&&filteredClasses[this.className]||0==Object.keys(filteredClasses).length&&classFilters[this.className])){var r=(new Date).getTime(),t=f("[%s-%s:%s] %s %s","DEBUG",this.className,pid,r,e),l={type:"debug",message:e,className:this.className,pid:pid,date:r};s&&(l.meta=s),currentLogger(t,l)}},Logger.prototype.warn=function(e,s){if(this.isWarn()&&(Object.keys(filteredClasses).length>0&&filteredClasses[this.className]||0==Object.keys(filteredClasses).length&&classFilters[this.className])){var r=(new Date).getTime(),t=f("[%s-%s:%s] %s %s","WARN",this.className,pid,r,e),l={type:"warn",message:e,className:this.className,pid:pid,date:r};s&&(l.meta=s),currentLogger(t,l)}},Logger.prototype.info=function(e,s){if(this.isInfo()&&(Object.keys(filteredClasses).length>0&&filteredClasses[this.className]||0==Object.keys(filteredClasses).length&&classFilters[this.className])){var r=(new Date).getTime(),t=f("[%s-%s:%s] %s %s","INFO",this.className,pid,r,e),l={type:"info",message:e,className:this.className,pid:pid,date:r};s&&(l.meta=s),currentLogger(t,l)}},Logger.prototype.error=function(e,s){if(this.isError()&&(Object.keys(filteredClasses).length>0&&filteredClasses[this.className]||0==Object.keys(filteredClasses).length&&classFilters[this.className])){var r=(new Date).getTime(),t=f("[%s-%s:%s] %s %s","ERROR",this.className,pid,r,e),l={type:"error",message:e,className:this.className,pid:pid,date:r};s&&(l.meta=s),currentLogger(t,l)}},Logger.prototype.isInfo=function(){return"info"==level||"debug"==level},Logger.prototype.isError=function(){return"error"==level||"info"==level||"debug"==level},Logger.prototype.isWarn=function(){return"error"==level||"warn"==level||"info"==level||"debug"==level},Logger.prototype.isDebug=function(){return"debug"==level},Logger.reset=function(){level="error",filteredClasses={}},Logger.currentLogger=function(){return currentLogger},Logger.setCurrentLogger=function(e){if("function"!=typeof e)throw new MongoError("current logger must be a function");currentLogger=e},Logger.filter=function(e,s){"class"==e&&Array.isArray(s)&&(filteredClasses={},s.forEach(function(e){filteredClasses[e]=!0}))},Logger.setLevel=function(e){if("info"!=e&&"error"!=e&&"debug"!=e&&"warn"!=e)throw new Error(f("%s is an illegal logging level",e));level=e},module.exports=Logger;