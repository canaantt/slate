"use strict";var f=require("util").format,crypto=require("crypto"),Query=require("../connection/commands").Query,Binary=require("bson").Binary,MongoError=require("../error"),AuthSession=function(e,r,t){this.db=e,this.username=r,this.password=t};AuthSession.prototype.equal=function(e){return e.db==this.db&&e.username==this.username&&e.password==this.password};var id=0,ScramSHA1=function(e){this.bson=e,this.authStore=[],this.id=id++},parsePayload=function(e){for(var r={},t=e.split(","),n=0;n<t.length;n++){var a=t[n].split("=");r[a[0]]=a[1]}return r},passwordDigest=function(e,r){if("string"!=typeof e)throw new MongoError("username must be a string");if("string"!=typeof r)throw new MongoError("password must be a string");if(0==r.length)throw new MongoError("password cannot be empty");var t=crypto.createHash("md5");return t.update(e+":mongo:"+r,"utf8"),t.digest("hex")},xor=function(e,r){Buffer.isBuffer(e)||(e=new Buffer(e)),Buffer.isBuffer(r)||(r=new Buffer(r));var t=[];if(e.length>r.length)for(var n=0;n<r.length;n++)t.push(e[n]^r[n]);else for(var n=0;n<e.length;n++)t.push(e[n]^r[n]);return new Buffer(t)},hi=function(e,r,t){var n=function(r){var t=crypto.createHmac("sha1",e);return t.update(r),new Buffer(t.digest("base64"),"base64")};r=Buffer.concat([r,new Buffer("\x00\x00\x00")]);for(var a=n(r),o=a,s=0;t-1>s;s++)o=n(o),a=xor(a,o);return a};ScramSHA1.prototype.auth=function(e,r,t,n,a,o){var s=this,u=r.length;if(0==u)return o(null,null);for(var i=0,c=!1,l=null,h=function(r){n=n.replace("=","=3D").replace(",","=2C");var h=crypto.randomBytes(24).toString("base64"),d=f("n=%s,r=%s",n,h),p={saslStart:1,mechanism:"SCRAM-SHA-1",payload:new Binary(f("n,,%s",d)),autoAuthorize:1},w=function(e,r){return e?(i-=1,l=e,!1):r.result.$err?(l=r.result,!1):r.result.errmsg?(l=r.result,!1):(c=!0,i+=1,!0)},m=function(e,r){return 0==e&&r>0?(addAuthSession(s.authStore,new AuthSession(t,n,a)),o(null,!0)):0==e?(null==l&&(l=new MongoError(f("failed to authenticate using scram"))),o(l,!1)):void 0},g=function(e,r){w(e,r),u-=1,m(u,i)};e(r,new Query(s.bson,f("%s.$cmd",t),p,{numberToSkip:0,numberToReturn:1}).toBin(),function(c,h){if(0!=w(c,h)){var p=parsePayload(h.result.payload.value()),m=parseInt(p.i,10),b=p.s,y=p.r,v=f("c=biws,r=%s",y),S=passwordDigest(n,a),B=hi(S,new Buffer(b,"base64"),m),A=crypto.createHmac("sha1",B);A.update(new Buffer("Client Key"));var H=new Buffer(A.digest("base64"),"base64"),x=crypto.createHash("sha1");x.update(H);var q=new Buffer(x.digest("base64"),"base64"),M=[d,h.result.payload.value().toString("base64"),v].join(","),A=crypto.createHmac("sha1",q);A.update(new Buffer(M));var T=new Buffer(A.digest("base64"),"base64"),E=f("p=%s",new Buffer(xor(H,T)).toString("base64")),k=[v,E].join(","),A=crypto.createHmac("sha1",B);A.update(new Buffer("Server Key"));var C=new Buffer(A.digest("base64"),"base64"),A=crypto.createHmac("sha1",C);A.update(new Buffer(M));var I=(new Buffer(A.digest("base64"),"base64"),{saslContinue:1,conversationId:h.result.conversationId,payload:new Binary(new Buffer(k))});e(r,new Query(s.bson,f("%s.$cmd",t),I,{numberToSkip:0,numberToReturn:1}).toBin(),function(n,a){if(a&&0==a.result.done){var o={saslContinue:1,conversationId:a.result.conversationId,payload:new Buffer(0)};e(r,new Query(s.bson,f("%s.$cmd",t),o,{numberToSkip:0,numberToReturn:1}).toBin(),function(e,r){g(e,r)})}else g(n,a)})}else{if(u-=1,0==u&&i>0)return addAuthSession(s.authStore,new AuthSession(t,n,a)),o(null,!0);if(0==u)return null==l&&(l=new MongoError(f("failed to authenticate using scram"))),o(l,!1)}})},d=function(e){process.nextTick(function(){h(e)})};r.length>0;)d(r.shift())};var addAuthSession=function(e,r){for(var t=!1,n=0;n<e.length;n++)if(e[n].equal(r)){t=!0;break}t||e.push(r)};ScramSHA1.prototype.logout=function(e){this.authStore=this.authStore.filter(function(r){return r.db!=e})},ScramSHA1.prototype.reauthenticate=function(e,r,t){var n=this.authStore.slice(0),a=n.length;if(0==a)return t(null,null);for(var o=0;o<n.length;o++)this.auth(e,r,n[o].db,n[o].username,n[o].password,function(e,r){e&&(e=e),a-=1,0==a&&t(e,null)})},module.exports=ScramSHA1;