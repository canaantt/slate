"use strict";function stateTransition(e,t){var n={disconnected:[CONNECTING,DESTROYED,DISCONNECTED],connecting:[CONNECTING,DESTROYED,CONNECTED,DISCONNECTED],connected:[CONNECTED,DISCONNECTED,DESTROYED],destroyed:[DESTROYED]},r=n[e.state];r&&-1!=r.indexOf(t)?e.state=t:e.logger.error(f("Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]",e.id,e.state,t,r))}function attemptReconnect(e){e.runningAttempReconnect||(e.runningAttempReconnect=!0,e.haTimeoutId=setTimeout(function(){function t(e,t){return function(n){function r(){if(0==e.s.connectingServers.length){if(e.state==DESTROYED)return;e.s.replicaSetState.hasPrimary()?(e.s.replicaSetState.hasPrimaryAndSecondary()&&e.s.disconnectHandler&&e.s.disconnectHandler.execute(),connectNewServers(e,e.s.replicaSetState.unknownServers,function(t,n){e.s.logger.isDebug()&&e.s.logger.debug(f("attemptReconnect for replset with id successful resuming topologyMonitor",e.id)),e.runningAttempReconnect=!1,topologyMonitor(e)})):(e.listeners("close").length>0&&e.emit("close",e),e.runningAttempReconnect=!1,attemptReconnect(e))}}if(e.state==DESTROYED)return this.destroy();e.s.logger.isDebug()&&e.s.logger.debug(f("attemptReconnect for replset with id %s using server %s ended with event %s",e.id,this.name,t));for(var i=0;i<e.s.connectingServers.length;i++)e.s.connectingServers[i].equals(this)&&e.s.connectingServers.splice(i,1);var o=this;if(e.s.logger.isDebug()&&e.s.logger.debug(f("attemptReconnect in replset with id %s for",e.id)),"connect"!=t||e.authenticating)"connect"==t&&e.authenticating&&this.destroy();else{if(e.state==DESTROYED)return o.destroy();if(e.s.replicaSetState.update(o)){for(var i=0;i<handlers.length;i++)o.removeAllListeners(handlers[i]);o.on("error",handleEvent(e,"error")),o.on("close",handleEvent(e,"close")),o.on("timeout",handleEvent(e,"timeout")),o.on("parseError",handleEvent(e,"parseError"))}else o.destroy()}r()}}function n(n,r){setTimeout(function(){n.once("connect",t(e,"connect")),n.once("close",t(e,"close")),n.once("timeout",t(e,"timeout")),n.once("error",t(e,"error")),n.once("parseError",t(e,"parseError")),n.on("serverOpening",function(t){e.emit("serverOpening",t)}),n.on("serverDescriptionChanged",function(t){e.emit("serverDescriptionChanged",t)}),n.on("serverClosed",function(t){e.emit("serverClosed",t)}),n.connect(e.s.connectOptions)},r)}if(e.state!=DESTROYED){e.s.logger.isDebug()&&e.s.logger.debug(f("attemptReconnect for replset with id %s",e.id));var r=Object.keys(e.s.replicaSetState.set),i=r.map(function(t){return new Server(assign({},e.s.options,{host:t.split(":")[0],port:parseInt(t.split(":")[1],10)},{authProviders:e.authProviders,reconnect:!1,monitoring:!1,inTopology:!0},{clientInfo:clone(e.s.clientInfo)}))});e.s.connectingServers=i.slice(0);for(var o=0;i.length>0;)n(i.shift(),o++)}},e.s.minHeartbeatFrequencyMS))}function connectNewServers(e,t,n){function r(t,n){setTimeout(function(){if(e.state!=DESTROYED){var n=new Server(assign({},e.s.options,{host:t.split(":")[0],port:parseInt(t.split(":")[1],10)},{authProviders:e.authProviders,reconnect:!1,monitoring:!1,inTopology:!0},{clientInfo:clone(e.s.clientInfo)}));n.once("connect",o(e,"connect")),n.once("close",o(e,"close")),n.once("timeout",o(e,"timeout")),n.once("error",o(e,"error")),n.once("parseError",o(e,"parseError")),n.on("serverOpening",function(t){e.emit("serverOpening",t)}),n.on("serverDescriptionChanged",function(t){e.emit("serverDescriptionChanged",t)}),n.on("serverClosed",function(t){e.emit("serverClosed",t)}),n.connect(e.s.connectOptions)}},n)}var i=t.length,o=function(e,t){return function(r,o){var s=this;if(i-=1,e.state==DESTROYED)return this.destroy();if("connect"!=t||e.authenticating)"connect"==t&&e.authenticating&&this.destroy();else{if(e.state==DESTROYED)return s.destroy();var a=e.s.replicaSetState.update(s);if(a){for(var c=0;c<handlers.length;c++)s.removeAllListeners(handlers[c]);s.on("error",handleEvent(e,"error")),s.on("close",handleEvent(e,"close")),s.on("timeout",handleEvent(e,"timeout")),s.on("parseError",handleEvent(e,"parseError"))}else s.destroy()}0==i&&n()}};if(0==i)return n();for(var s=0;s<t.length;s++)r(t[s],s)}function topologyMonitor(e,t){t=t||{},e.haTimeoutId=setTimeout(function(){function n(t,n,r){var i=(new Date).getTime();emitSDAMEvent(e,"serverHeartbeatStarted",{connectionId:n.name}),n.command("admin.$cmd",{ismaster:!0},{monitoring:!0},function(o,s){if(e.state==DESTROYED)return n.destroy(),r(o,s);var a=(new Date).getTime()-i,c=process.hrtime();n.lastUpdateTime=1e3*c[0]+Math.round(c[1]/1e3),o?(emitSDAMEvent(e,"serverHearbeatFailed",{durationMS:a,failure:o,connectionId:n.name}),t.s.replicaSetState.remove(n)):(n.ismaster=s.result,n.ismaster.lastWrite&&n.ismaster.lastWrite.lastWriteDate&&(n.lastWriteDate=n.ismaster.lastWrite.lastWriteDate.getTime()),-1==n.lastIsMasterMS?n.lastIsMasterMS=a:n.lastIsMasterMS&&(n.lastIsMasterMS=.2*a+.8*n.lastIsMasterMS),t.s.replicaSetState.update(n),emitSDAMEvent(e,"serverHeartbeatSucceeded",{durationMS:a,reply:s.result,connectionId:n.name})),e.s.replicaSetState.updateServerMaxStaleness(n,e.s.haInterval),r(o,s)})}function r(){e.state!=DESTROYED&&connectNewServers(e,e.s.replicaSetState.unknownServers,function(n,r){if(e.state!=DESTROYED){if(t.haInterval)if(e.state==CONNECTING&&e.s.replicaSetState.hasPrimaryAndSecondary())stateTransition(e,CONNECTED),e.initialConnectState.connect=!0,e.initialConnectState.fullsetup=!0,e.initialConnectState.all=!0,process.nextTick(function(){e.emit("connect",e),e.emit("fullsetup",e),e.emit("all",e)});else if(e.state==CONNECTING&&e.s.replicaSetState.hasPrimary())stateTransition(e,CONNECTED),e.initialConnectState.connect=!0,process.nextTick(function(){e.emit("connect",e)});else if(e.state==CONNECTING&&e.s.replicaSetState.hasSecondary()&&e.s.options.secondaryOnlyConnectionAllowed)stateTransition(e,CONNECTED),e.initialConnectState.connect=!0,process.nextTick(function(){e.emit("connect",e)});else{if(e.state==CONNECTING)return e.emit("error",new MongoError("no primary found in replicaset")),e.destroy();e.state==CONNECTED&&e.s.replicaSetState.hasPrimaryAndSecondary()&&!e.initialConnectState.fullsetup&&(e.initialConnectState.fullsetup=!0,process.nextTick(function(){e.emit("fullsetup",e),e.emit("all",e)}))}topologyMonitor(e)}})}if(e.state!=DESTROYED){e.s.replicaSetState.hasPrimaryAndSecondary()&&e.s.disconnectHandler&&e.s.disconnectHandler.execute();var i=e.s.replicaSetState.allServers();e.s.logger.isDebug()&&e.s.logger.debug(f("topologyMonitor in replset with id %s connected servers [%s]",e.id,i.map(function(e){return e.name})));var o=i.length;if(0==o&&!t.haInterval)return e.listeners("close").length>0&&e.emit("close",e),attemptReconnect(e);if(0==i.length&&e.s.replicaSetState.unknownServers.length>0&&t.haInterval)return r();if(0==i.length&&t.haInterval)return e.destroy(),e.emit("error",new MongoError("no valid replicaset members found"));for(var s=0;s<i.length;s++)n(e,i[s],function(e,t){o-=1,0==o&&r()})}},t.haInterval||e.s.haInterval)}function handleEvent(e,t){return function(n){e.state!=DESTROYED&&(e.s.logger.isDebug()&&e.s.logger.debug(f("handleEvent %s from server %s in replset with id %s",t,e.name,e.id)),e.s.replicaSetState.remove(this))}}function handleInitialConnectEvent(e,t){return function(n){if(e.s.logger.isDebug()&&e.s.logger.debug(f("handleInitialConnectEvent %s from server %s in replset with id %s",t,this.name,e.id)),e.state==DESTROYED)return this.destroy();if("connect"==t){var r=e.s.replicaSetState.update(this);if(1==r){e.s.logger.isDebug()&&e.s.logger.debug(f("handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]",t,this.name,e.id,JSON.stringify(e.s.replicaSetState.set)));for(var i=0;i<handlers.length;i++)this.removeAllListeners(handlers[i]);this.on("error",handleEvent(e,"error")),this.on("close",handleEvent(e,"close")),this.on("timeout",handleEvent(e,"timeout")),this.on("parseError",handleEvent(e,"parseError"))}else{if(r instanceof MongoError)return this.destroy(),e.destroy(),e.emit("error",r);this.destroy()}}else e.emit("failed",this),e.s.replicaSetState.remove(this);for(var i=0;i<e.s.connectingServers.length;i++)e.s.connectingServers[i].equals(this)&&e.s.connectingServers.splice(i,1);0==e.s.connectingServers.length&&topologyMonitor(e,{haInterval:1})}}function connectServers(e,t){function n(t,n){setTimeout(function(){e.s.replicaSetState.update(t),t.once("close",handleInitialConnectEvent(e,"close")),t.once("timeout",handleInitialConnectEvent(e,"timeout")),t.once("parseError",handleInitialConnectEvent(e,"parseError")),t.once("error",handleInitialConnectEvent(e,"error")),t.once("connect",handleInitialConnectEvent(e,"connect")),t.on("serverOpening",function(t){e.emit("serverOpening",t)}),t.on("serverDescriptionChanged",function(t){e.emit("serverDescriptionChanged",t)}),t.on("serverClosed",function(t){e.emit("serverClosed",t)}),t.connect(e.s.connectOptions)},n)}e.s.connectingServers=e.s.connectingServers.concat(t);for(var r=0;t.length>0;)n(t.shift(),r++)}function emitSDAMEvent(e,t,n){e.listeners(t).length>0&&e.emit(t,n)}function basicReadPreferenceValidation(e,t){if(t.readPreference&&!(t.readPreference instanceof ReadPreference))throw new Error("readPreference must be an instance of ReadPreference")}var inherits=require("util").inherits,f=require("util").format,EventEmitter=require("events").EventEmitter,BSON=require("bson")["native"]().BSON,ReadPreference=require("./read_preference"),BasicCursor=require("../cursor"),Logger=require("../connection/logger"),debugOptions=require("../connection/utils").debugOptions,MongoError=require("../error"),Server=require("./server"),ReplSetState=require("./replset_state"),assign=require("./shared").assign,clone=require("./shared").clone,createClientInfo=require("./shared").createClientInfo,MongoCR=require("../auth/mongocr"),X509=require("../auth/x509"),Plain=require("../auth/plain"),GSSAPI=require("../auth/gssapi"),SSPI=require("../auth/sspi"),ScramSHA1=require("../auth/scram"),DISCONNECTED="disconnected",CONNECTING="connecting",CONNECTED="connected",DESTROYED="destroyed",id=1,handlers=["connect","close","error","timeout","parseError"],ReplSet=function(e,t){var n=this;if(t=t||{},!Array.isArray(e))throw new MongoError("seedlist must be an array");if(0==e.length)throw new MongoError("seedlist must contain at least one entry");e.forEach(function(e){if("string"!=typeof e.host||"number"!=typeof e.port)throw new MongoError("seedlist entry must contain a host and port")}),EventEmitter.call(this),this.id=id++;var r=t.localThresholdMS||15;t.acceptableLatency&&(r=t.acceptableLatency);var i=Logger("ReplSet",t);this.s={options:assign({},t),bson:t.bson||new BSON,Cursor:t.cursorFactory||BasicCursor,logger:i,seedlist:e,replicaSetState:new ReplSetState({id:this.id,setName:t.setName,acceptableLatency:r,heartbeatFrequencyMS:t.haInterval?t.haInterval:1e4,logger:i}),connectingServers:[],haInterval:t.haInterval?t.haInterval:1e4,minHeartbeatFrequencyMS:500,disconnectHandler:t.disconnectHandler,index:0,connectOptions:{},debug:"boolean"==typeof t.debug?t.debug:!1,clientInfo:createClientInfo(t)},this.s.replicaSetState.on("topologyDescriptionChanged",function(e){n.emit("topologyDescriptionChanged",e)}),this.s.logger.isWarn()&&0!=this.s.options.socketTimeout&&this.s.options.socketTimeout<this.s.haInterval&&this.s.logger.warn(f("warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts",this.s.options.socketTimeout,this.s.haInterval)),this.authProviders=t.authProviders||{mongocr:new MongoCR(this.s.bson),x509:new X509(this.s.bson),plain:new Plain(this.s.bson),gssapi:new GSSAPI(this.s.bson),sspi:new SSPI(this.s.bson),"scram-sha-1":new ScramSHA1(this.s.bson)};var o=["joined","left"];o.forEach(function(e){n.s.replicaSetState.on(e,function(t,r){n.emit(e,t,r)})}),this.initialConnectState={connect:!1,fullsetup:!1,all:!1},this.state=DISCONNECTED,this.haTimeoutId=null,this.authenticating=!1};inherits(ReplSet,EventEmitter),Object.defineProperty(ReplSet.prototype,"type",{enumerable:!0,get:function(){return"replset"}}),ReplSet.prototype.connect=function(e){var t=this;this.s.connectOptions=e||{},stateTransition(this,CONNECTING);var n=this.s.seedlist.map(function(e){return new Server(assign({},t.s.options,e,{authProviders:t.authProviders,reconnect:!1,monitoring:!1,inTopology:!0},{clientInfo:clone(t.s.clientInfo)}))});emitSDAMEvent(this,"topologyOpening",{topologyId:this.id}),connectServers(t,n)},ReplSet.prototype.destroy=function(){stateTransition(this,DESTROYED),this.haTimeoutId&&clearTimeout(this.haTimeoutId),this.s.replicaSetState.destroy(),this.s.connectingServers.forEach(function(e){e.destroy()}),emitSDAMEvent(this,"topologyClosed",{topologyId:this.id})},ReplSet.prototype.unref=function(){stateTransition(this,DISCONNECTED),this.s.replicaSetState.allServers().forEach(function(e){e.unref()}),clearTimeout(this.haTimeoutId)},ReplSet.prototype.lastIsMaster=function(){return this.s.replicaSetState.primary?this.s.replicaSetState.primary.lastIsMaster():null},ReplSet.prototype.connections=function(){for(var e=this.s.replicaSetState.allServers(),t=[],n=0;n<e.length;n++)t=t.concat(e[n].connections());return t},ReplSet.prototype.isConnected=function(e){return e=e||{},this.authenticating?!1:e.readPreference&&e.readPreference.equals(ReadPreference.secondary)?this.s.replicaSetState.hasSecondary():e.readPreference&&e.readPreference.equals(ReadPreference.primary)?this.s.replicaSetState.hasPrimary():e.readPreference&&e.readPreference.equals(ReadPreference.primaryPreferred)?this.s.replicaSetState.hasSecondary()||this.s.replicaSetState.hasPrimary():e.readPreference&&e.readPreference.equals(ReadPreference.secondaryPreferred)?this.s.replicaSetState.hasSecondary()||this.s.replicaSetState.hasPrimary():this.s.secondaryOnlyConnectionAllowed&&this.s.replicaSetState.hasSecondary()?!0:this.s.replicaSetState.hasPrimary()},ReplSet.prototype.isDestroyed=function(){return this.state==DESTROYED},ReplSet.prototype.getServer=function(e){e=e||{};var t=this.s.replicaSetState.pickServer(e.readPreference);return this.s.debug&&this.emit("pickedServer",e.readPreference,t),t},ReplSet.prototype.getServers=function(){return this.s.replicaSetState.allServers()};var executeWriteOperation=function(e,t,n,r,i,o){return"function"==typeof i&&(o=i,i={},i=i||{}),i=i||{},null==e.s.replicaSetState.primary?o(new MongoError("no primary server found")):void e.s.replicaSetState.primary[t](n,r,i,o)};ReplSet.prototype.insert=function(e,t,n,r){return"function"==typeof n&&(r=n,n={},n=n||{}),this.state==DESTROYED?r(new MongoError(f("topology was destroyed"))):this.s.replicaSetState.hasPrimary()||null==this.s.disconnectHandler?void executeWriteOperation(this,"insert",e,t,n,r):this.s.disconnectHandler.add("insert",e,t,n,r)},ReplSet.prototype.update=function(e,t,n,r){return"function"==typeof n&&(r=n,n={},n=n||{}),this.state==DESTROYED?r(new MongoError(f("topology was destroyed"))):this.s.replicaSetState.hasPrimary()||null==this.s.disconnectHandler?void executeWriteOperation(this,"update",e,t,n,r):this.s.disconnectHandler.add("update",e,t,n,r)},ReplSet.prototype.remove=function(e,t,n,r){return"function"==typeof n&&(r=n,n={},n=n||{}),this.state==DESTROYED?r(new MongoError(f("topology was destroyed"))):this.s.replicaSetState.hasPrimary()||null==this.s.disconnectHandler?void executeWriteOperation(this,"remove",e,t,n,r):this.s.disconnectHandler.add("remove",e,t,n,r)},ReplSet.prototype.command=function(e,t,n,r){if("function"==typeof n&&(r=n,n={},n=n||{}),this.state==DESTROYED)return r(new MongoError(f("topology was destroyed")));var i=this,o=n.readPreference?n.readPreference:ReadPreference.primary,s=this.s.replicaSetState.pickServer(o);return s instanceof Server?(i.s.debug&&i.emit("pickedServer",ReadPreference.primary,s),s||null==this.s.disconnectHandler?null==s?r(new MongoError(f("no server found that matches the provided readPreference %s",o))):void s.command(e,t,n,r):this.s.disconnectHandler.add("command",e,t,n,r)):r(s)},ReplSet.prototype.auth=function(e,t){function n(n){var r=[e,t].concat(o.slice(0)),c=r.concat([function(e,t){if(l-=1,e&&a.push({name:n.name,err:e}),0==l){if(i.authenticating=!1,a.length)return s(MongoError.create({message:"authentication fail",errors:a}),!1);s(null,i)}}]);n.lastIsMaster().arbiterOnly?c.pop()(null):n.auth.apply(n,c)}var r=Array.prototype.slice.call(arguments,0).slice(0),i=this,o=Array.prototype.slice.call(arguments,2),s=o.pop();if(null==this.authProviders[e]&&"default"!=e)return s(new MongoError(f("auth provider %s does not exist",e)));if(this.authenticating)return s(new MongoError("authentication or logout allready in process"));if(!i.s.replicaSetState.hasPrimary()&&null!=i.s.disconnectHandler)return i.s.disconnectHandler.add("auth",t,r,{},s);this.authenticating=!0;var a=[],c=this.s.replicaSetState.allServers();0==c.length&&(this.authenticating=!1,s(null,!0));for(var l=c.length;c.length>0;)n(c.shift())},ReplSet.prototype.logout=function(e,t){var n=this;if(this.authenticating)throw new MongoError("authentication or logout allready in process");this.authenticating=!0;for(var r=Object.keys(this.authProviders),i=0;i<r.length;i++)this.authProviders[r[i]].logout(e);var o=this.s.replicaSetState.allServers(),s=o.length;if(0==s)return t();for(var a=[],i=0;i<o.length;i++)o[i].logout(e,function(r){if(s-=1,r&&a.push({name:server.name,err:r}),0==s){if(n.authenticating=!1,a.length)return t(MongoError.create({message:f("logout failed against db %s",e),errors:a}),!1);t()}})},ReplSet.prototype.cursor=function(e,t,n){n=n||{};var r=n.cursorFactory||this.s.Cursor;return new r(this.s.bson,e,t,n,this,this.s.options)},module.exports=ReplSet;