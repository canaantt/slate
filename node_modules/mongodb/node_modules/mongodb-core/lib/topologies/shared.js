"use strict";function emitSDAMEvent(e,r,o){e.listeners(r).length>0&&e.emit(r,o)}function createClientInfo(e){var r=e.clientInfo?clone(e.clientInfo):{driver:{name:"nodejs-core",version:driverVersion},os:{type:type,name:name,architecture:architecture,version:release}};if(r.platform&&-1==r.platform.indexOf("mongodb-core")?r.platform=f("%s, mongodb-core: %s",r.platform,driverVersion):r.platform||(r.platform=nodejsversion),e.appname){var o=new Buffer(e.appname),t=o.length>128?o.slice(0,128).toString("utf8"):e.appname;r.application={name:t}}return r}function clone(e){return JSON.parse(JSON.stringify(e))}var os=require("os"),f=require("util").format,driverVersion=require(__dirname+"/../../package.json").version,nodejsversion=f("Node.js %s, %s",process.version,os.endianness()),type=os.type(),name=process.platform,architecture=process.arch,release=os.release(),getPreviousDescription=function(e){return e.s.serverDescription||(e.s.serverDescription={address:e.name,arbiters:[],hosts:[],passives:[],type:"Unknown"}),e.s.serverDescription},emitServerDescriptionChanged=function(e,r){e.listeners("serverDescriptionChanged").length>0&&(e.emit("serverDescriptionChanged",{topologyId:-1!=e.s.topologyId?e.s.topologyId:e.id,address:e.name,previousDescription:getPreviousDescription(e),newDescription:r}),e.s.serverDescription=r)},getPreviousTopologyDescription=function(e){return e.s.topologyDescription||(e.s.topologyDescription={topologyType:"Unknown",servers:[{address:e.name,arbiters:[],hosts:[],passives:[],type:"Unknown"}]}),e.s.topologyDescription},emitTopologyDescriptionChanged=function(e,r){e.listeners("topologyDescriptionChanged").length>0&&(e.emit("topologyDescriptionChanged",{topologyId:-1!=e.s.topologyId?e.s.topologyId:e.id,address:e.name,previousDescription:getPreviousTopologyDescription(e),newDescription:r}),e.s.serverDescription=r)},changedIsMaster=function(e,r,o){var t=getTopologyType(e,r),n=getTopologyType(e,o);return n!=t?!0:!1},getTopologyType=function(e,r){return r||(r=e.ismaster),r?r.ismaster&&!r.hosts?"Standalone":r.ismaster&&"isdbgrid"==r.msg?"Mongos":r.ismaster?"RSPrimary":r.secondary?"RSSecondary":r.arbiterOnly?"RSArbiter":"Unknown":"Unknown"},inquireServerState=function(e){return function(r){if("destroyed"!=e.s.state){var o=(new Date).getTime();emitSDAMEvent(e,"serverHeartbeatStarted",{connectionId:e.name}),e.command("admin.$cmd",{ismaster:!0},{monitoring:!0},function(t,n){if(t)emitSDAMEvent(e,"serverHearbeatFailed",{durationMS:s,failure:t,connectionId:e.name});else{e.emit("ismaster",n,e);var s=(new Date).getTime()-o;emitSDAMEvent(e,"serverHeartbeatSucceeded",{durationMS:s,reply:n.result,connectionId:e.name}),changedIsMaster(e,e.s.ismaster,n.result)&&emitServerDescriptionChanged(e,{address:e.name,arbiters:[],hosts:[],passives:[],type:e.s.inTopology?getTopologyType(e):"Standalone"}),e.s.ismaster=n.result,e.s.isMasterLatencyMS=s}return"function"==typeof r?r(t,n):void(e.s.inquireServerStateTimeout=setTimeout(inquireServerState(e),e.s.haInterval))})}}},assign=Object.assign?Object.assign:function(e,r){if(void 0===e||null===e)throw new TypeError("Cannot convert first argument to object");for(var o=Object(e),t=1;t<arguments.length;t++){var n=arguments[t];if(void 0!==n&&null!==n)for(var s=Object.keys(Object(n)),i=0,a=s.length;a>i;i++){var p=s[i],c=Object.getOwnPropertyDescriptor(n,p);void 0!==c&&c.enumerable&&(o[p]=n[p])}}return o},cloneOptions=function(e){var r={};for(var o in e)r[o]=e[o];return r};module.exports.inquireServerState=inquireServerState,module.exports.getTopologyType=getTopologyType,module.exports.emitServerDescriptionChanged=emitServerDescriptionChanged,module.exports.emitTopologyDescriptionChanged=emitTopologyDescriptionChanged,module.exports.cloneOptions=cloneOptions,module.exports.assign=assign,module.exports.createClientInfo=createClientInfo,module.exports.clone=clone;