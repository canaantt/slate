"use strict";function stateTransition(e,n){var t={disconnected:[CONNECTING,DESTROYED,DISCONNECTED],connecting:[CONNECTING,DESTROYED,CONNECTED,DISCONNECTED],connected:[CONNECTED,DISCONNECTED,DESTROYED],destroyed:[DESTROYED]},o=t[e.state];o&&-1!=o.indexOf(n)?e.state=n:e.logger.error(f("Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]",e.id,e.state,n,o))}function emitSDAMEvent(e,n,t){e.listeners(n).length>0&&e.emit(n,t)}function handleEvent(e,n){return function(n){e.state!=DESTROYED&&(moveServerFrom(e.connectedProxies,e.disconnectedProxies,this),e.emit("left","mongos",this))}}function handleInitialConnectEvent(e,n){return function(t){if(e.state==DESTROYED)return this.destroy();if("connect"==n)if(e.ismaster=this.lastIsMaster(),"isdbgrid"==e.ismaster.msg){for(var o=0;o<e.connectedProxies.length;o++)if(e.connectedProxies[o].name==this.name)return this.destroy(),e.emit("failed",this);for(var o=0;o<handlers.length;o++)this.removeAllListeners(handlers[o]);this.on("error",handleEvent(e,"error")),this.on("close",handleEvent(e,"close")),this.on("timeout",handleEvent(e,"timeout")),this.on("parseError",handleEvent(e,"parseError")),moveServerFrom(e.connectingProxies,e.connectedProxies,this),e.emit("joined","mongos",this)}else{if(e.s.logger.isWarn()){var r="expected mongos proxy, but found replicaset member mongod for server %s";e.ismaster.hosts||(r="expected mongos proxy, but found standalone mongod for server %s"),e.s.logger.warn(f(r,this.name))}removeProxyFrom(e.connectingProxies,this),e.emit("left","server",this),e.emit("failed",this)}else moveServerFrom(e.connectingProxies,e.disconnectedProxies,this),e.emit("left","mongos",this),e.emit("failed",this);if(0==e.connectingProxies.length){if(e.connectedProxies.length>0){for(var o=0;o<e.connectedProxies.length;o++)e.lowerBoundLatency>e.connectedProxies[o].lastIsMasterMS&&(e.lowerBoundLatency=e.connectedProxies[o].lastIsMasterMS);stateTransition(e,CONNECTED),e.emit("connect",e),e.emit("fullsetup",e),e.emit("all",e)}else if(0==e.disconnectedProxies.length)return e.s.logger.isWarn()&&e.s.logger.warn(f("no mongos proxies found in seed list, did you mean to connect to a replicaset")),e.emit("error",new MongoError("no mongos proxies found in seed list"));topologyMonitor(e,{firstConnect:!0})}}}function connectProxies(e,n){function t(n,t){setTimeout(function(){n.once("close",handleInitialConnectEvent(e,"close")),n.once("timeout",handleInitialConnectEvent(e,"timeout")),n.once("parseError",handleInitialConnectEvent(e,"parseError")),n.once("error",handleInitialConnectEvent(e,"error")),n.once("connect",handleInitialConnectEvent(e,"connect")),n.on("serverOpening",function(n){e.emit("serverOpening",n)}),n.on("serverDescriptionChanged",function(n){e.emit("serverDescriptionChanged",n)}),n.on("serverClosed",function(n){e.emit("serverClosed",n)}),n.connect(e.s.connectOptions)},t)}e.connectingProxies=e.connectingProxies.concat(n);for(var o=0;n.length>0;)t(n.shift(),o++)}function pickProxy(e){var n=e.connectedProxies.slice(0);if(n=n.filter(function(n){return n.lastIsMasterMS<=e.lowerBoundLatency+e.s.localThresholdMS&&n.isConnected()?!0:void 0}),0==n.length)return e.connectedProxies[0];var t=n[e.index%n.length];return e.index=(e.index+1)%n.length,t}function moveServerFrom(e,n,t){for(var o=0;o<e.length;o++)e[o].name==t.name&&e.splice(o,1);for(var o=0;o<n.length;o++)n[o].name==t.name&&n.splice(o,1);n.push(t)}function removeProxyFrom(e,n){for(var t=0;t<e.length;t++)e[t].name==n.name&&e.splice(t,1)}function reconnectProxies(e,n,t){function o(n,t){setTimeout(function(){if(e.state!=DESTROYED){var t=new Server(assign({},e.s.options,{host:n.name.split(":")[0],port:parseInt(n.name.split(":")[1],10)},{authProviders:e.authProviders,reconnect:!1,monitoring:!1,inTopology:!0},{clientInfo:clone(e.s.clientInfo)}));t.once("connect",i(e,"connect")),t.once("close",i(e,"close")),t.once("timeout",i(e,"timeout")),t.once("error",i(e,"error")),t.once("parseError",i(e,"parseError")),t.on("serverOpening",function(n){e.emit("serverOpening",n)}),t.on("serverDescriptionChanged",function(n){e.emit("serverDescriptionChanged",n)}),t.on("serverClosed",function(n){e.emit("serverClosed",n)}),t.connect(e.s.connectOptions)}},t)}var r=n.length,i=function(e,n){return function(o,i){var s=this;if(r-=1,e.state==DESTROYED)return this.destroy();if("connect"!=n||e.authenticating)"connect"==n&&e.authenticating&&this.destroy();else{if(e.state==DESTROYED)return s.destroy();for(var c=0;c<handlers.length;c++)s.removeAllListeners(handlers[c]);s.on("error",handleEvent(e,"error")),s.on("close",handleEvent(e,"close")),s.on("timeout",handleEvent(e,"timeout")),s.on("parseError",handleEvent(e,"parseError")),moveServerFrom(e.disconnectedProxies,e.connectedProxies,s),e.emit("joined","mongos",s)}0==r&&t()}};if(0==r)return t();for(var s=0;s<n.length;s++)o(n[s],s)}function topologyMonitor(e,n){n=n||{},e.haTimeoutId=setTimeout(function(){function t(n,t,o){var r=(new Date).getTime();emitSDAMEvent(e,"serverHeartbeatStarted",{connectionId:t.name}),t.command("admin.$cmd",{ismaster:!0},{monitoring:!0},function(n,i){if(e.state==DESTROYED)return t.destroy(),o(n,i);var s=(new Date).getTime()-r;e.lowerBoundLatency>t.lastIsMasterMS&&(e.lowerBoundLatency=t.lastIsMasterMS),n?(emitSDAMEvent(e,"serverHearbeatFailed",{durationMS:s,failure:n,connectionId:t.name}),moveServerFrom(e.connectedProxies,e.disconnectedProxies,t),e.emit("left","mongos",t),t.destroy()):(t.ismaster=i.result,t.lastIsMasterMS=s,emitSDAMEvent(e,"serverHeartbeatSucceeded",{durationMS:s,reply:i.result,connectionId:t.name})),o(n,i)})}if(e.state!=DESTROYED){e.isConnected()&&e.s.disconnectHandler&&e.s.disconnectHandler.execute();var o=e.connectedProxies.slice(0),r=o.length;if(0==o.length)return e.listeners("close").length>0&&e.emit("close",e),reconnectProxies(e,e.disconnectedProxies,function(t,o){e.state!=DESTROYED&&(e.state==CONNECTING&&n.firstConnect?(e.emit("connect",e),e.emit("fullsetup",e),e.emit("all",e)):e.isConnected()?e.emit("reconnect",e):!e.isConnected()&&e.listeners("close").length>0&&e.emit("close",e),topologyMonitor(e))});for(var i=0;i<o.length;i++)t(e,o[i],function(n,t){if(r-=1,0==r){if(e.state==DESTROYED)return;reconnectProxies(e,e.disconnectedProxies,function(n,t){e.state!=DESTROYED&&topologyMonitor(e)})}})}},e.s.haInterval)}var inherits=require("util").inherits,f=require("util").format,EventEmitter=require("events").EventEmitter,BSON=require("bson")["native"]().BSON,ReadPreference=require("./read_preference"),BasicCursor=require("../cursor"),Logger=require("../connection/logger"),debugOptions=require("../connection/utils").debugOptions,MongoError=require("../error"),Server=require("./server"),ReplSetState=require("./replset_state"),assign=require("./shared").assign,clone=require("./shared").clone,createClientInfo=require("./shared").createClientInfo,MongoCR=require("../auth/mongocr"),X509=require("../auth/x509"),Plain=require("../auth/plain"),GSSAPI=require("../auth/gssapi"),SSPI=require("../auth/sspi"),ScramSHA1=require("../auth/scram"),DISCONNECTED="disconnected",CONNECTING="connecting",CONNECTED="connected",DESTROYED="destroyed",id=1,handlers=["connect","close","error","timeout","parseError"],Mongos=function(e,n){n=n||{},this.id=id++,this.s={options:assign({},n),bson:n.bson||new BSON,Cursor:n.cursorFactory||BasicCursor,logger:Logger("Mongos",n),seedlist:e,haInterval:n.haInterval?n.haInterval:1e4,disconnectHandler:n.disconnectHandler,index:0,connectOptions:{},debug:"boolean"==typeof n.debug?n.debug:!1,localThresholdMS:n.localThresholdMS||15,clientInfo:createClientInfo(n)},this.s.options.clientInfo=createClientInfo(n),this.s.logger.isWarn()&&0!=this.s.options.socketTimeout&&this.s.options.socketTimeout<this.s.haInterval&&this.s.logger.warn(f("warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts",this.s.options.socketTimeout,this.s.haInterval)),this.authProviders=n.authProviders||{mongocr:new MongoCR(this.s.bson),x509:new X509(this.s.bson),plain:new Plain(this.s.bson),gssapi:new GSSAPI(this.s.bson),sspi:new SSPI(this.s.bson),"scram-sha-1":new ScramSHA1(this.s.bson)},this.state=DISCONNECTED,this.connectingProxies=[],this.connectedProxies=[],this.disconnectedProxies=[],this.authenticating=!1,this.index=0,this.haTimeoutId=null,this.ismaster=null,this.lowerBoundLatency=Number.MAX_VALUE,EventEmitter.call(this)};inherits(Mongos,EventEmitter),Object.defineProperty(Mongos.prototype,"type",{enumerable:!0,get:function(){return"mongos"}}),Mongos.prototype.connect=function(e){var n=this;this.s.connectOptions=e||{},stateTransition(this,CONNECTING);var t=this.s.seedlist.map(function(e){return new Server(assign({},n.s.options,e,{authProviders:n.authProviders,reconnect:!1,monitoring:!1,inTopology:!0},{clientInfo:clone(n.s.clientInfo)}))});emitSDAMEvent(this,"topologyOpening",{topologyId:this.id}),connectProxies(n,t)},Mongos.prototype.lastIsMaster=function(){return this.ismaster},Mongos.prototype.unref=function(e){stateTransition(this,DISCONNECTED);var n=self.connectedProxies.concat(self.connectingProxies);n.forEach(function(e){e.unref()}),clearTimeout(this.haTimeoutId)},Mongos.prototype.destroy=function(e){stateTransition(this,DESTROYED);var n=this.connectedProxies.concat(this.connectingProxies);this.haTimeoutId&&clearTimeout(this.haTimeoutId),n.forEach(function(e){e.destroy()}),emitSDAMEvent(this,"topologyClosed",{topologyId:this.id})},Mongos.prototype.isConnected=function(e){return this.connectedProxies.length>0},Mongos.prototype.isDestroyed=function(){return this.state==DESTROYED};var executeWriteOperation=function(e,n,t,o,r,i){"function"==typeof r&&(i=r,r={},r=r||{}),r=r||{};var s=pickProxy(e);return s?void s[n](t,o,r,i):i(new MongoError("no mongos proxy available"))};Mongos.prototype.insert=function(e,n,t,o){return"function"==typeof t&&(o=t,t={},t=t||{}),this.state==DESTROYED?o(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?this.isConnected()?void executeWriteOperation(this,"insert",e,n,t,o):o(new MongoError("no mongos proxy available")):this.s.disconnectHandler.add("insert",e,n,t,o)},Mongos.prototype.update=function(e,n,t,o){return"function"==typeof t&&(o=t,t={},t=t||{}),this.state==DESTROYED?o(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?this.isConnected()?void executeWriteOperation(this,"update",e,n,t,o):o(new MongoError("no mongos proxy available")):this.s.disconnectHandler.add("update",e,n,t,o)},Mongos.prototype.remove=function(e,n,t,o){return"function"==typeof t&&(o=t,t={},t=t||{}),this.state==DESTROYED?o(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?this.isConnected()?void executeWriteOperation(this,"remove",e,n,t,o):o(new MongoError("no mongos proxy available")):this.s.disconnectHandler.add("remove",e,n,t,o)},Mongos.prototype.command=function(e,n,t,o){if("function"==typeof t&&(o=t,t={},t=t||{}),this.state==DESTROYED)return o(new MongoError(f("topology was destroyed")));var r=this,i=(t.readPreference?t.readPreference:ReadPreference.primary,pickProxy(r));return null==i?o(new MongoError("no mongos proxy available")):null!=i&&i.isConnected()||null==this.s.disconnectHandler?void i.command(e,n,t,o):this.s.disconnectHandler.add("command",e,n,t,o)},Mongos.prototype.cursor=function(e,n,t){t=t||{};var o=t.cursorFactory||this.s.Cursor;return new o(this.s.bson,e,n,t,this,this.s.options)},Mongos.prototype.auth=function(e,n){function t(t){var o=[e,n].concat(i.slice(0)),a=o.concat([function(e,n){if(l-=1,e&&c.push({name:t.name,err:e}),0==l){if(r.authenticating=!1,c.length)return s(MongoError.create({message:"authentication fail",errors:c}),!1);s(null,r)}}]);t.lastIsMaster().arbiterOnly||t.auth.apply(t,a)}var o=Array.prototype.slice.call(arguments,0).slice(0),r=this,i=Array.prototype.slice.call(arguments,2),s=i.pop();if(null==this.authProviders[e]&&"default"!=e)return s(new MongoError(f("auth provider %s does not exist",e)));if(this.authenticating)return s(new MongoError("authentication or logout allready in process"));if(!r.isConnected()&&null!=r.s.disconnectHandler)return r.s.disconnectHandler.add("auth",n,o,{},s);this.authenticating=!0;var c=[],a=this.connectedProxies.slice(0);0==a.length&&(this.authenticating=!1,s(null,!0));for(var l=a.length;a.length>0;)t(a.shift())},Mongos.prototype.logout=function(e,n){var t=this;if(this.authenticating)throw new MongoError("authentication or logout allready in process");this.authenticating=!0;for(var o=Object.keys(this.authProviders),r=0;r<o.length;r++)this.authProviders[o[r]].logout(e);var i=this.connectedProxies.slice(0),s=i.length;if(0==s)return n();for(var c=[],r=0;r<i.length;r++)i[r].logout(e,function(o){if(s-=1,o&&c.push({name:server.name,err:o}),0==s){if(t.authenticating=!1,c.length)return n(MongoError.create({message:f("logout failed against db %s",e),errors:c}),!1);n()}})},Mongos.prototype.getServer=function(){var e=pickProxy(this);return this.s.debug&&this.emit("pickedServer",null,e),e},Mongos.prototype.connections=function(){for(var e=[],n=0;n<this.connectedProxies.length;n++)e=e.concat(this.connectedProxies[n].connections());return e},module.exports=Mongos;