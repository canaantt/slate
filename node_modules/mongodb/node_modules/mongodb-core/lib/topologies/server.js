"use strict";function configureWireProtocolHandler(e,o){return o.maxWireVersion>=4?new ThreeTwoWireProtocolSupport(new TwoSixWireProtocolSupport):o.maxWireVersion>=2?new TwoSixWireProtocolSupport:new PreTwoSixWireProtocolSupport}function disconnectHandler(e,o,r,t,n,s){return e.s.pool.isConnected()||null==e.s.disconnectHandler||n.monitoring?e.s.pool.isConnected()?void 0:(s(MongoError.create(f("no connection available to server %s",e.name))),!0):(e.s.disconnectHandler.add(o,r,t,n,s),!0)}function monitoringProcess(e){return function(){if(!e.s.pool.isDestroyed()){e.emit("monitoring",e);var o={numberToSkip:0,numberToReturn:-1,checkKeys:!1,slaveOk:!0},r=new Query(e.s.bson,"admin.$cmd",{ismaster:!0,client:e.clientInfo},o),t=(new Date).getTime();e.s.pool.write(r.toBin(),{},function(o,r){e.lastIsMasterMS=(new Date).getTime()-t,e.s.pool.isDestroyed()||(r&&(e.ismaster=r.result),e.monitoringProcessId=setTimeout(monitoringProcess(e),e.s.monitoringInterval))})}}}function basicWriteValidations(e,o){return e.s.pool?e.s.pool.isDestroyed()?MongoError.create("server instance pool was destroyed"):void 0:MongoError.create("server instance is not connected")}function basicReadValidations(e,o){if(basicWriteValidations(e,o),o.readPreference&&!(o.readPreference instanceof ReadPreference))throw new Error("readPreference must be an instance of ReadPreference")}var inherits=require("util").inherits,f=require("util").format,EventEmitter=require("events").EventEmitter,BSON=require("bson")["native"]().BSON,ReadPreference=require("./read_preference"),Logger=require("../connection/logger"),debugOptions=require("../connection/utils").debugOptions,Pool=require("../connection/pool"),Query=require("../connection/commands").Query,MongoError=require("../error"),PreTwoSixWireProtocolSupport=require("../wireprotocol/2_4_support"),TwoSixWireProtocolSupport=require("../wireprotocol/2_6_support"),ThreeTwoWireProtocolSupport=require("../wireprotocol/3_2_support"),BasicCursor=require("../cursor"),sdam=require("./shared"),assign=require("./shared").assign,createClientInfo=require("./shared").createClientInfo,debugFields=["reconnect","reconnectTries","reconnectInterval","emitError","cursorFactory","host","port","size","keepAlive","keepAliveInitialDelay","noDelay","connectionTimeout","checkServerIdentity","socketTimeout","singleBufferSerializtion","ssl","ca","cert","key","rejectUnauthorized","promoteLongs"],id=0,serverAccounting=!1,servers={},Server=function(e){e=e||{},EventEmitter.call(this),this.id=id++;e.reconnectTries||30;this.s={options:e,logger:Logger("Server",e),Cursor:e.cursorFactory||BasicCursor,bson:e.bson||new BSON,pool:null,disconnectHandler:e.disconnectHandler,monitoring:"boolean"==typeof e.monitoring?e.monitoring:!0,inTopology:"boolean"==typeof e.inTopology?e.inTopology:!1,monitoringInterval:"number"==typeof e.monitoringInterval?e.monitoringInterval:5e3,topologyId:-1},this.ismaster=null,this.lastIsMasterMS=-1,this.monitoringProcessId=null,this.initalConnect=!0,this.wireProtocolHandler=new PreTwoSixWireProtocolSupport,this._type="server",this.clientInfo=createClientInfo(e),this.lastUpdateTime=0,this.lastWriteDate=0,this.staleness=0};inherits(Server,EventEmitter),Object.defineProperty(Server.prototype,"type",{enumerable:!0,get:function(){return this._type}}),Server.enableServerAccounting=function(){serverAccounting=!0,servers={}},Server.disableServerAccounting=function(){serverAccounting=!1},Server.servers=function(){return servers},Object.defineProperty(Server.prototype,"name",{enumerable:!0,get:function(){return this.s.options.host+":"+this.s.options.port}});var eventHandler=function(e,o){return function(r){if(e.s.logger.isInfo()){var t=r instanceof MongoError?JSON.stringify(r):{};e.s.logger.info(f("server %s fired event %s out with message %s",e.name,o,t))}if("connect"==o){var n={numberToSkip:0,numberToReturn:-1,checkKeys:!1,slaveOk:!0},s=new Query(e.s.bson,"admin.$cmd",{ismaster:!0},n),i=(new Date).getTime();e.s.pool.write(s.toBin(),{},function(o,r){return e.lastIsMasterMS=(new Date).getTime()-i,o?(e.destroy(),void(e.listeners("error").length>0&&e.emit("error",o))):(e.initalConnect=!1,e.ismaster=r.result,"isdbgrid"==e.ismaster.msg&&(e._type="mongos"),e.wireProtocolHandler=configureWireProtocolHandler(e,e.ismaster),e.s.monitoring&&(e.monitoringProcessId=setTimeout(monitoringProcess(e),e.s.monitoringInterval)),sdam.emitServerDescriptionChanged(e,{address:e.name,arbiters:[],hosts:[],passives:[],type:e.s.inTopology?sdam.getTopologyType(e):"Standalone"}),sdam.emitTopologyDescriptionChanged(e,{topologyType:"Single",servers:[{address:e.name,arbiters:[],hosts:[],passives:[],type:"Standalone"}]}),e.s.logger.isInfo()&&e.s.logger.info(f("server %s connected with ismaster [%s]",e.name,JSON.stringify(e.ismaster))),void e.emit("connect",e))})}else{if(serverAccounting&&-1!=["close","timeout","error","parseError","reconnectFailed"].indexOf(o)&&(e.s.inTopology||e.emit("topologyOpening",{topologyId:e.id}),delete servers[e.id]),"reconnectFailed"==o)return e.emit("reconnectFailed",r),void(e.listeners("error").length>0&&e.emit("error",r));if("disconnected"==e.s.pool.state&&e.initalConnect&&-1!=["close","timeout","error","parseError"].indexOf(o))return e.initalConnect=!1,e.emit("error",new MongoError(f("failed to connect to server [%s] on first connect",e.name)));if("reconnect"==o)return e.emit(o,e);e.emit(o,r)}}};Server.prototype.connect=function(e){var o=this;if(e=e||{},serverAccounting&&(servers[this.id]=this),o.s.pool&&!o.s.pool.isDisconnected()&&!o.s.pool.isDestroyed())throw MongoError.create(f("server instance in invalid state %s",o.s.state));o.s.pool=new Pool(assign(o.s.options,e,{bson:this.s.bson})),o.s.pool.on("close",eventHandler(o,"close")),o.s.pool.on("error",eventHandler(o,"error")),o.s.pool.on("timeout",eventHandler(o,"timeout")),o.s.pool.on("parseError",eventHandler(o,"parseError")),o.s.pool.on("connect",eventHandler(o,"connect")),o.s.pool.on("reconnect",eventHandler(o,"reconnect")),o.s.pool.on("reconnectFailed",eventHandler(o,"reconnectFailed")),o.s.inTopology||this.emit("topologyOpening",{topologyId:o.id}),o.emit("serverOpening",{topologyId:-1!=o.s.topologyId?o.s.topologyId:o.id,address:o.name}),e.auth?o.s.pool.connect.apply(o.s.pool,e.auth):o.s.pool.connect()},Server.prototype.getDescription=function(){var e=this.ismaster||{},o={type:sdam.getTopologyType(this),address:this.name};return e.hosts&&(o.hosts=e.hosts),e.arbiters&&(o.arbiters=e.arbiters),e.passives&&(o.passives=e.passives),e.setName&&(o.setName=e.setName),o},Server.prototype.lastIsMaster=function(){return this.ismaster},Server.prototype.unref=function(){this.s.pool.unref()},Server.prototype.isConnected=function(){return this.s.pool?this.s.pool.isConnected():!1},Server.prototype.isDestroyed=function(){return this.s.pool?this.s.pool.isDestroyed():!1},Server.prototype.command=function(e,o,r,t){var n=this;"function"==typeof r&&(t=r,r={},r=r||{});var s=basicReadValidations(n,r);if(s)return t(s);if(n.s.logger.isDebug()&&n.s.logger.debug(f("executing command [%s] against %s",JSON.stringify({ns:e,cmd:o,options:debugOptions(debugFields,r)}),n.name)),!disconnectHandler(n,"command",e,o,r,t)){if(this.ismaster&&this.ismaster.maxWireVersion<5&&o.collation)return t(new MongoError(f("server %s does not support collation",this.name)));var i={numberToSkip:0,numberToReturn:-1,checkKeys:"boolean"==typeof r.checkKeys?r.checkKeys:!1,serializeFunctions:"boolean"==typeof r.serializeFunctions?r.serializeFunctions:!1,ignoreUndefined:"boolean"==typeof r.ignoreUndefined?r.ignoreUndefined:!1},a=new Query(n.s.bson,e,o,i);a.slaveOk=r.readPreference?r.readPreference.slaveOk():!1;var c={raw:"boolean"==typeof r.raw?r.raw:!1,promoteLongs:"boolean"==typeof r.promoteLongs?r.promoteLongs:!0,command:!0,monitoring:"boolean"==typeof r.monitoring?r.monitoring:!1};n.s.pool.write(a.toBin(),c,t)}},Server.prototype.insert=function(e,o,r,t){var n=this;"function"==typeof r&&(t=r,r={},r=r||{});var s=basicWriteValidations(n,r);if(s)return t(s);if(!disconnectHandler(n,"insert",e,o,r,t))return o=Array.isArray(o)?o:[o],n.wireProtocolHandler.insert(n.s.pool,n.ismaster,e,n.s.bson,o,r,t)},Server.prototype.update=function(e,o,r,t){var n=this;"function"==typeof r&&(t=r,r={},r=r||{});var s=basicWriteValidations(n,r);if(s)return t(s);if(!disconnectHandler(n,"update",e,o,r,t))return this.ismaster&&this.ismaster.maxWireVersion<5&&r.collation?t(new MongoError(f("server %s does not support collation",this.name))):(o=Array.isArray(o)?o:[o],n.wireProtocolHandler.update(n.s.pool,n.ismaster,e,n.s.bson,o,r,t))},Server.prototype.remove=function(e,o,r,t){var n=this;"function"==typeof r&&(t=r,r={},r=r||{});var s=basicWriteValidations(n,r);if(s)return t(s);if(!disconnectHandler(n,"remove",e,o,r,t))return this.ismaster&&this.ismaster.maxWireVersion<5&&r.collation?t(new MongoError(f("server %s does not support collation",this.name))):(o=Array.isArray(o)?o:[o],n.wireProtocolHandler.remove(n.s.pool,n.ismaster,e,n.s.bson,o,r,t))},Server.prototype.cursor=function(e,o,r){var t=this.s;r=r||{};var n=r.cursorFactory||t.Cursor;return new n(t.bson,e,o,r,this,t.options)},Server.prototype.logout=function(e,o){this.s.pool.logout(e,o)},Server.prototype.auth=function(e,o){var r=this;"default"==e&&r.ismaster&&r.ismaster.maxWireVersion>=3?e="scram-sha-1":"default"==e&&(e="mongocr");var t=Array.prototype.slice.call(arguments,0);t[0]=e;var n=t[t.length-1];if(!disconnectHandler(r,"auth",o,t,{},n))return this.lastIsMaster()&&this.lastIsMaster().arbiterOnly?n(null,!0):void r.s.pool.auth.apply(r.s.pool,t)},Server.prototype.equals=function(e){return"string"==typeof e?this.name==e:e.name?this.name==e.name:!1},Server.prototype.connections=function(){return this.s.pool.allConnections()},Server.prototype.getServer=function(){return this},Server.prototype.getConnection=function(){return this.s.pool.get()};var listeners=["close","error","timeout","parseError","connect"];Server.prototype.destroy=function(e){e=e||{};var o=this;serverAccounting&&delete servers[this.id],this.monitoringProcessId&&clearTimeout(this.monitoringProcessId),e.emitClose&&o.emit("close",o),e.emitDestroy&&o.emit("destroy",o),listeners.forEach(function(e){o.s.pool.removeAllListeners(e)}),o.listeners("serverClosed").length>0&&o.emit("serverClosed",{topologyId:-1!=o.s.topologyId?o.s.topologyId:o.id,address:o.name}),o.listeners("topologyClosed").length>0&&!o.s.inTopology&&o.emit("topologyClosed",{topologyId:o.id}),o.s.logger.isDebug()&&o.s.logger.debug(f("destroy called on server %s",o.name)),this.s.pool.destroy()},module.exports=Server;