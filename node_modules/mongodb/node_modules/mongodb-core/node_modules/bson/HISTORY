<h2 id="0-5-2-2016-07-11">0.5.2 2016-07-11</h2>

<ul>
<li>All values encoded big-endian style for ObjectId.</li>
</ul>

<h2 id="0-5-1-2016-07-11">0.5.1 2016-07-11</h2>

<ul>
<li>Fixed encoding/decoding issue in ObjectId timestamp generation.</li>
<li>Removed BinaryParser dependency from the serializer/deserializer.</li>
</ul>

<h2 id="0-5-0-2016-07-05">0.5.0 2016-07-05</h2>

<ul>
<li>Added Decimal128 type and extended test suite to include entire bson corpus.</li>
</ul>

<h2 id="0-4-23-2016-04-08">0.4.23 2016-04-08</h2>

<ul>
<li>Allow for proper detection of ObjectId or objects that look like ObjectId, improving compatibility across third party libraries.</li>
<li>Remove one package from dependency due to having been pulled from NPM.</li>
</ul>

<h2 id="0-4-22-2016-03-04">0.4.22 2016-03-04</h2>

<ul>
<li>Fix &ldquo;TypeError: data.copy is not a function&rdquo; in Electron (Issue #170, https://github.com/kangas).</li>
<li>Fixed issue with undefined type on deserializing.</li>
</ul>

<h2 id="0-4-21-2016-01-12">0.4.21 2016-01-12</h2>

<ul>
<li>Minor optimizations to avoid non needed object creation.</li>
</ul>

<h2 id="0-4-20-2015-10-15">0.4.20 2015-10-15</h2>

<ul>
<li>Added bower file to repository.</li>
<li>Fixed browser pid sometimes set greater than 0xFFFF on browsers (Issue #155, https://github.com/rahatarmanahmed)</li>
</ul>

<h2 id="0-4-19-2015-10-15">0.4.19 2015-10-15</h2>

<ul>
<li>Remove all support for bson-ext.</li>
</ul>

<h2 id="0-4-18-2015-10-15">0.4.18 2015-10-15</h2>

<ul>
<li>ObjectID equality check should return boolean instead of throwing exception for invalid oid string #139</li>
<li>add option for deserializing binary into Buffer object #116</li>
</ul>

<h2 id="0-4-17-2015-10-15">0.4.17 2015-10-15</h2>

<ul>
<li>Validate regexp string for null bytes and throw if there is one.</li>
</ul>

<h2 id="0-4-16-2015-10-07">0.4.16 2015-10-07</h2>

<ul>
<li>Fixed issue with return statement in Map.js.</li>
</ul>

<h2 id="0-4-15-2015-10-06">0.4.15 2015-10-06</h2>

<ul>
<li>Exposed Map correctly via index.js file.</li>
</ul>

<h2 id="0-4-14-2015-10-06">0.4.14 2015-10-06</h2>

<ul>
<li>Exposed Map correctly via bson.js file.</li>
</ul>

<h2 id="0-4-13-2015-10-06">0.4.13 2015-10-06</h2>

<ul>
<li>Added ES6 Map type serialization as well as a polyfill for ES5.</li>
</ul>

<h2 id="0-4-12-2015-09-18">0.4.12 2015-09-18</h2>

<ul>
<li>Made ignore undefined an optional parameter.</li>
</ul>

<h2 id="0-4-11-2015-08-06">0.4.11 2015-08-06</h2>

<ul>
<li>Minor fix for invalid key checking.</li>
</ul>

<h2 id="0-4-10-2015-08-06">0.4.10 2015-08-06</h2>

<ul>
<li>NODE-38 Added new BSONRegExp type to allow direct serialization to MongoDB type.</li>
<li>Some performance improvements by in lining code.</li>
</ul>

<h2 id="0-4-9-2015-08-06">0.4.9 2015-08-06</h2>

<ul>
<li>Undefined fields are omitted from serialization in objects.</li>
</ul>

<h2 id="0-4-8-2015-07-14">0.4.8 2015-07-14</h2>

<ul>
<li>Fixed size validation to ensure we can deserialize from dumped files.</li>
</ul>

<h2 id="0-4-7-2015-06-26">0.4.7 2015-06-26</h2>

<ul>
<li>Added ability to instruct deserializer to return raw BSON buffers for named array fields.</li>
<li>Minor deserialization optimization by moving inlined function out.</li>
</ul>

<h2 id="0-4-6-2015-06-17">0.4.6 2015-06-17</h2>

<ul>
<li>Fixed serializeWithBufferAndIndex bug.</li>
</ul>

<h2 id="0-4-5-2015-06-17">0.4.5 2015-06-17</h2>

<ul>
<li>Removed any references to the shared buffer to avoid non GC collectible bson instances.</li>
</ul>

<h2 id="0-4-4-2015-06-17">0.4.4 2015-06-17</h2>

<ul>
<li>Fixed rethrowing of error when not RangeError.</li>
</ul>

<h2 id="0-4-3-2015-06-17">0.4.3 2015-06-17</h2>

<ul>
<li>Start buffer at 64K and double as needed, meaning we keep a low memory profile until needed.</li>
</ul>

<h2 id="0-4-2-2015-06-16">0.4.2 2015-06-16</h2>

<ul>
<li>More fixes for corrupt Bson</li>
</ul>

<h2 id="0-4-1-2015-06-16">0.4.1 2015-06-16</h2>

<ul>
<li>More fixes for corrupt Bson</li>
</ul>

<h2 id="0-4-0-2015-06-16">0.4.0 2015-06-16</h2>

<ul>
<li>New JS serializer serializing into a single buffer then copying out the new buffer. Performance is similar to current C++ parser.</li>
<li>Removed bson-ext extension dependency for now.</li>
</ul>

<h2 id="0-3-2-2015-03-27">0.3.2 2015-03-27</h2>

<ul>
<li>Removed node-gyp from install script in package.json.</li>
</ul>

<h2 id="0-3-1-2015-03-27">0.3.1 2015-03-27</h2>

<ul>
<li>Return pure js version on native() call if failed to initialize.</li>
</ul>

<h2 id="0-3-0-2015-03-26">0.3.0 2015-03-26</h2>

<ul>
<li>Pulled out all C++ code into bson-ext and made it an optional dependency.</li>
</ul>

<h2 id="0-2-21-2015-03-21">0.2.21 2015-03-21</h2>

<ul>
<li>Updated Nan to 1.7.0 to support io.js and node 0.12.0</li>
</ul>

<h2 id="0-2-19-2015-02-16">0.2.19 2015-02-16</h2>

<ul>
<li>Updated Nan to 1.6.2 to support io.js and node 0.12.0</li>
</ul>

<h2 id="0-2-18-2015-01-20">0.2.18 2015-01-20</h2>

<ul>
<li>Updated Nan to 1.5.1 to support io.js</li>
</ul>

<h2 id="0-2-16-2014-12-17">0.2.16 2014-12-17</h2>

<ul>
<li>Made pid cycle on 0xffff to avoid weird overflows on creation of ObjectID&rsquo;s</li>
</ul>

<h2 id="0-2-12-2014-08-24">0.2.12 2014-08-24</h2>

<ul>
<li>Fixes for fortify review of c++ extension</li>
<li>toBSON correctly allows returns of non objects</li>
</ul>

<h2 id="0-2-3-2013-10-01">0.2.3 2013-10-01</h2>

<ul>
<li>Drying of ObjectId code for generation of id (Issue #54, https://github.com/moredip)</li>
<li>Fixed issue where corrupt CString&rsquo;s could cause endless loop</li>
<li>Support for Node 0.11.X &gt; (Issue #49, https://github.com/kkoopa)</li>
</ul>

<h2 id="0-1-4-2012-09-25">0.1.4 2012-09-25</h2>

<ul>
<li>Added precompiled c++ native extensions for win32 ia32 and x64</li>
</ul>
