"use strict";var inherits=require("util").inherits,f=require("util").format,toError=require("./utils").toError,getSingleProperty=require("./utils").getSingleProperty,formattedOrderClause=require("./utils").formattedOrderClause,handleCallback=require("./utils").handleCallback,Logger=require("mongodb-core").Logger,EventEmitter=require("events").EventEmitter,ReadPreference=require("./read_preference"),MongoError=require("mongodb-core").MongoError,Readable=require("stream").Readable||require("readable-stream").Readable,Define=require("./metadata"),CoreCursor=require("./cursor"),Query=require("mongodb-core").Query,AggregationCursor=function(r,e,o,t,s,i){CoreCursor.apply(this,Array.prototype.slice.call(arguments,0));var a=AggregationCursor.INIT,n={},u=null,g=t.promiseLibrary;g||(g="function"==typeof global.Promise?global.Promise:require("es6-promise").Promise),Readable.call(this,{objectMode:!0}),this.s={maxTimeMS:u,state:a,streamOptions:n,bson:r,ns:e,cmd:o,options:t,topology:s,topologyOptions:i,promiseLibrary:g}};inherits(AggregationCursor,Readable);var methodsToInherit=["_next","next","each","forEach","toArray","rewind","bufferedCount","readBufferedDocuments","close","isClosed","kill","_find","_getmore","_killcursor","isDead","explain","isNotified"];for(var name in CoreCursor.prototype)AggregationCursor.prototype[name]=CoreCursor.prototype[name];var define=AggregationCursor.define=new Define("AggregationCursor",AggregationCursor,!0);AggregationCursor.prototype.batchSize=function(r){if(this.s.state==AggregationCursor.CLOSED||this.isDead())throw MongoError.create({message:"Cursor is closed",driver:!0});if("number"!=typeof r)throw MongoError.create({message:"batchSize requires an integer",drvier:!0});return this.s.cmd.cursor&&(this.s.cmd.cursor.batchSize=r),this.setCursorBatchSize(r),this},define.classMethod("batchSize",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.geoNear=function(r){return this.s.cmd.pipeline.push({$geoNear:r}),this},define.classMethod("geoNear",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.group=function(r){return this.s.cmd.pipeline.push({$group:r}),this},define.classMethod("group",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.limit=function(r){return this.s.cmd.pipeline.push({$limit:r}),this},define.classMethod("limit",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.match=function(r){return this.s.cmd.pipeline.push({$match:r}),this},define.classMethod("match",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.maxTimeMS=function(r){return this.s.topology.lastIsMaster().minWireVersion>2&&(this.s.cmd.maxTimeMS=r),this},define.classMethod("maxTimeMS",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.out=function(r){return this.s.cmd.pipeline.push({$out:r}),this},define.classMethod("out",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.project=function(r){return this.s.cmd.pipeline.push({$project:r}),this},define.classMethod("project",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.lookup=function(r){return this.s.cmd.pipeline.push({$lookup:r}),this},define.classMethod("lookup",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.redact=function(r){return this.s.cmd.pipeline.push({$redact:r}),this},define.classMethod("redact",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.skip=function(r){return this.s.cmd.pipeline.push({$skip:r}),this},define.classMethod("skip",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.sort=function(r){return this.s.cmd.pipeline.push({$sort:r}),this},define.classMethod("sort",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.unwind=function(r){return this.s.cmd.pipeline.push({$unwind:r}),this},define.classMethod("unwind",{callback:!1,promise:!1,returns:[AggregationCursor]}),AggregationCursor.prototype.get=AggregationCursor.prototype.toArray,define.classMethod("toArray",{callback:!0,promise:!0}),define.classMethod("each",{callback:!0,promise:!1}),define.classMethod("forEach",{callback:!0,promise:!1}),define.classMethod("next",{callback:!0,promise:!0}),define.classMethod("close",{callback:!0,promise:!0}),define.classMethod("isClosed",{callback:!1,promise:!1,returns:[Boolean]}),define.classMethod("rewind",{callback:!1,promise:!1}),define.classMethod("bufferedCount",{callback:!1,promise:!1,returns:[Number]}),define.classMethod("readBufferedDocuments",{callback:!1,promise:!1,returns:[Array]}),AggregationCursor.INIT=0,AggregationCursor.OPEN=1,AggregationCursor.CLOSED=2,module.exports=AggregationCursor;