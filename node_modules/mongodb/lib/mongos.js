"use strict";var EventEmitter=require("events").EventEmitter,inherits=require("util").inherits,f=require("util").format,ServerCapabilities=require("./topology_base").ServerCapabilities,MongoCR=require("mongodb-core").MongoCR,MongoError=require("mongodb-core").MongoError,CMongos=require("mongodb-core").Mongos,Cursor=require("./cursor"),AggregationCursor=require("./aggregation_cursor"),CommandCursor=require("./command_cursor"),Define=require("./metadata"),Server=require("./server"),Store=require("./topology_base").Store,shallowClone=require("./utils").shallowClone,MAX_JS_INT=require("./utils").MAX_JS_INT,translateOptions=require("./utils").translateOptions,filterOptions=require("./utils").filterOptions,mergeOptions=require("./utils").mergeOptions,os=require("os"),driverVersion=require(__dirname+"/../package.json").version,nodejsversion=f("Node.js %s, %s",process.version,os.endianness()),type=os.type(),name=process.platform,architecture=process.arch,release=os.release(),legalOptionNames=["ha","haInterval","acceptableLatencyMS","poolSize","ssl","checkServerIdentity","sslValidate","sslCA","sslCert","sslKey","sslPass","socketOptions","bufferMaxEntries","store","auto_reconnect","autoReconnect","emitError","keepAlive","noDelay","connectTimeoutMS","socketTimeoutMS","loggerLevel","logger","reconnectTries","appname","domainsEnabled"],Mongos=function(e,o){if(!(this instanceof Mongos))return new Mongos(e,o);o=o||{};var s=this;o=filterOptions(o,legalOptionNames);for(var t=0;t<e.length;t++)if(!(e[t]instanceof Server))throw MongoError.create({message:"all seed list instances must be of the Server type",driver:!0});var n={force:!1,bufferMaxEntries:"number"==typeof o.bufferMaxEntries?o.bufferMaxEntries:MAX_JS_INT},r=o.store||new Store(s,n);EventEmitter.call(this);var i=e.map(function(e){return{host:e.host,port:e.port}}),a="boolean"==typeof o.auto_reconnect?o.auto_reconnect:!0;a="boolean"==typeof o.autoReconnect?o.autoReconnect:a;var c=mergeOptions({},{disconnectHandler:r,cursorFactory:Cursor,reconnect:a,emitError:"boolean"==typeof o.emitError?o.emitError:!0,size:"number"==typeof o.poolSize?o.poolSize:5});c=translateOptions(c,o);var l=o.socketOptions&&Object.keys(o.socketOptions).length>0?o.socketOptions:o;c=translateOptions(c,l),"number"==typeof c.keepAlive&&(c.keepAliveInitialDelay=c.keepAlive,c.keepAlive=c.keepAlive>0),this.clientInfo={driver:{name:"nodejs",version:driverVersion},os:{type:type,name:name,architecture:architecture,version:release},platform:nodejsversion},c.clientInfo=this.clientInfo,o.appname&&(c.clientInfo.application={name:o.appname});var p=new CMongos(i,c),u=null;this.s={mongos:p,sCapabilities:u,debug:c.debug,storeOptions:n,clonedOptions:c,store:r,options:o}},define=Mongos.define=new Define("Mongos",Mongos,!1);inherits(Mongos,EventEmitter),Object.defineProperty(Mongos.prototype,"isMasterDoc",{enumerable:!0,get:function(){return this.s.mongos.lastIsMaster()}}),Object.defineProperty(Mongos.prototype,"bson",{enumerable:!0,get:function(){return this.s.mongos.s.bson}}),Object.defineProperty(Mongos.prototype,"haInterval",{enumerable:!0,get:function(){return this.s.mongos.s.haInterval}}),Mongos.prototype.connect=function(e,o,s){var t=this;"function"==typeof o&&(s=o,o={}),null==o&&(o={}),"function"!=typeof s&&(s=null),t.s.options=o,t.s.storeOptions.bufferMaxEntries=e.bufferMaxEntries;var n=function(e){return function(e){var o=["timeout","error","close"];o.forEach(function(e){t.removeListener(e,n)}),t.s.mongos.removeListener("connect",n);try{s(e)}catch(e){process.nextTick(function(){throw e})}}},r=function(e){return function(o){"error"!=e&&t.emit(e,o)}},i=function(e){t.emit("reconnect"),t.s.store.execute()},a=function(e){return function(o,s){t.emit(e,o,s)}},c=function(){["timeout","error","close","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed","topologyOpening","topologyClosed","topologyDescriptionChanged"].forEach(function(e){t.s.mongos.removeAllListeners(e)}),t.s.mongos.once("timeout",r("timeout")),t.s.mongos.once("error",r("error")),t.s.mongos.once("close",r("close")),t.s.mongos.on("serverDescriptionChanged",a("serverDescriptionChanged")),t.s.mongos.on("serverHeartbeatStarted",a("serverHeartbeatStarted")),t.s.mongos.on("serverHeartbeatSucceeded",a("serverHeartbeatSucceeded")),t.s.mongos.on("serverHearbeatFailed",a("serverHearbeatFailed")),t.s.mongos.on("serverOpening",a("serverOpening")),t.s.mongos.on("serverClosed",a("serverClosed")),t.s.mongos.on("topologyOpening",a("topologyOpening")),t.s.mongos.on("topologyClosed",a("topologyClosed")),t.s.mongos.on("topologyDescriptionChanged",a("topologyDescriptionChanged")),t.s.mongos.on("fullsetup",a("fullsetup")),t.emit("open",null,t);try{s(null,t)}catch(e){process.nextTick(function(){throw e})}};t.s.mongos.once("timeout",n("timeout")),t.s.mongos.once("error",n("error")),t.s.mongos.once("close",n("close")),t.s.mongos.once("connect",c),t.s.mongos.on("joined",a("joined")),t.s.mongos.on("left",a("left")),t.s.mongos.on("reconnect",i),t.s.mongos.connect(o)},Mongos.prototype.capabilities=function(){return this.s.sCapabilities?this.s.sCapabilities:null==this.s.mongos.lastIsMaster()?null:(this.s.sCapabilities=new ServerCapabilities(this.s.mongos.lastIsMaster()),this.s.sCapabilities)},define.classMethod("capabilities",{callback:!1,promise:!1,returns:[ServerCapabilities]}),Mongos.prototype.command=function(e,o,s,t){this.s.mongos.command(e,o,s,t)},define.classMethod("command",{callback:!0,promise:!1}),Mongos.prototype.insert=function(e,o,s,t){this.s.mongos.insert(e,o,s,function(e,o){t(e,o)})},define.classMethod("insert",{callback:!0,promise:!1}),Mongos.prototype.update=function(e,o,s,t){this.s.mongos.update(e,o,s,t)},define.classMethod("update",{callback:!0,promise:!1}),Mongos.prototype.remove=function(e,o,s,t){this.s.mongos.remove(e,o,s,t)},define.classMethod("remove",{callback:!0,promise:!1}),Mongos.prototype.isDestroyed=function(){return this.s.mongos.isDestroyed()},Mongos.prototype.isConnected=function(){return this.s.mongos.isConnected()},define.classMethod("isConnected",{callback:!1,promise:!1,returns:[Boolean]}),Mongos.prototype.cursor=function(e,o,s){return s.disconnectHandler=this.s.store,this.s.mongos.cursor(e,o,s)},define.classMethod("cursor",{callback:!1,promise:!1,returns:[Cursor,AggregationCursor,CommandCursor]}),Mongos.prototype.lastIsMaster=function(){return this.s.mongos.lastIsMaster()},Mongos.prototype.close=function(e){this.s.mongos.destroy(),1==e&&(this.s.storeOptions.force=e,this.s.store.flush())},define.classMethod("close",{callback:!1,promise:!1}),Mongos.prototype.auth=function(){var e=Array.prototype.slice.call(arguments,0);this.s.mongos.auth.apply(this.s.mongos,e)},define.classMethod("auth",{callback:!0,promise:!1}),Mongos.prototype.logout=function(){var e=Array.prototype.slice.call(arguments,0);this.s.mongos.logout.apply(this.s.mongos,e)},define.classMethod("logout",{callback:!0,promise:!1}),Mongos.prototype.connections=function(){return this.s.mongos.connections()},define.classMethod("connections",{callback:!1,promise:!1,returns:[Array]}),module.exports=Mongos;