function GridFSBucketReadStream(e,t,r,n,i){this.s={bytesRead:0,chunks:e,cursor:null,expected:0,files:t,filter:n,init:!1,expectedEnd:0,file:null,options:i,readPreference:r},stream.Readable.call(this)}function throwIfInitialized(e){if(e.s.init)throw new Error("You cannot change options after the stream has enteredflowing mode!")}function doRead(e){e.destroyed||e.s.cursor.next(function(t,r){if(!e.destroyed){if(t)return __handleError(e,t);if(!r)return e.push(null),e.s.cursor.close(function(t){return t?__handleError(e,t):void e.emit("close")});var n=e.s.file.length-e.s.bytesRead,i=e.s.expected++,s=Math.min(e.s.file.chunkSize,n);if(r.n>i){var o="ChunkIsMissing: Got unexpected n: "+r.n+", expected: "+i;return __handleError(e,new Error(o))}if(r.n<i){var o="ExtraChunk: Got unexpected n: "+r.n+", expected: "+i;return __handleError(e,new Error(o))}if(r.data.length()!==s){if(0>=n){var o="ExtraChunk: Got unexpected n: "+r.n;return __handleError(e,new Error(o))}var o="ChunkIsWrongSize: Got unexpected length: "+r.data.length()+", expected: "+s;return __handleError(e,new Error(o))}if(e.s.bytesRead+=r.data.length(),0===r.data.buffer.length)return e.push(null);var a=null,d=null,l=r.data.buffer;null!=e.s.bytesToSkip&&(a=e.s.bytesToSkip,e.s.bytesToSkip=0),i===e.s.expectedEnd&&null!=e.s.bytesToTrim&&(d=e.s.bytesToTrim),(null!=a||null!=d)&&(l=l.slice(a||0,d||l.length)),e.push(l)}})}function init(e){var t={};e.s.readPreference&&(t.readPreference=e.s.readPreference),e.s.options&&e.s.options.sort&&(t.sort=e.s.options.sort),e.s.options&&e.s.options.skip&&(t.skip=e.s.options.skip),e.s.files.findOne(e.s.filter,t,function(t,r){if(t)return __handleError(e,t);if(!r){var n=e.s.filter._id?e.s.filter._id.toString():e.s.filter.filename,i="FileNotFound: file "+n+" was not found",s=new Error(i);return s.code="ENOENT",__handleError(e,s)}return r.length<=0?void e.push(null):e.destroyed?void e.emit("close"):(e.s.cursor=e.s.chunks.find({files_id:r._id}).sort({n:1}),e.s.readPreference&&e.s.cursor.setReadPreference(e.s.readPreference),e.s.expectedEnd=Math.ceil(r.length/r.chunkSize),e.s.file=r,e.s.bytesToSkip=handleStartOption(e,r,e.s.cursor,e.s.options),e.s.bytesToTrim=handleEndOption(e,r,e.s.cursor,e.s.options),void e.emit("file",r))})}function waitForFile(e,t){return e.s.file?t():(e.s.init||(init(e),e.s.init=!0),void e.once("file",function(){t()}))}function handleStartOption(e,t,r,n){if(n&&null!=n.start){if(n.start>t.length)throw new Error("Stream start ("+n.start+") must not be more than the length of the file ("+t.length+")");if(n.start<0)throw new Error("Stream start ("+n.start+") must not be negative");if(null!=n.end&&n.end<n.start)throw new Error("Stream start ("+n.start+") must not be greater than stream end ("+n.end+")");return r.skip(Math.floor(n.start/t.chunkSize)),e.s.bytesRead=Math.floor(n.start/t.chunkSize)*t.chunkSize,e.s.expected=Math.floor(n.start/t.chunkSize),n.start-e.s.bytesRead}}function handleEndOption(e,t,r,n){if(n&&null!=n.end){if(n.end>t.length)throw new Error("Stream end ("+n.end+") must not be more than the length of the file ("+t.length+")");if(n.start<0)throw new Error("Stream end ("+n.end+") must not be negative");var i=null!=n.start?Math.floor(n.start/t.chunkSize):0;return r.limit(Math.ceil(n.end/t.chunkSize)-i),e.s.expectedEnd=Math.ceil(n.end/t.chunkSize),Math.ceil(n.end/t.chunkSize)*t.chunkSize-n.end}}function __handleError(e,t){e.emit("error",t)}var shallowClone=require("../utils").shallowClone,stream=require("stream"),util=require("util");module.exports=GridFSBucketReadStream,util.inherits(GridFSBucketReadStream,stream.Readable),GridFSBucketReadStream.prototype._read=function(){var e=this;this.destroyed||waitForFile(e,function(){doRead(e)})},GridFSBucketReadStream.prototype.start=function(e){return throwIfInitialized(this),this.s.options.start=e,this},GridFSBucketReadStream.prototype.end=function(e){return throwIfInitialized(this),this.s.options.end=e,this},GridFSBucketReadStream.prototype.abort=function(e){var t=this;this.push(null),this.destroyed=!0,this.s.cursor?this.s.cursor.close(function(r){t.emit("close"),e&&e(r)}):(this.s.init||t.emit("close"),e&&e())};