"use strict";var EventEmitter=require("events").EventEmitter,inherits=require("util").inherits,CServer=require("mongodb-core").Server,Cursor=require("./cursor"),AggregationCursor=require("./aggregation_cursor"),CommandCursor=require("./command_cursor"),f=require("util").format,ServerCapabilities=require("./topology_base").ServerCapabilities,Store=require("./topology_base").Store,Define=require("./metadata"),MongoError=require("mongodb-core").MongoError,shallowClone=require("./utils").shallowClone,MAX_JS_INT=require("./utils").MAX_JS_INT,Server=function(e,r,t){if(t=t||{},!(this instanceof Server))return new Server(e,r,t);EventEmitter.call(this);var o=this,s={force:!1,bufferMaxEntries:-1};-1==s.bufferMaxEntries&&(s.bufferMaxEntries=MAX_JS_INT);var n=t.store||new Store(o,s);if(-1!=e.indexOf("/"))null!=r&&"object"==typeof r&&(t=r,r=null);else if(null==r)throw MongoError.create({message:"port must be specified",driver:!0});var i=shallowClone(t);i.host=e,i.port=r;var c="boolean"==typeof t.auto_reconnect?t.auto_reconnect:!0;c="boolean"==typeof t.autoReconnect?t.autoReconnect:c;var a="boolean"==typeof t.emitError?t.emitError:!0,l="number"==typeof t.poolSize?t.poolSize:5;t.socketOptions&&(t.socketOptions.connectTimeoutMS&&(this.connectTimeoutMS=t.socketOptions.connectTimeoutMS,i.connectionTimeout=t.socketOptions.connectTimeoutMS),t.socketOptions.socketTimeoutMS&&(i.socketTimeout=t.socketOptions.socketTimeoutMS),"number"==typeof t.socketOptions.keepAlive&&(i.keepAliveInitialDelay=t.socketOptions.keepAlive,i.keepAlive=!0),"boolean"==typeof t.socketOptions.noDelay&&(i.noDelay=t.socketOptions.noDelay)),i.cursorFactory=Cursor,i.reconnect=c,i.emitError=a,i.size=l,i.sslCA&&(i.ca=i.sslCA),"boolean"==typeof i.sslValidate&&(i.rejectUnauthorized=i.sslValidate),i.sslKey&&(i.key=i.sslKey),i.sslCert&&(i.cert=i.sslCert),i.sslPass&&(i.passphrase=i.sslPass),i.disconnectHandler=n;var u=new CServer(i);this.s={server:u,sCapabilities:null,clonedOptions:i,reconnect:c,emitError:a,poolSize:l,storeOptions:s,store:n,host:e,port:r,options:t},Object.defineProperty(this,"bson",{enumerable:!0,get:function(){return o.s.server.bson}}),Object.defineProperty(this,"isMasterDoc",{enumerable:!0,get:function(){return o.s.server.lastIsMaster()}}),Object.defineProperty(this,"poolSize",{enumerable:!0,get:function(){return o.s.server.connections().length}}),Object.defineProperty(this,"autoReconnect",{enumerable:!0,get:function(){return o.s.reconnect}}),Object.defineProperty(this,"host",{enumerable:!0,get:function(){return o.s.host}}),Object.defineProperty(this,"port",{enumerable:!0,get:function(){return o.s.port}})};inherits(Server,EventEmitter);var define=Server.define=new Define("Server",Server,!1);Server.prototype.parserType=function(){return this.s.server.parserType()},define.classMethod("parserType",{callback:!1,promise:!1,returns:[String]}),Server.prototype.connect=function(e,r,t){var o=this;"function"==typeof r&&(t=r,r={}),null==r&&(r={}),"function"!=typeof t&&(t=null),o.s.options=r,o.s.storeOptions.bufferMaxEntries=e.bufferMaxEntries;var s=function(e){return function(e){var r=["timeout","error","close"];r.forEach(function(e){o.s.server.removeListener(e,l[e])}),o.s.server.removeListener("connect",s);try{t(e)}catch(e){process.nextTick(function(){throw e})}}},n=function(e){return function(r){"error"!=e&&o.emit(e,r)}},i=function(e){o.emit("reconnect",o),o.s.store.execute()},c=function(){o.s.store.flush()},a=function(){["timeout","error","close","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed","topologyOpening","topologyClosed","topologyDescriptionChanged"].forEach(function(e){o.s.server.removeAllListeners(e)}),o.s.server.once("timeout",n("timeout")),o.s.server.once("error",n("error")),o.s.server.on("close",n("close")),o.s.server.once("destroy",c);var e=function(e){return function(r,t){o.emit(e,r,t)}};o.s.server.on("serverDescriptionChanged",e("serverDescriptionChanged")),o.s.server.on("serverHeartbeatStarted",e("serverHeartbeatStarted")),o.s.server.on("serverHeartbeatSucceeded",e("serverHeartbeatSucceeded")),o.s.server.on("serverHearbeatFailed",e("serverHearbeatFailed")),o.s.server.on("serverOpening",e("serverOpening")),o.s.server.on("serverClosed",e("serverClosed")),o.s.server.on("topologyOpening",e("topologyOpening")),o.s.server.on("topologyClosed",e("topologyClosed")),o.s.server.on("topologyDescriptionChanged",e("topologyDescriptionChanged")),o.emit("open",null,o);try{t(null,o)}catch(r){console.log(r.stack),process.nextTick(function(){throw r})}},l={timeout:s("timeout"),error:s("error"),close:s("close")};o.s.server.once("timeout",l.timeout),o.s.server.once("error",l.error),o.s.server.once("close",l.close),o.s.server.once("connect",a),o.s.server.on("reconnect",i),o.s.server.connect(r)},Server.prototype.capabilities=function(){return this.s.sCapabilities?this.s.sCapabilities:null==this.s.server.lastIsMaster()?null:(this.s.sCapabilities=new ServerCapabilities(this.s.server.lastIsMaster()),this.s.sCapabilities)},define.classMethod("capabilities",{callback:!1,promise:!1,returns:[ServerCapabilities]}),Server.prototype.command=function(e,r,t,o){this.s.server.command(e,r,t,o)},define.classMethod("command",{callback:!0,promise:!1}),Server.prototype.insert=function(e,r,t,o){this.s.server.insert(e,r,t,o)},define.classMethod("insert",{callback:!0,promise:!1}),Server.prototype.update=function(e,r,t,o){this.s.server.update(e,r,t,o)},define.classMethod("update",{callback:!0,promise:!1}),Server.prototype.remove=function(e,r,t,o){this.s.server.remove(e,r,t,o)},define.classMethod("remove",{callback:!0,promise:!1}),Server.prototype.isConnected=function(){return this.s.server.isConnected()},Server.prototype.isDestroyed=function(){return this.s.server.isDestroyed()},define.classMethod("isConnected",{callback:!1,promise:!1,returns:[Boolean]}),Server.prototype.cursor=function(e,r,t){return t.disconnectHandler=this.s.store,this.s.server.cursor(e,r,t)},define.classMethod("cursor",{callback:!1,promise:!1,returns:[Cursor,AggregationCursor,CommandCursor]}),Server.prototype.setBSONParserType=function(e){return this.s.server.setBSONParserType(e)},Server.prototype.lastIsMaster=function(){return this.s.server.lastIsMaster()},Server.prototype.close=function(e){this.s.server.destroy(),1==e&&(this.s.storeOptions.force=e,this.s.store.flush())},define.classMethod("close",{callback:!1,promise:!1}),Server.prototype.auth=function(){var e=Array.prototype.slice.call(arguments,0);this.s.server.auth.apply(this.s.server,e)},define.classMethod("auth",{callback:!0,promise:!1}),Server.prototype.connections=function(){return this.s.server.connections()},define.classMethod("connections",{callback:!1,promise:!1,returns:[Array]}),module.exports=Server;