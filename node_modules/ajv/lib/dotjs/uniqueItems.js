"use strict";module.exports=function(e,a){var r,t,s=" ",i=e.level,o=e.dataLevel,l=e.schema[a],h=e.schemaPath+"."+a,u=e.errSchemaPath+"/"+a,d=!e.opts.allErrors,m="data"+(o||""),v="valid"+i,c=e.opts.v5&&l.$data;if(c?(s+=" var schema"+i+" = "+e.util.getData(l.$data,o,e.dataPathArr)+"; ",t="schema"+i):t=l,(l||c)&&e.opts.uniqueItems!==!1){c&&(s+=" var "+v+"; if ("+t+" === false || "+t+" === undefined) "+v+" = true; else if (typeof "+t+" != 'boolean') "+v+" = false; else { "),s+=" var "+v+" = true; if ("+m+".length > 1) { var i = "+m+".length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal("+m+"[i], "+m+"[j])) { "+v+" = false; break outer; } } } } ",c&&(s+="  }  "),s+=" if (!"+v+") {   ";var n=n||[];n.push(s),s="",e.createErrors!==!1?(s+=" { keyword: '"+(r||"uniqueItems")+"' , dataPath: (dataPath || '') + "+e.errorPath+' , schemaPath: "'+u+'" , params: { i: i, j: j } ',e.opts.messages!==!1&&(s+=" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' "),e.opts.verbose&&(s+=" , schema:  ",s+=c?"validate.schema"+h:""+l,s+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),s+=" } "):s+=" {} ";var f=s;s=n.pop(),s+=!e.compositeRule&&d?e.async?" throw new ValidationError(["+f+"]); ":" validate.errors = ["+f+"]; return false; ":" var err = "+f+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+=" } ",d&&(s+=" else { ")}else d&&(s+=" if (true) { ");return s};