"use strict";module.exports=function(r,e){var a,s,o,t=" ",l=r.level,i=r.dataLevel,c=r.schema[e],n=r.errSchemaPath+"/"+e,v=!r.opts.allErrors,h="data"+(i||""),f="valid"+l;if("#"==c||"#/"==c)r.isRoot?(s=r.async,o="validate"):(s=r.root.schema.$async===!0,o="root.refVal[0]");else{var d=r.resolveRef(r.baseId,c,r.isRoot);if(void 0===d){var m="can't resolve reference "+c+" from id "+r.baseId;if("fail"==r.opts.missingRefs){console.log(m);var p=p||[];p.push(t),t="",r.createErrors!==!1?(t+=" { keyword: '"+(a||"$ref")+"' , dataPath: (dataPath || '') + "+r.errorPath+' , schemaPath: "'+n+"\" , params: { ref: '"+r.util.escapeQuotes(c)+"' } ",r.opts.messages!==!1&&(t+=" , message: 'can\\'t resolve reference "+r.util.escapeQuotes(c)+"' "),r.opts.verbose&&(t+=" , schema: "+r.util.toQuotedString(c)+" , parentSchema: validate.schema"+r.schemaPath+" , data: "+h+" "),t+=" } "):t+=" {} ";var u=t;t=p.pop(),t+=!r.compositeRule&&v?r.async?" throw new ValidationError(["+u+"]); ":" validate.errors = ["+u+"]; return false; ":" var err = "+u+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",v&&(t+=" if (false) { ")}else{if("ignore"!=r.opts.missingRefs){var E=new Error(m);throw E.missingRef=r.resolve.url(r.baseId,c),E.missingSchema=r.resolve.normalizeId(r.resolve.fullPath(E.missingRef)),E}console.log(m),v&&(t+=" if (true) { ")}}else if(d.inline){var g=r.util.copy(r);g.level++,g.schema=d.schema,g.schemaPath="",g.errSchemaPath=c;var P=r.validate(g).replace(/validate\.schema/g,d.code);t+=" "+P+" ",v&&(t+=" if (valid"+g.level+") { ")}else s=d.$async===!0,o=d.code}if(o){var p=p||[];p.push(t),t="",t+=r.opts.passContext?" "+o+".call(this, ":" "+o+"( ",t+=" "+h+", (dataPath || '')",'""'!=r.errorPath&&(t+=" + "+r.errorPath),t+=i?" , data"+(i-1||"")+" , "+r.dataPathArr[i]+" ":" , parentData , parentDataProperty ",t+=")  ";var y=t;if(t=p.pop(),s){if(!r.async)throw new Error("async schema referenced by sync schema");t+=" try { ",v&&(t+="var "+f+" ="),t+=" "+r.yieldAwait+" "+y+"; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } ",v&&(t+=" if ("+f+") { ")}else t+=" if (!"+y+") { if (vErrors === null) vErrors = "+o+".errors; else vErrors = vErrors.concat("+o+".errors); errors = vErrors.length; } ",v&&(t+=" else { ")}return t};