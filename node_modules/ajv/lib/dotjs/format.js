"use strict";module.exports=function(a,t){var e,r=" ",s=a.level,o=a.dataLevel,i=a.schema[t],c=a.schemaPath+"."+t,f=a.errSchemaPath+"/"+t,n=!a.opts.allErrors,l="data"+(o||"");if(a.opts.format===!1)return n&&(r+=" if (true) { "),r;var v,m=a.opts.v5&&i.$data;if(m?(r+=" var schema"+s+" = "+a.util.getData(i.$data,o,a.dataPathArr)+"; ",v="schema"+s):v=i,m){var d="format"+s;r+=" var "+d+" = formats["+v+"]; var isObject"+s+" = typeof "+d+" == 'object' && !("+d+" instanceof RegExp) && "+d+".validate; if (isObject"+s+") { var async"+s+" = "+d+".async; "+d+" = "+d+".validate; } if (  ",m&&(r+=" ("+v+" !== undefined && typeof "+v+" != 'string') || "),r+=" ("+d+" && !(typeof "+d+" == 'function' ? ",r+=a.async?" (async"+s+" ? "+a.yieldAwait+" "+d+"("+l+") : "+d+"("+l+")) ":" "+d+"("+l+") ",r+=" : "+d+".test("+l+")))) {"}else{var d=a.formats[i];if(!d)return n&&(r+=" if (true) { "),r;var h="object"==typeof d&&!(d instanceof RegExp)&&d.validate;if(h){var u=d.async===!0;d=d.validate}if(u){if(!a.async)throw new Error("async format in sync schema");var p="formats"+a.util.getProperty(i)+".validate";r+=" if (!("+a.yieldAwait+" "+p+"("+l+"))) { "}else{r+=" if (! ";var p="formats"+a.util.getProperty(i);h&&(p+=".validate"),r+="function"==typeof d?" "+p+"("+l+") ":" "+p+".test("+l+") ",r+=") { "}}var y=y||[];y.push(r),r="",a.createErrors!==!1?(r+=" { keyword: '"+(e||"format")+"' , dataPath: (dataPath || '') + "+a.errorPath+' , schemaPath: "'+f+'" , params: { format:  ',r+=m?""+v:""+a.util.toQuotedString(i),r+="  } ",a.opts.messages!==!1&&(r+=" , message: 'should match format \"",r+=m?"' + "+v+" + '":""+a.util.escapeQuotes(i),r+="\"' "),a.opts.verbose&&(r+=" , schema:  ",r+=m?"validate.schema"+c:""+a.util.toQuotedString(i),r+="         , parentSchema: validate.schema"+a.schemaPath+" , data: "+l+" "),r+=" } "):r+=" {} ";var g=r;return r=y.pop(),r+=!a.compositeRule&&n?a.async?" throw new ValidationError(["+g+"]); ":" validate.errors = ["+g+"]; return false; ":" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",n&&(r+=" else { "),r};