"use strict";module.exports=function(a,e){var r,t,s=" ",o=a.level,h=a.dataLevel,l=a.schema[e],d=a.schemaPath+"."+e,n=a.errSchemaPath+"/"+e,u=!a.opts.allErrors,c="data"+(h||""),i=a.opts.v5&&l.$data;i?(s+=" var schema"+o+" = "+a.util.getData(l.$data,h,a.dataPathArr)+"; ",t="schema"+o):t=l;var p=i?"(new RegExp("+t+"))":a.usePattern(l);s+="if ( ",i&&(s+=" ("+t+" !== undefined && typeof "+t+" != 'string') || "),s+=" !"+p+".test("+c+") ) {   ";var m=m||[];m.push(s),s="",a.createErrors!==!1?(s+=" { keyword: '"+(r||"pattern")+"' , dataPath: (dataPath || '') + "+a.errorPath+' , schemaPath: "'+n+'" , params: { pattern:  ',s+=i?""+t:""+a.util.toQuotedString(l),s+="  } ",a.opts.messages!==!1&&(s+=" , message: 'should match pattern \"",s+=i?"' + "+t+" + '":""+a.util.escapeQuotes(l),s+="\"' "),a.opts.verbose&&(s+=" , schema:  ",s+=i?"validate.schema"+d:""+a.util.toQuotedString(l),s+="         , parentSchema: validate.schema"+a.schemaPath+" , data: "+c+" "),s+=" } "):s+=" {} ";var v=s;return s=m.pop(),s+=!a.compositeRule&&u?a.async?" throw new ValidationError(["+v+"]); ":" validate.errors = ["+v+"]; return false; ":" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+="} ",u&&(s+=" else { "),s};