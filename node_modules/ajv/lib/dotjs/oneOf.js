"use strict";module.exports=function(e,r){var a,s=" ",l=e.level,t=e.dataLevel,o=e.schema[r],v=e.schemaPath+"."+r,i=e.errSchemaPath+"/"+r,h=!e.opts.allErrors,c="data"+(t||""),m="valid"+l,d="errs__"+l,u=e.util.copy(e),p="";u.level++,s+="var "+d+" = errors;var prevValid"+l+" = false;var "+m+" = false;";var n=u.baseId,f=e.compositeRule;e.compositeRule=u.compositeRule=!0;var E=o;if(E)for(var P,R=-1,g=E.length-1;g>R;)P=E[R+=1],e.util.schemaHasRules(P,e.RULES.all)?(u.schema=P,u.schemaPath=v+"["+R+"]",u.errSchemaPath=i+"/"+R,s+="  "+e.validate(u)+" ",u.baseId=n):s+=" var valid"+u.level+" = true; ",R&&(s+=" if (valid"+u.level+" && prevValid"+l+") "+m+" = false; else { ",p+="}"),s+=" if (valid"+u.level+") "+m+" = prevValid"+l+" = true;";e.compositeRule=u.compositeRule=f,s+=""+p+"if (!"+m+") {   ";var y=y||[];y.push(s),s="",e.createErrors!==!1?(s+=" { keyword: '"+(a||"oneOf")+"' , dataPath: (dataPath || '') + "+e.errorPath+' , schemaPath: "'+i+'" , params: {} ',e.opts.messages!==!1&&(s+=" , message: 'should match exactly one schema in oneOf' "),e.opts.verbose&&(s+=" , schema: validate.schema"+v+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),s+=" } "):s+=" {} ";var S=s;return s=y.pop(),s+=!e.compositeRule&&h?e.async?" throw new ValidationError(["+S+"]); ":" validate.errors = ["+S+"]; return false; ":" var err = "+S+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+="} else {  errors = "+d+"; if (vErrors !== null) { if ("+d+") vErrors.length = "+d+"; else vErrors = null; }",e.opts.allErrors&&(s+=" } "),s};