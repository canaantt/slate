"use strict";module.exports=function(e,r){var a,s=" ",l=e.level,t=e.dataLevel,o=e.schema[r],h=e.schemaPath+"."+r,c=e.errSchemaPath+"/"+r,v=!e.opts.allErrors,i="data"+(t||""),m="valid"+l,u="errs__"+l,d=e.util.copy(e),n="";d.level++;var p=o.every(function(r){return e.util.schemaHasRules(r,e.RULES.all)});if(p){var f=d.baseId;s+=" var "+u+" = errors; var "+m+" = false;  ";var E=e.compositeRule;e.compositeRule=d.compositeRule=!0;var P=o;if(P)for(var R,y=-1,g=P.length-1;g>y;)R=P[y+=1],d.schema=R,d.schemaPath=h+"["+y+"]",d.errSchemaPath=c+"/"+y,s+="  "+e.validate(d)+" ",d.baseId=f,s+=" "+m+" = "+m+" || valid"+d.level+"; if (!"+m+") { ",n+="}";e.compositeRule=d.compositeRule=E,s+=" "+n+" if (!"+m+") {  var err =   ",e.createErrors!==!1?(s+=" { keyword: '"+(a||"anyOf")+"' , dataPath: (dataPath || '') + "+e.errorPath+' , schemaPath: "'+c+'" , params: {} ',e.opts.messages!==!1&&(s+=" , message: 'should match some schema in anyOf' "),e.opts.verbose&&(s+=" , schema: validate.schema"+h+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+i+" "),s+=" } "):s+=" {} ",s+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = "+u+"; if (vErrors !== null) { if ("+u+") vErrors.length = "+u+"; else vErrors = null; } ",e.opts.allErrors&&(s+=" } "),s=e.util.cleanUpCode(s)}else v&&(s+=" if (true) { ");return s};