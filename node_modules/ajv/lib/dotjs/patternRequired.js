"use strict";module.exports=function(e,r){var a,t=" ",s=e.level,o=e.dataLevel,h=e.schema[r],l=e.schemaPath+"."+r,c=e.errSchemaPath+"/"+r,i=!e.opts.allErrors,n="data"+(o||""),p="valid"+s,v="key"+s,m="patternMatched"+s,d="",u=e.opts.ownProperties;t+="var "+p+" = true;";var P=h;if(P)for(var f,g=-1,y=P.length-1;y>g;){f=P[g+=1],t+=" var "+m+" = false; for (var "+v+" in "+n+") {  ",u&&(t+=" if (!Object.prototype.hasOwnProperty.call("+n+", "+v+")) continue; "),t+=" "+m+" = "+e.usePattern(f)+".test("+v+"); if ("+m+") break; } ";var E=e.util.escapeQuotes(f);t+=" if (!"+m+") { "+p+" = false;  var err =   ",e.createErrors!==!1?(t+=" { keyword: '"+(a||"patternRequired")+"' , dataPath: (dataPath || '') + "+e.errorPath+' , schemaPath: "'+c+"\" , params: { missingPattern: '"+E+"' } ",e.opts.messages!==!1&&(t+=" , message: 'should have property matching pattern \\'"+E+"\\'' "),e.opts.verbose&&(t+=" , schema: validate.schema"+l+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+n+" "),t+=" } "):t+=" {} ",t+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ",i&&(d+="}",t+=" else { ")}return t+=""+d};