"use strict";function emitSDAMEvent(e,t,r){e.listeners(t).length>0&&e.emit(t,r)}function emitTopologyDescriptionChanged(e,t){if(e.listeners("topologyDescriptionChanged").length>0&&t){var t=t.s,r={topologyType:"Sharded",servers:[]};r.servers=r.servers.concat(t.connectedServers.map(function(e){var t=e.getDescription();return t.type="Mongos",t})),r.servers=r.servers.concat(t.disconnectedServers.map(function(e){var t=e.getDescription();return t.type="Unknown",t}));var n={topologyId:e.id,previousDescription:t.topologyDescription,newDescription:r};e.emit("topologyDescriptionChanged",n),t.topologyDescription=r}}var inherits=require("util").inherits,f=require("util").format,b=require("bson"),bindToCurrentDomain=require("../connection/utils").bindToCurrentDomain,EventEmitter=require("events").EventEmitter,BasicCursor=require("../cursor"),BSON=require("bson")["native"]().BSON,BasicCursor=require("../cursor"),Server=require("./server"),MongoCR=require("../auth/mongocr"),X509=require("../auth/x509"),Plain=require("../auth/plain"),GSSAPI=require("../auth/gssapi"),SSPI=require("../auth/sspi"),ScramSHA1=require("../auth/scram"),Logger=require("../connection/logger"),ReadPreference=require("./read_preference"),Session=require("./session"),MongoError=require("../error"),DISCONNECTED="disconnected",CONNECTING="connecting",CONNECTED="connected",DESTROYED="destroyed",bsonTypes=[b.Long,b.ObjectID,b.Binary,b.Code,b.DBRef,b.Symbol,b.Double,b.Timestamp,b.MaxKey,b.MinKey],bsonInstance=null,mongosId=0,cloneOptions=function(e){var t={};for(var r in e)t[r]=e[r];return t},State=function(e,t){this.s={connectedServers:[],disconnectedServers:[],readPreferenceStrategies:e,lowerBoundLatency:Number.MAX_VALUE,localThresholdMS:t,index:0,topologyDescription:null}};State.prototype.resetDescription=function(){this.s.topologyDescription={topologyType:"Sharded",servers:[]}},State.prototype.connected=function(e){this.s.disconnectedServers=this.s.disconnectedServers.filter(function(t){return!t.equals(e)});var t=!1;this.s.connectedServers.forEach(function(r){r.equals(e)&&(t=!0)}),t||this.s.connectedServers.push(e),this.s.lowerBoundLatency>e.s.isMasterLatencyMS&&(this.s.lowerBoundLatency=e.s.isMasterLatencyMS)},State.prototype.disconnected=function(e){this.s.connectedServers=this.s.connectedServers.filter(function(t){return!t.equals(e)});var t=!1;this.s.disconnectedServers.forEach(function(r){r.equals(e)&&(t=!0)}),t||this.s.disconnectedServers.push(e)},State.prototype.disconnectedServers=function(){return this.s.disconnectedServers.slice(0)},State.prototype.connectedServers=function(){return this.s.connectedServers.slice(0)},State.prototype.getAll=function(){return this.s.connectedServers.slice(0).concat(this.s.disconnectedServers)},State.prototype.getAllConnections=function(){var e=[];return this.s.connectedServers.forEach(function(t){e=e.concat(t.connections())}),e},State.prototype.unref=function(){for(var e=0;e<this.s.connectedServers.length;e++){var t=this.s.connectedServers[e];["error","close","timeout","connect"].forEach(function(e){t.removeAllListeners(e)}),t.unref()}},State.prototype.destroy=function(){for(;this.s.connectedServers.length>0;){var e=this.s.connectedServers.shift();["error","close","timeout","connect"].forEach(function(t){e.removeAllListeners(t)}),e.destroy(),this.s.disconnectedServers.push(e)}};var pickProxies=function(e,t){t=t||{};var r=t.readPreference||ReadPreference.primary,n=e.s.connectedServers.slice(0);if(null!=e.s.readPreferenceStrategies&&null!=e.s.readPreferenceStrategies[r]){var o=e.s.readPreferenceStrategies[r].pickServer(n,r);return o?[o]:[]}return n=e.s.connectedServers.filter(function(t){return t.s.isMasterLatencyMS<=e.s.lowerBoundLatency+e.s.localThresholdMS&&t.isConnected()?!0:void 0}),0==n.length&&e.s.connectedServers.length>0?(n=e.s.connectedServers.sort(function(e,t){return e.s.isMasterLatencyMS-t.s.isMasterLatencyMS}),[n[0]]):n};State.prototype.isConnected=function(e){var t=pickProxies(this,e);return t.length>0?!0:!1},State.prototype.pickServer=function(e){var t=pickProxies(this,{readPreference:e});if(0==t.length)throw new MongoError("no mongos proxy available");return this.s.index=(this.s.index+1)%t.length,t[this.s.index]};var Mongos=function(e,t){var r=this;if(t=t||{},EventEmitter.call(this),!Array.isArray(e))throw new MongoError("seedlist must be an array");if(0==e.length)throw new MongoError("seedlist must contain at least one entry");e.forEach(function(e){if("string"!=typeof e.host||"number"!=typeof e.port)throw new MongoError("seedlist entry must contain a host and port")}),bsonInstance=null==bsonInstance?new BSON(bsonTypes):bsonInstance;var n=t.bson?t.bson:bsonInstance;t.bson=n,this.s={seedlist:e,options:t,logger:Logger("Mongos",t),reconnectTries:t.reconnectTries||30,haInterval:t.haInterval||5e3,localThresholdMS:t.localThresholdMS||15,fullsetup:!1,Cursor:t.cursorFactory||BasicCursor,credentials:[],bsonInstance:bsonInstance,bson:n,pings:{},state:DISCONNECTED,emitError:"boolean"==typeof t.emitError?t.emitError:!1,readPreferenceStrategies:{},authProviders:{},id:mongosId++,authInProgress:!1,authInProgressServers:[],retriesLeft:t.reconnectTries||30,disconnectHandler:t.disconnectHandler},t.connectionTimeout=t.connectionTimeout||1e3,this.s.mongosState=new State(this.s.readPreferenceStrategies,this.s.localThresholdMS),this.addAuthProvider("mongocr",new MongoCR),this.addAuthProvider("x509",new X509),this.addAuthProvider("plain",new Plain),this.addAuthProvider("gssapi",new GSSAPI),this.addAuthProvider("sspi",new SSPI),this.addAuthProvider("scram-sha-1",new ScramSHA1),Object.defineProperty(this,"bson",{enumerable:!0,get:function(){var e=r.s.mongosState.getAll();return e.length>0?e[0].bson:null}}),Object.defineProperty(this,"id",{enumerable:!0,get:function(){return r.s.id}}),Object.defineProperty(this,"type",{enumerable:!0,get:function(){return"mongos"}}),Object.defineProperty(this,"haInterval",{enumerable:!0,get:function(){return r.s.haInterval}}),Object.defineProperty(this,"state",{enumerable:!0,get:function(){return r.s.mongosState}})};inherits(Mongos,EventEmitter),Mongos.prototype.parserType=function(){return-1!=this.s.bson.serialize.toString().indexOf("[native code]")?"c++":"js"},Mongos.prototype.setBSONParserType=function(e){var t=null;if("c++"==e)t=require("bson")["native"]().BSON;else{if("js"!=e)throw new MongoError(f("% parser not supported",e));t=require("bson").pure().BSON}this.s.options.bson=new t(bsonTypes)},Mongos.prototype.lastIsMaster=function(){var e=this.s.mongosState.connectedServers();return e.length>0?e[0].lastIsMaster():null},Mongos.prototype.connect=function(e){var t=this;if(setTimeout(mongosInquirer(t,t.s),t.s.haInterval),e)for(var r in e)t.s.options[r]=e[r];t.s.seedlist.forEach(function(e){var r=cloneOptions(t.s.options);r.host=e.host,r.port=e.port,r.reconnect=!1,r.readPreferenceStrategies=t.s.readPreferenceStrategies,r.authProviders=t.s.authProviders,r.emitError=!0,r.inTopology=!0,r.topologyId=t.s.id,r.monitoring=!0,t.s.mongosState.disconnected(new Server(r))}),this.s.mongosState.resetDescription(),emitSDAMEvent(this,"topologyOpening",{topologyId:this.s.id});var n=t.s.mongosState.disconnectedServers();for(this.s.state=CONNECTING;n.length>0;){var o=n.shift();["error","close","timeout","connect","message","parseError","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"].forEach(function(e){o.removeAllListeners(e)}),o.once("error",errorHandlerTemp(t,t.s,o)),o.once("close",errorHandlerTemp(t,t.s,o)),o.once("timeout",errorHandlerTemp(t,t.s,o)),o.once("parseError",errorHandlerTemp(t,t.s,o)),o.once("connect",connectHandler(t,t.s,"connect")),o.on("serverOpening",function(e){t.emit("serverOpening",e)}),o.on("serverDescriptionChanged",function(e){t.emit("serverDescriptionChanged",e)}),o.on("serverHeartbeatStarted",function(e){t.emit("serverHeartbeatStarted",e)}),o.on("serverHeartbeatSucceeded",function(e){t.emit("serverHeartbeatSucceeded",e)}),o.on("serverHearbeatFailed",function(e){t.emit("serverHearbeatFailed",e)}),o.on("serverClosed",function(e){t.emit("serverClosed",e)}),t.s.logger.isInfo()&&t.s.logger.info(f("connecting to server %s",o.name));var s=function(e){process.nextTick(function(){e.connect()})};s(o)}},Mongos.prototype.unref=function(e){this.s.logger.isInfo()&&this.s.logger.info(f("[%s] unreferenced",this.s.id)),e&&this.listeners("close").length>0&&this.emit("close",this),this.s.mongosState.unref()},Mongos.prototype.destroy=function(e){this.s.state=DESTROYED,emitSDAMEvent(this,"topologyClosed",{topologyId:this.s.id}),e&&self.listeners("close").length>0&&self.emit("close",self),this.s.mongosState.destroy()},Mongos.prototype.isConnected=function(e){return this.s.mongosState.isConnected(e)},Mongos.prototype.isDestroyed=function(){return this.s.state==DESTROYED},Mongos.prototype.insert=function(e,t,r,n){return"function"==typeof r&&(n=r,r={}),this.s.state==DESTROYED?n(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?void executeWriteOperation(this.s,"insert",e,t,r,n):(n=bindToCurrentDomain(n),this.s.disconnectHandler.add("insert",e,t,r,n))},Mongos.prototype.update=function(e,t,r,n){return"function"==typeof r&&(n=r,r={}),this.s.state==DESTROYED?n(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?void executeWriteOperation(this.s,"update",e,t,r,n):(n=bindToCurrentDomain(n),this.s.disconnectHandler.add("update",e,t,r,n))},Mongos.prototype.remove=function(e,t,r,n){return"function"==typeof r&&(n=r,r={}),this.s.state==DESTROYED?n(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?void executeWriteOperation(this.s,"remove",e,t,r,n):(n=bindToCurrentDomain(n),this.s.disconnectHandler.add("remove",e,t,r,n))},Mongos.prototype.command=function(e,t,r,n){if("function"==typeof r&&(n=r,r={}),this.s.state==DESTROYED)return n(new MongoError(f("topology was destroyed")));var o=this;if(!o.isConnected()&&null!=o.s.disconnectHandler)return n=bindToCurrentDomain(n),o.s.disconnectHandler.add("command",e,t,r,n);var s=null;if(r=r||{},!r.onAll){try{s=o.s.mongosState.pickServer(r.writeConcern?ReadPreference.primary:r.readPreference)}catch(i){return n(i)}return null==s?n(new MongoError("no mongos found")):void s.command(e,t,r,function(r,s){t.logout&&clearCredentials(o.s,e),n(r,s)})}for(var c=o.s.mongosState.getAll(),a=c.length,l=0;l<c.length;l++)c[l].command(e,t,r,function(r,s){a-=1,0==a&&(t.logout&&clearCredentials(o.s,e),n(r,s))})},Mongos.prototype.cursor=function(e,t,r){r=r||{};var n=r.cursorFactory||this.s.Cursor;return new n(this.s.bson,e,t,r,this,this.s.options)},Mongos.prototype.auth=function(e,t){var r=(Array.prototype.slice.call(arguments,0).slice(0),this),n=Array.prototype.slice.call(arguments,2),o=n.pop();if(null==this.s.authProviders[e]&&"default"!=e)throw new MongoError(f("auth provider %s does not exist",e));var s=this.s.mongosState.connectedServers().slice(0),i=s.length,c=!0,a=null;for(this.s.authInProgress=!0;s.length>0;){var l=s.shift(),d=[e,t].concat(n.slice(0)),u=d.concat([function(s,l){if(i-=1,s&&(a=s),l||(c=!1),0==i){if(r.s.authInProgressServers.length>0)return r.s.authInProgressServers=[],r.auth.apply(r,[e,t].concat(n).concat([o]));if(r.s.authInProgress=!1,null==a&&addCredentials(r.s,t,d),a)return o(a,!1);o(null,new Session({},r))}}]);l.auth.apply(l,u)}},Mongos.prototype.addReadPreferenceStrategy=function(e,t){null==this.s.readPreferenceStrategies&&(this.s.readPreferenceStrategies={}),this.s.readPreferenceStrategies[e]=t},Mongos.prototype.addAuthProvider=function(e,t){this.s.authProviders[e]=t},Mongos.prototype.getConnection=function(e){e=e||{};var t=this.s.mongosState.pickServer(e.readPreference);return null==t?null:t.getConnection()},Mongos.prototype.getServer=function(e){return e=e||{},this.s.mongosState.pickServer(e.readPreference)},Mongos.prototype.getServerFrom=function(e){for(var t=this.s.mongosState.getAll(),r=0;r<t.length;r++)if(t[r].equals(e.name))return t[r];return null},Mongos.prototype.connections=function(){return this.s.mongosState.getAllConnections()};var mongosInquirer=function(e,t){return function(){if(t.state!=DESTROYED){if(t.state==CONNECTED&&(t.retriesLeft=t.reconnectTries),t.state==DISCONNECTED&&0==t.retriesLeft)return e.destroy(),e.emit("error",new MongoError(f("failed to reconnect after %s",t.reconnectTries)));t.state==DISCONNECTED&&(t.retriesLeft=t.retriesLeft-1),t.mongosState.isConnected()&&t.disconnectHandler&&t.disconnectHandler.execute(),t.logger.isDebug()&&t.logger.debug(f("mongos ha proceess running"));var r=t.mongosState.disconnectedServers();if(0==r.length)return setTimeout(mongosInquirer(e,t),t.haInterval);var n=r.length;for(t.logger.isDebug()&&t.logger.debug(f("mongos ha proceess found %d disconnected proxies",n));r.length>0;){var o=function(r){setTimeout(function(){["error","close","timeout","connect","message","parseError","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"].forEach(function(e){r.removeAllListeners(e)}),r.once("error",errorHandlerTemp(e,t,s)),r.once("close",errorHandlerTemp(e,t,s)),r.once("timeout",errorHandlerTemp(e,t,s)),r.once("connect",connectHandler(e,t,"ha")),r.on("serverOpening",function(t){e.emit("serverOpening",t)}),r.on("serverDescriptionChanged",function(t){e.emit("serverDescriptionChanged",t)}),r.on("serverHeartbeatStarted",function(t){e.emit("serverHeartbeatStarted",t)}),r.on("serverHeartbeatSucceeded",function(t){e.emit("serverHeartbeatSucceeded",t)}),r.on("serverHearbeatFailed",function(t){e.emit("serverHearbeatFailed",t)}),r.on("serverClosed",function(t){e.emit("serverClosed",t)}),r.connect()},1)},s=r.shift();t.logger.isDebug()&&t.logger.debug(f("attempting to connect to server %s",s.name)),o(s)}return setTimeout(mongosInquirer(e,t),t.options.connectionTimeout+t.haInterval)}}},errorHandlerTemp=function(e,t,r){return function(e,r){t.logger.isInfo()&&t.logger.info(f("server %s disconnected with error %s",r.name,JSON.stringify(e))),t.mongosState.disconnected(r);var n=["error","close","timeout","connect"];n.forEach(function(e){r.removeAllListeners(e)})}},errorHandler=function(e,t){return function(r,n){t.logger.isInfo()&&t.logger.info(f("server %s errored out with %s",n.name,JSON.stringify(r))),t.mongosState.disconnected(n),0==t.mongosState.connectedServers().length&&(t.state=DISCONNECTED),emitTopologyDescriptionChanged(e,t.mongosState),e.emit("left","mongos",n),t.emitError&&e.emit("error",r,n)}},timeoutHandler=function(e,t){return function(r,n){t.logger.isInfo()&&t.logger.info(f("server %s timed out",n.name)),t.mongosState.disconnected(n),0==t.mongosState.connectedServers().length&&(t.state=DISCONNECTED),emitTopologyDescriptionChanged(e,t.mongosState),e.emit("left","mongos",n)}},closeHandler=function(e,t){return function(r,n){t.logger.isInfo()&&t.logger.info(f("server %s closed",n.name)),t.mongosState.disconnected(n),0==t.mongosState.connectedServers().length&&(t.state=DISCONNECTED),emitTopologyDescriptionChanged(e,t.mongosState),e.emit("left","mongos",n)}},connectHandler=function(e,t,r){return function(n){t.logger.isInfo()&&t.logger.info(f("connected to %s",n.name)),["error","close","timeout","connect","message","parseError"].forEach(function(e){n.removeAllListeners(e)});var o=function(n){n.isConnected()&&(n.once("error",errorHandler(e,t)),n.once("close",closeHandler(e,t)),n.once("timeout",timeoutHandler(e,t)),n.once("parseError",timeoutHandler(e,t))),e.emit("joined","mongos",n),t.mongosState.connected(n),"ha"==r&&1==t.mongosState.connectedServers().length&&e.emit("reconnect",n),0==t.mongosState.disconnectedServers().length&&t.mongosState.connectedServers().length>0&&!t.fullsetup&&(t.fullsetup=!0,e.emit("fullsetup",e)),0!=t.mongosState.disconnectedServers().length||t.mongosState.connectedServers().length!=t.seedlist.length||t.all||(t.all=!0,e.emit("all",e)),emitTopologyDescriptionChanged(e,t.mongosState),t.state==DISCONNECTED?(t.state=CONNECTED,e.emit("reconnect",e)):t.state==CONNECTING&&(t.state=CONNECTED,e.emit("connect",e))};if(t.authInProgress&&t.authInProgressServers.push(n),0==t.credentials.length)return o(n);for(var s=t.credentials.length,i=0;i<t.credentials.length;i++)n.auth.apply(n,t.credentials[i].concat([function(e,t){s-=1,0==s&&o(n)}]))}},addToListIfNotExist=function(e,t){var r=!1;["error","close","timeout","connect"].forEach(function(e){t.removeAllListeners(e)});for(var n=0;n<e.length;n++)e[n].equals(t)&&(r=!0);r||e.push(t)},addCredentials=function(e,t,r){clearCredentials(e,t+".dummy"),e.credentials.push(r)},clearCredentials=function(e,t){for(var r=t.split(".")[0],n=[],o=0;o<e.credentials.length;o++)e.credentials[o][1]!=r&&n.push(e.credentials[o]);e.credentials=n},processReadPreference=function(e,t){return t=t||{},null==t.readPreference?e:void 0},executeWriteOperation=function(e,t,r,n,o,s){"function"==typeof o&&(s=o,o={});var i=null;o=o||{};try{i=e.mongosState.pickServer()}catch(c){return s(c)}return null==i?s(new MongoError("no mongos found")):void i[t](r,n,o,s)};module.exports=Mongos;