"use strict";function emitSDAMEvent(e,r,t){e.listeners(r).length>0&&e.emit(r,t)}var inherits=require("util").inherits,f=require("util").format,b=require("bson"),bindToCurrentDomain=require("../connection/utils").bindToCurrentDomain,debugOptions=require("../connection/utils").debugOptions,EventEmitter=require("events").EventEmitter,Server=require("./server"),ReadPreference=require("./read_preference"),MongoError=require("../error"),Ping=require("./strategies/ping"),Session=require("./session"),BasicCursor=require("../cursor"),BSON=require("bson")["native"]().BSON,State=require("./replset_state"),MongoCR=require("../auth/mongocr"),X509=require("../auth/x509"),Plain=require("../auth/plain"),GSSAPI=require("../auth/gssapi"),SSPI=require("../auth/sspi"),ScramSHA1=require("../auth/scram"),Logger=require("../connection/logger"),DISCONNECTED="disconnected",CONNECTING="connecting",CONNECTED="connected",DESTROYED="destroyed",replSetId=1,cloneOptions=function(e){var r={};for(var t in e)r[t]=e[t];return r},bsonTypes=[b.Long,b.ObjectID,b.Binary,b.Code,b.DBRef,b.Symbol,b.Double,b.Timestamp,b.MaxKey,b.MinKey],bsonInstance=null,ReplSet=function(e,r){var t=this;if(r=r||{},r=cloneOptions(r),!Array.isArray(e))throw new MongoError("seedlist must be an array");if(0==e.length)throw new MongoError("seedlist must contain at least one entry");e.forEach(function(e){if("string"!=typeof e.host||"number"!=typeof e.port)throw new MongoError("seedlist entry must contain a host and port")}),EventEmitter.call(this),bsonInstance=null==bsonInstance?new BSON(bsonTypes):bsonInstance,this.s={options:r,logger:Logger("ReplSet",r),id:replSetId++,index:0,haId:0,credentials:[],Cursor:r.cursorFactory||BasicCursor,bsonInstance:bsonInstance,bson:r.bson?r.bson:bsonInstance,secondaryOnlyConnectionAllowed:"boolean"==typeof r.secondaryOnlyConnectionAllowed?r.secondaryOnlyConnectionAllowed:!1,haInterval:r.haInterval||1e4,currentHaInterval:r.haInterval||1e4,debug:"boolean"==typeof r.debug?r.debug:!1,setName:r.setName,emitError:"boolean"==typeof r.emitError?r.emitError:!1,tag:r.tag,disconnectHandler:r.disconnectHandler,readPreferenceStrategies:{},authProviders:{},disconnectedServers:[],initialConnectionServers:[],highAvailabilityProcessRunning:!1,fullsetup:!1,all:!1,seedlist:e,authInProgress:!1,authInProgressServers:[],minHeartbeatFrequencyMS:500,haTimer:null},r.bson=this.s.bson,r.connectionTimeout=r.connectionTimeout||1e4;var n=new State(this,{id:this.s.id,setName:this.s.setName,secondaryOnlyConnectionAllowed:this.s.secondaryOnlyConnectionAllowed});this.s.replState=n,this.addAuthProvider("mongocr",new MongoCR),this.addAuthProvider("x509",new X509),this.addAuthProvider("plain",new Plain),this.addAuthProvider("gssapi",new GSSAPI),this.addAuthProvider("sspi",new SSPI),this.addAuthProvider("scram-sha-1",new ScramSHA1),Object.defineProperty(this,"bson",{enumerable:!0,get:function(){var e=t.s.replState.getAll();return e.length>0?e[0].bson:null}}),Object.defineProperty(this,"id",{enumerable:!0,get:function(){return t.s.id}}),Object.defineProperty(this,"haInterval",{enumerable:!0,get:function(){return t.s.haInterval}}),Object.defineProperty(this,"state",{enumerable:!0,get:function(){return t.s.replState}}),t.s.debug&&Object.defineProperty(this,"readPreferenceStrategies",{enumerable:!0,get:function(){return t.s.readPreferenceStrategies}}),Object.defineProperty(this,"type",{enumerable:!0,get:function(){return"replset"}}),this.addReadPreferenceStrategy("nearest",new Ping(r))};inherits(ReplSet,EventEmitter),ReplSet.prototype.addReadPreferenceStrategy=function(e,r){this.s.readPreferenceStrategies[e]=r},ReplSet.prototype.addAuthProvider=function(e,r){null==this.s.authProviders&&(this.s.authProviders={}),this.s.authProviders[e]=r},ReplSet.prototype.parserType=function(){return-1!=this.s.bson.serialize.toString().indexOf("[native code]")?"c++":"js"},ReplSet.prototype.setBSONParserType=function(e){var r=null;if("c++"==e)r=require("bson")["native"]().BSON;else{if("js"!=e)throw new MongoError(f("% parser not supported",e));r=require("bson").pure().BSON}this.s.options.bson=new r(bsonTypes)},ReplSet.prototype.lastIsMaster=function(){return this.s.replState.lastIsMaster()},ReplSet.prototype.getConnection=function(e){e=e||{};var r=pickServer(this,this.s,e.readPreference);return null==r?null:r.getConnection()},ReplSet.prototype.connections=function(){return this.s.replState.getAllConnections({includeArbiters:!0})},ReplSet.prototype.getServer=function(e){return e=e||{},pickServer(this,this.s,e.readPreference)},ReplSet.prototype.getServerFrom=function(e){for(var r=this.s.replState.getAll(),t=0;t<r.length;t++)if(r[t].equals(e.name))return r[t];return null},ReplSet.prototype.cursor=function(e,r,t){t=t||{};var n=t.cursorFactory||this.s.Cursor;return new n(this.s.bson,e,r,t,this,this.s.options)};var executeWriteOperation=function(e,r,t,n,s,i){"function"==typeof s&&(i=s,s={});var o=null;s=s||{};try{o=pickServer(e,e.s,ReadPreference.primary),e.s.debug&&e.emit("pickedServer",ReadPreference.primary,o)}catch(a){return i(a)}if(null==o)return i(new MongoError("no server found"));var l=function(r,t){!notMasterError(t)&&!notMasterError(r)||e.s.highAvailabilityProcessRunning||(e.s.currentHaInterval=e.s.minHeartbeatFrequencyMS,replicasetInquirer(e,e.s,!0)()),i(r,t)};i.operationId&&(l.operationId=i.operationId),o[r](t,n,s,l)};ReplSet.prototype.command=function(e,r,t,n){if("function"==typeof t&&(n=t,t={}),this.s.replState.state==DESTROYED)return n(new MongoError(f("topology was destroyed")));var s=null,i=this;if(t=t||{},!this.isConnected(t)&&null!=this.s.disconnectHandler)return n=bindToCurrentDomain(n),this.s.disconnectHandler.add("command",e,r,t,n);if(!t.onAll){try{s=pickServer(i,i.s,t.writeConcern?ReadPreference.primary:t.readPreference),i.s.debug&&i.emit("pickedServer",t.writeConcern?ReadPreference.primary:t.readPreference,s)}catch(o){return n(o)}return null==s?n(new MongoError("no server found")):void s.command(e,r,t,function(t,s){r.logout&&clearCredentials(i.s,e),!notMasterError(s)&&!notMasterError(t)||i.s.highAvailabilityProcessRunning||replicasetInquirer(i,i.s,!0)(),n(t,s)})}for(var a=this.s.replState.getAll(),l=a.length,c=0;c<a.length;c++)a[c].command(e,r,t,function(t,s){l-=1,0==l&&(r.logout&&clearCredentials(i.s,e),!notMasterError(s)&&!notMasterError(t)||i.s.highAvailabilityProcessRunning||replicasetInquirer(i,i.s,!0)(),n(t,s))})},ReplSet.prototype.remove=function(e,r,t,n){return"function"==typeof t&&(n=t,t={}),this.s.replState.state==DESTROYED?n(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?void executeWriteOperation(this,"remove",e,r,t,n):(n=bindToCurrentDomain(n),this.s.disconnectHandler.add("remove",e,r,t,n))},ReplSet.prototype.insert=function(e,r,t,n){return"function"==typeof t&&(n=t,t={}),this.s.replState.state==DESTROYED?n(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?void executeWriteOperation(this,"insert",e,r,t,n):(n=bindToCurrentDomain(n),this.s.disconnectHandler.add("insert",e,r,t,n))},ReplSet.prototype.update=function(e,r,t,n){return"function"==typeof t&&(n=t,t={}),this.s.replState.state==DESTROYED?n(new MongoError(f("topology was destroyed"))):this.isConnected()||null==this.s.disconnectHandler?void executeWriteOperation(this,"update",e,r,t,n):(n=bindToCurrentDomain(n),this.s.disconnectHandler.add("update",e,r,t,n))},ReplSet.prototype.auth=function(e,r){var t=(Array.prototype.slice.call(arguments,0).slice(0),this),n=Array.prototype.slice.call(arguments,2),s=n.pop();if(null==this.s.authProviders[e]&&"default"!=e)throw new MongoError(f("auth provider %s does not exist",e));var i=this.s.replState.getAll().slice(0),o=i.length,a=!0,l=null;for(this.s.authInProgress=!0;i.length>0;){var c=i.shift(),d=[e,r].concat(n.slice(0)),u=d.concat([function(i,c){if(o-=1,i&&(l=i),c||(a=!1),0==o){if(t.s.authInProgressServers.length>0)return t.s.authInProgressServers=[],t.auth.apply(t,[e,r].concat(n).concat([s]));if(t.s.authInProgress=!1,null==l&&addCredentials(t.s,r,d),l)return s(l,!1);s(null,new Session({},t))}}]);c.auth.apply(c,u)}},ReplSet.prototype.state=function(){return this.s.replState.state};var handleIsmaster=function(e){return function(e,r){e.arbiterOnly?r.s.options.size=1:e.hidden&&(r.s.options.size=1)}};ReplSet.prototype.connect=function(e){var r=this;if(setHaTimer(r,r.s),e)for(var t in e)this.s.options[t]=e[t];for(this.s.replState.state=CONNECTING,this.s.fullsetup=!1,this.s.replState.resetDescription(),this.s.seedlist.forEach(function(e){var t=cloneOptions(r.s.options);t.host=e.host,t.port=e.port,t.reconnect=!1,t.readPreferenceStrategies=r.s.readPreferenceStrategies,t.emitError=!0,t.size=t.size+1,t.monitoring=!0,t.topologyId=r.s.id,t.inTopology=!0,r.s.tag&&(t.tag=r.s.tag),t.authProviders=r.s.authProviders;var n=new Server(t);n.on("ismaster",handleIsmaster(r)),r.s.disconnectedServers.push(n),r.s.initialConnectionServers.push(n)}),emitSDAMEvent(this,"topologyOpening",{topologyId:this.s.id});this.s.disconnectedServers.length>0;){var n=r.s.disconnectedServers.shift();n.destroy(),n.once("error",errorHandlerTemp(r,r.s,"error")),n.once("close",errorHandlerTemp(r,r.s,"close")),n.once("timeout",errorHandlerTemp(r,r.s,"timeout")),n.once("connect",connectHandler(r,r.s)),n.on("serverOpening",function(e){r.emit("serverOpening",e)}),n.on("serverDescriptionChanged",function(e){r.emit("serverDescriptionChanged",e)}),n.on("serverHeartbeatStarted",function(e){r.emit("serverHeartbeatStarted",e)}),n.on("serverHeartbeatSucceeded",function(e){r.emit("serverHeartbeatSucceeded",e)}),n.on("serverHearbeatFailed",function(e){r.emit("serverHearbeatFailed",e)}),n.on("serverClosed",function(e){r.emit("serverClosed",e)});var s=function(e){process.nextTick(function(){e.connect()})};s(n)}},ReplSet.prototype.isConnected=function(e){return e=e||{},e.readPreference&&e.readPreference.equals(ReadPreference.secondary)?this.s.replState.isSecondaryConnected():e.readPreference&&e.readPreference.equals(ReadPreference.primary)?this.s.replState.isPrimaryConnected():e.readPreference&&e.readPreference.equals(ReadPreference.primaryPreferred)?this.s.replState.isSecondaryConnected()||this.s.replState.isPrimaryConnected():e.readPreference&&e.readPreference.equals(ReadPreference.secondaryPreferred)?this.s.replState.isSecondaryConnected()||this.s.replState.isPrimaryConnected():this.s.secondaryOnlyConnectionAllowed&&this.s.replState.isSecondaryConnected()?!0:this.s.replState.isPrimaryConnected()},ReplSet.prototype.isDestroyed=function(){return this.s.replState.state==DESTROYED},ReplSet.prototype.unref=function(e){var r=this;this.s.logger.isInfo()&&this.s.logger.info(f("[%s] unreferenced",this.s.id)),e&&r.listeners("close").length>0&&r.emit("close",r),this.s.replState.unref();var t=["timeout","error","close","joined","left","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"];t.forEach(function(e){r.removeAllListeners(e)}),clearTimeout(r.s.haTimer)},ReplSet.prototype.destroy=function(e){var r=this;this.s.logger.isInfo()&&this.s.logger.info(f("[%s] destroyed",this.s.id)),this.s.replState.state=DESTROYED,r.s.haTimer&&clearTimeout(r.s.haTimer),e&&r.listeners("close").length>0&&r.emit("close",r),this.s.replState.destroy(),emitSDAMEvent(this,"topologyClosed",{topologyId:this.s.id});var t=["timeout","error","close","joined","left","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"];t.forEach(function(e){r.removeAllListeners(e)}),clearTimeout(r.s.haTimer)};var addCredentials=function(e,r,t){clearCredentials(e,r+".dummy"),e.credentials.push(t)},clearCredentials=function(e,r){for(var t=r.split(".")[0],n=[],s=0;s<e.credentials.length;s++)e.credentials[s][1]!=t&&n.push(e.credentials[s]);e.credentials=n},filterByTags=function(e,r){if(null==e.tags)return r;for(var t=[],n=Array.isArray(e.tags)?i:[i],s=0;s<n.length;s++){for(var i=n[s],o=0;o<r.length;o++){var a=r[o].lastIsMaster().tags||{},l=!0;for(var c in i)a[c]!=i[c]&&(l=!1);l&&t.push(r[o])}if(l)break}return t},eventHandler={fullsetup:function(e,r){r.replState.primary&&0!==r.replState.secondaries.length&&(r.fullsetup||e.listeners("fullsetup").length>0&&(r.fullsetup=!0,e.emit("fullsetup",e)))},all:function(e,r){if(r.replState.primary&&e.lastIsMaster()&&Array.isArray(e.lastIsMaster().hosts)&&!r.all){var t=1+r.replState.secondaries.length;t===e.lastIsMaster().hosts.length&&e.listeners("all").length>0&&(r.all=!0,e.emit("all",e))}}},checkAndEmitEvent=function(e,r,t){var n=eventHandler[t];if(!n)throw new MongoError(t+" event not implemented");n(e,r)},pickServer=function(e,r,t){if(t=t||ReadPreference.primary,null!=r.readPreferenceStrategies&&null!=r.readPreferenceStrategies[t.preference]){if(null==r.readPreferenceStrategies[t.preference])throw new MongoError(f("cannot locate read preference handler for %s",t.preference));var n=r.readPreferenceStrategies[t.preference].pickServer(r.replState,t);return r.debug&&e.emit("pickedServer",t,n),n}var s=r.replState.getSecondaries();if(t.equals(ReadPreference.secondary)&&0==s.length)throw new MongoError("no secondary server available");if(t.equals(ReadPreference.secondaryPreferred)&&0==s.length&&null==r.replState.primary)throw new MongoError("no secondary or primary server available");if(t.equals(ReadPreference.primary)&&null==r.replState.primary)throw new MongoError("no primary server available");if(t.equals(ReadPreference.secondary))return r.index=(r.index+1)%s.length,s[r.index];if(t.equals(ReadPreference.secondaryPreferred)){if(s.length>0){var i=filterByTags(t,s);if(i.length>0)return r.index=(r.index+1)%i.length,i[r.index]}return r.replState.primary}if(t.equals(ReadPreference.primaryPreferred)){if(r.replState.primary)return r.replState.primary;if(s.length>0){var i=filterByTags(t,s);if(i.length>0)return r.index=(r.index+1)%i.length,i[r.index];throw new MongoError("no secondary or primary server available")}}return r.replState.primary},setHaTimer=function(e,r){return r.highAvailabilityProcessRunning?void 0:(e.s.haTimer=setTimeout(replicasetInquirer(e,r,!1),r.currentHaInterval),e.s.haTimer)},haveAvailableServers=function(e){return 0==e.disconnectedServers.length&&0==e.replState.secondaries.length&&0==e.replState.arbiters.length&&null==e.replState.primary?!1:!0},merge=function(e,r){for(var t=e.slice(0),n=0;n<r.length;n++)-1==t.indexOf(r[n])&&t.push(r[n]);return t},replicasetInquirer=function(e,r,t){return function(){if(!r.highAvailabilityProcessRunning&&r.replState.state!=DESTROYED){r.replState.isPrimaryConnected()?e.s.currentHaInterval=e.s.haInterval:e.s.currentHaInterval=e.s.minHeartbeatFrequencyMS,r.replState.clearConnectingServers(),r.replState.clean(),r.highAvailabilityProcessRunning=!0,haveAvailableServers(r)||(r.disconnectedServers=r.seedlist.map(function(t){var n=cloneOptions(r.options);n.host=t.host,n.port=t.port,n.reconnect=!1,n.readPreferenceStrategies=r.readPreferenceStrategies,n.emitError=!0,n.size=n.size+1,n.monitoring=!0,n.topologyId=e.s.id,n.inTopology=!0,r.tag&&(n.tag=r.tag),n.authProviders=r.authProviders;var s=new Server(n);return s.on("ismaster",handleIsmaster(e)),s})),r.logger.isInfo()&&r.logger.info(f("[%s] monitoring process running %s",r.id,JSON.stringify(r.replState)));var n=r.haId++;for(t="boolean"==typeof t?t:!1,r.replState.isPrimaryConnected()&&r.replState.isSecondaryConnected()&&r.disconnectHandler&&r.disconnectHandler.execute(),e.emit("ha","start",{norepeat:t,id:n,state:r.replState?r.replState.toJSON():{}});r.disconnectedServers.length>0;){var s=r.disconnectedServers.shift();r.logger.isInfo()&&r.logger.info(f("[%s] monitoring attempting to connect to %s",r.id,s.lastIsMaster()?s.lastIsMaster().me:s.name)),s.once("error",errorHandlerTemp(e,r,"error")),s.once("close",errorHandlerTemp(e,r,"close")),s.once("timeout",errorHandlerTemp(e,r,"timeout")),s.once("connect",connectHandler(e,r)),s.on("serverOpening",function(r){e.emit("serverOpening",r)}),s.on("serverDescriptionChanged",function(r){e.emit("serverDescriptionChanged",r)}),s.on("serverHeartbeatStarted",function(r){e.emit("serverHeartbeatStarted",r)}),s.on("serverHeartbeatSucceeded",function(r){e.emit("serverHeartbeatSucceeded",r)}),s.on("serverHearbeatFailed",function(r){e.emit("serverHearbeatFailed",r)}),s.on("serverClosed",function(r){e.emit("serverClosed",r)});var i=function(e){process.nextTick(function(){e.connect()})};i(s)}var o=r.replState.getAll({includeArbiters:!0}),a=o.length;if(0==o.length&&r.replState.state==CONNECTED)return e.emit("ha","end",{norepeat:t,id:n,state:r.replState?r.replState.toJSON():{}}),r.highAvailabilityProcessRunning=!1,void(t||setHaTimer(e,r));var l=function(s,i){return r.replState.state!=DESTROYED?s&&!s.isConnected()?i():void(s&&s.isConnected()&&s.command("admin.$cmd",{ismaster:!0},{monitoring:!0},function(o,l){if(r.replState.state==DESTROYED)return i();if(a-=1,o&&a>0)return i();if(o&&0==a)return e.emit("ha","end",{norepeat:t,id:n,state:r.replState?r.replState.toJSON():{}}),r.highAvailabilityProcessRunning=!1,i();var c=Object.keys(r.readPreferenceStrategies).length,d=l.result;if(r.logger.isDebug()&&r.logger.debug(f("[%s] monitoring process ismaster %s",r.id,JSON.stringify(d))),s.s.ismaster=d,!r.replState.update(d,s)&&!r.replState.contains(s))return s.destroy(),i();if(null!=o||!d.ismaster&&r.primary||!Array.isArray(d.hosts)){if(null==o&&!Array.isArray(d.hosts))return s.destroy(),i()}else{var u=d.hosts;Array.isArray(d.arbiters)&&(u=u.concat(d.arbiters.map(function(e){return{host:e,arbiter:!0}}))),Array.isArray(d.passives)&&(u=u.concat(d.passives)),processHosts(e,r,u)}if(0==c)return a>0?i():(e.emit("ha","end",{norepeat:t,id:n,state:r.replState?r.replState.toJSON():{}}),r.highAvailabilityProcessRunning=!1,i());if(0==a)for(var p in r.readPreferenceStrategies)r.readPreferenceStrategies[p].ha(e,r.replState,function(){return c-=1,0==c?(null==o&&d.ismaster&&Array.isArray(d.hosts)&&processHosts(e,r,d.hosts),e.emit("ha","end",{norepeat:t,id:n,state:r.replState?r.replState.toJSON():{}}),r.highAvailabilityProcessRunning=!1,i()):void 0});i()})):void 0};0==o.length&&(r.highAvailabilityProcessRunning=!1,checkAndEmitEvent(e,r,"fullsetup"),checkAndEmitEvent(e,r,"all"),t||setHaTimer(e,r));for(var c=o.length,d=0;d<o.length;d++)l(o[d],function(){c-=1,0==c&&(r.highAvailabilityProcessRunning=!1,checkAndEmitEvent(e,r,"fullsetup"),checkAndEmitEvent(e,r,"all"),t||setHaTimer(e,r))})}}},errorHandlerTemp=function(e,r,t){return function(t,n){return n.destroy(),r.logger.isInfo()&&r.logger.info(f("[%s] server %s disconnected",r.id,n.lastIsMaster()?n.lastIsMaster().me:n.name)),r.initialConnectionServers=r.initialConnectionServers.filter(function(e){return n.name!=e.name}),r.replState.removeConnectingServer(n.name),r.replState.state!=DESTROYED?(["error","close","timeout","connect","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"].forEach(function(e){n.removeAllListeners(e)}),addToListIfNotExist(r.disconnectedServers,n),0==r.initialConnectionServers&&r.replState.state==CONNECTING&&(r.secondaryOnlyConnectionAllowed&&!r.replState.isSecondaryConnected()&&!r.replState.isPrimaryConnected()||!r.secondaryOnlyConnectionAllowed&&!r.replState.isPrimaryConnected())&&(r.logger.isInfo()&&r.logger.info(f("[%s] no valid seed servers in list",r.id)),e.listeners("error").length>0)?e.emit("error",new MongoError("no valid seed servers in list")):void(r.disconnectedServers.length==r.seedlist.length&&r.replState.state==CONNECTING&&r.emitError&&e.listeners("error").length>0&&(r.logger.isInfo()&&r.logger.info(f("[%s] no valid seed servers in list",r.id)),e.listeners("error").length>0&&e.emit("error",new MongoError("no valid seed servers in list"))))):void 0}},connectHandler=function(e,r){return function(t){if(r.logger.isInfo()&&r.logger.info(f("[%s] connected to %s",r.id,t.name)),r.replState.state==DESTROYED)return t.destroy(!1,!1);r.initialConnectionServers=r.initialConnectionServers.filter(function(e){return t.name!=e.name});var n=(t.lastIsMaster(),function(){var n=t.lastIsMaster(),s=["error","close","timeout","connect","message","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"];if(s.forEach(function(e){t.removeAllListeners(e)}),r.replState.removeConnectingServer(t.name),r.replState.update(n,t)||r.replState.contains(t)){t.isConnected()&&(t.on("error",errorHandler(e,r)),t.on("close",closeHandler(e,r)),t.on("timeout",timeoutHandler(e,r)),t.on("serverOpening",function(r){e.emit("serverOpening",r)}),t.on("serverDescriptionChanged",function(r){e.emit("serverDescriptionChanged",r)}),t.on("serverHeartbeatStarted",function(r){e.emit("serverHeartbeatStarted",r)}),t.on("serverHeartbeatSucceeded",function(r){e.emit("serverHeartbeatSucceeded",r)}),t.on("serverHearbeatFailed",function(r){e.emit("serverHearbeatFailed",r)}),t.on("serverClosed",function(r){e.emit("serverClosed",r)}));var i=n.hosts;if(Array.isArray(n.arbiters)&&(i=i.concat(n.arbiters.map(function(e){return{host:e,arbiter:!0}}))),Array.isArray(n.passives)&&(i=i.concat(n.passives)),processHosts(e,r,i),0==r.initialConnectionServers.length&&0==r.replState.connectingServersCount()&&!r.replState.isPrimaryConnected()&&!r.secondaryOnlyConnectionAllowed&&r.replState.state==CONNECTING)return r.logger.isInfo()&&r.logger.info(f("[%s] no primary found in replicaset",r.id)),e.emit("error",new MongoError("no primary found in replicaset")),e.destroy();checkAndEmitEvent(e,r,"fullsetup"),checkAndEmitEvent(e,r,"all")}else if(t.destroy(),r.state==CONNECTING&&0==r.initialConnectionServers.length&&null==r.replState.primary&&0==r.replState.secondaries.length)return e.emit("error",new MongoError("no replicaset members found in seedlist"))});if(e.s.authInProgress&&e.s.authInProgressServers.push(t),0==r.credentials.length)return n();var s=function(e,r,t,n){return e.lastIsMaster()&&e.lastIsMaster().arbiterOnly?n():r>=t.length||0==t.length?n():void e.auth.apply(e,t[r].concat([function(i,o){return i?n(i):void s(e,r+1,t,n)}]))};s(t,0,r.credentials,function(e){return e?t.destroy():void n()})}},processHosts=function(e,r,t){if(r.replState.state!=DESTROYED&&Array.isArray(t))for(var n=0;n<t.length;n++){var s=t[n],i={};"object"==typeof s&&(s=s.host,i.arbiter=s.arbiter),r.replState.contains(s)||r.replState.isConnectingServer(s)||inInitialConnectingServers(e,r,s)||(r.logger.isInfo()&&r.logger.info(f("[%s] scheduled server %s for connection",r.id,s)),r.replState.addConnectingServer(s,s),connectToServer(e,r,s.split(":")[0],parseInt(s.split(":")[1],10),i))}},inInitialConnectingServers=function(e,r,t){for(var n=0;n<r.initialConnectionServers.length;n++)if(r.initialConnectionServers[n].name==t)return!0;return!1},connectToServer=function(e,r,t,n,s){s=s||{};var i=cloneOptions(r.options);if(i.host=t,i.port=n,i.reconnect=!1,i.readPreferenceStrategies=r.readPreferenceStrategies,r.tag&&(i.tag=r.tag),i.authProviders=r.authProviders,i.emitError=!0,i.inTopology=!0,i.size=i.size+1,i.monitoring=!0,i.topologyId=e.s.id,s.arbiter&&(i.size=1),e.s.replState.state!=DESTROYED){var o=new Server(i);o.on("ismaster",handleIsmaster(e)),o.once("error",errorHandlerTemp(e,r,"error")),o.once("close",errorHandlerTemp(e,r,"close")),o.once("timeout",errorHandlerTemp(e,r,"timeout")),o.once("connect",connectHandler(e,r)),o.on("serverOpening",function(r){e.emit("serverOpening",r)}),o.on("serverDescriptionChanged",function(r){e.emit("serverDescriptionChanged",r)}),o.on("serverHeartbeatStarted",function(r){e.emit("serverHeartbeatStarted",r)}),o.on("serverHeartbeatSucceeded",function(r){e.emit("serverHeartbeatSucceeded",r)}),o.on("serverHearbeatFailed",function(r){e.emit("serverHearbeatFailed",r)}),o.on("serverClosed",function(r){e.emit("serverClosed",r)});var a=function(r){process.nextTick(function(){e.s.replState.state!=DESTROYED&&r.connect()})};r.replState.addConnectingServer(o.name,t),a(o)}},addToListIfNotExist=function(e,r){var t=!1;if(null==r)return t;["error","close","timeout","connect","serverOpening","serverDescriptionChanged","serverHeartbeatStarted","serverHeartbeatSucceeded","serverHearbeatFailed","serverClosed"].forEach(function(e){r.removeAllListeners(e)});for(var n=0;n<e.length;n++)e[n].equals(r)&&(t=!0);return t||e.push(r),t},errorHandler=function(e,r){return function(t,n){if(n.destroy(),r.replState.removeConnectingServer(n.name),r.replState.state!=DESTROYED){r.logger.isInfo()&&r.logger.info(f("[%s] server %s errored out with %s",r.id,n.lastIsMaster()?n.lastIsMaster().me:n.name,JSON.stringify(t)));var s=addToListIfNotExist(r.disconnectedServers,n);s||e.emit("left",r.replState.remove(n),n),s&&r.emitError&&e.listeners("error").length>0&&e.emit("error",t,n)}}},timeoutHandler=function(e,r){return function(t,n){if(n.destroy(),r.replState.removeConnectingServer(n.name),r.replState.state!=DESTROYED){r.logger.isInfo()&&r.logger.info(f("[%s] server %s timed out",r.id,n.lastIsMaster()?n.lastIsMaster().me:n.name));var s=addToListIfNotExist(r.disconnectedServers,n);s||e.emit("left",r.replState.remove(n),n)}}},closeHandler=function(e,r){return function(t,n){if(n.destroy(),r.replState.removeConnectingServer(n.name),r.replState.state!=DESTROYED){r.logger.isInfo()&&r.logger.info(f("[%s] server %s closed",r.id,n.lastIsMaster()?n.lastIsMaster().me:n.name));var s=addToListIfNotExist(r.disconnectedServers,n);s||e.emit("left",r.replState.remove(n),n)}}},notMasterError=function(e){var r=e&&e.result?e.result:e;return r&&("not master"==r.err||"not master"==r.errmsg||r.$err&&-1!=r.$err.indexOf("not master or secondary")||r.$err&&-1!=r.$err.indexOf("not master and slaveOk=false")||"node is recovering"==r.errmsg)?!0:!1};module.exports=ReplSet;