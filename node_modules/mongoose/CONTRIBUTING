<h2 id="contributing-to-mongoose">Contributing to Mongoose</h2>

<p>If you have a question about Mongoose (not a bug report) please post it to either <a href="http://stackoverflow.com/questions/tagged/mongoose">StackOverflow</a>, or on <a href="https://gitter.im/Automattic/mongoose?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge">Gitter</a></p>

<h3 id="reporting-bugs">Reporting bugs</h3>

<ul>
<li>Before opening a new issue, look for existing <a href="https://github.com/Automattic/mongoose/issues">issues</a> to avoid duplication. If the issue does not yet exist, <a href="https://github.com/Automattic/mongoose/issues/new">create one</a>.

<ul>
<li>Please post any relevant code samples, preferably a standalone script that
reproduces your issue. Do <strong>not</strong> describe your issue in prose, show your
code.</li>
<li>If the bug involves an error, please post the stack trace.</li>
<li>Please post the version of mongoose and mongodb that you&rsquo;re using.</li>
<li>Please write bug reports in JavaScript (ES5 or ES2015), not coffeescript, typescript, etc.</li>
</ul></li>
</ul>

<h3 id="requesting-new-features">Requesting new features</h3>

<ul>
<li>Before opening a new issue, look for existing <a href="https://github.com/learnboost/mongoose/issues">issues</a> to avoid duplication. If the issue does not yet exist, <a href="https://github.com/learnboost/mongoose/issues/new">create one</a>.</li>
<li>Please describe a use case for it</li>
<li>it would be ideal to include test cases as well</li>
</ul>

<h3 id="fixing-bugs-adding-features">Fixing bugs / Adding features</h3>

<ul>
<li>Before starting to write code, look for existing <a href="https://github.com/learnboost/mongoose/issues">issues</a>. That way you avoid working on something that might not be of interest or that has been addressed already in a different branch. You can create a new issue <a href="https://github.com/learnboost/mongoose/issues/new">here</a>.

<ul>
<li><em>The source of this project is written in javascript, not coffeescript, therefore your bug reports should be written in javascript</em>.</li>
</ul></li>
<li>Fork the <a href="https://github.com/Automattic/mongoose">repo</a> <em>or</em> for small documentation changes, navigate to the source on github and click the <a href="https://github.com/blog/844-forking-with-the-edit-button">Edit</a> button.</li>
<li>Follow the general coding style of the rest of the project:

<ul>
<li>2 space tabs</li>
<li>no trailing whitespace</li>
<li>inline documentation for new methods, class members, etc.</li>
<li>1 space between conditionals/functions, and their parenthesis and curly braces</li>
<li><code class="prettyprint">if (..) {</code></li>
<li><code class="prettyprint">for (..) {</code></li>
<li><code class="prettyprint">while (..) {</code></li>
<li><code class="prettyprint">function(err) {</code></li>
</ul></li>
<li>Write tests and make sure they pass (tests are in the <a href="https://github.com/Automattic/mongoose/tree/master/test">test</a> directory).</li>
</ul>

<h3 id="running-the-tests">Running the tests</h3>

<ul>
<li>Open a terminal and navigate to the root of the project</li>
<li>execute <code class="prettyprint">npm install</code> to install the necessary dependencies</li>
<li>start a mongodb instance on port 27017 if one isn&rsquo;t running already. <code class="prettyprint">mongod --dbpath &lt;path to store data&gt; --port 27017</code></li>
<li>execute <code class="prettyprint">npm test</code> to run the tests (we&rsquo;re using <a href="http://mochajs.org/">mocha</a>)

<ul>
<li>or to execute a single test <code class="prettyprint">npm test -- -g &#39;some regexp that matches the test description&#39;</code></li>
<li>any mocha flags can be specified with <code class="prettyprint">-- &lt;mocha flags here&gt;</code></li>
<li>For example, you can use <code class="prettyprint">npm test -- -R spec</code> to use the spec reporter, rather than the dot reporter (by default, the test output looks like a bunch of dots)</li>
</ul></li>
</ul>

<h3 id="documentation">Documentation</h3>

<p>To contribute to the <a href="http://mongoosejs.com/docs/api.html">API documentation</a> just make your changes to the inline documentation of the appropriate <a href="https://github.com/Automattic/mongoose/tree/master/lib">source code</a> in the master branch and submit a <a href="https://help.github.com/articles/using-pull-requests/">pull request</a>. You might also use the github <a href="https://github.com/blog/844-forking-with-the-edit-button">Edit</a> button.</p>

<p>To contribute to the <a href="http://mongoosejs.com/docs/guide.html">guide</a> or <a href="http://mongoosejs.com/docs/index.html">quick start</a> docs, make your changes to the appropriate <code class="prettyprint">.jade</code> files in the <a href="https://github.com/Automattic/mongoose/tree/master/docs">docs</a> directory of the master branch and submit a pull request. Again, the <a href="https://github.com/blog/844-forking-with-the-edit-button">Edit</a> button might work for you here.</p>

<p>If you&rsquo;d like to preview your documentation changes, first commit your changes to your local master branch, then execute <code class="prettyprint">make docs</code> from the project root, which switches to the gh-pages branch, merges from the master branch and builds all the static pages for you. Now execute <code class="prettyprint">node static.js</code> from the project root which will launch a local webserver where you can browse the documentation site locally. If all looks good, submit a <a href="https://help.github.com/articles/using-pull-requests/">pull request</a> to the master branch with your changes.</p>

<h3 id="plugins-website">Plugins website</h3>

<p>The <a href="http://plugins.mongoosejs.io/">plugins</a> site is also an <a href="https://github.com/aheckmann/mongooseplugins">open source project</a> that you can get involved with. Feel free to fork and improve it as well!</p>
