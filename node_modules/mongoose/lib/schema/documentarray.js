/*!
 * Module dependencies.
 */
function DocumentArray(t,r,e){function o(){Subdocument.apply(this,arguments)}o.prototype=Object.create(Subdocument.prototype),o.prototype.$__setSchema(r),o.schema=r;for(var a in r.methods)o.prototype[a]=r.methods[a];for(a in r.statics)o[a]=r.statics[a];o.options=e,ArrayType.call(this,t,o,e),this.schema=r,this.$isMongooseDocumentArray=!0;var n=this.path,i=this.defaultValue;"defaultValue"in this&&void 0===i||this["default"](function(){var t=i.call(this);return Array.isArray(t)||(t=[t]),new MongooseDocumentArray(t,n,this)})}/*!
 * Scopes paths selected in a query to this array.
 * Necessary for proper default application of subdocument values.
 *
 * @param {DocumentArray} array - the array to scope `fields` paths
 * @param {Object|undefined} fields - the root fields selected in the query
 * @param {Boolean|undefined} init - if we are being created part of a query result
 */
function scopePaths(t,r,e){if(!e||!r)return void 0;for(var o,a,n=t.path+".",i=Object.keys(r),s=i.length,c={};s--;)a=i[s],0===a.indexOf(n)&&(o||(o=!0),c[a.substring(n.length)]=r[a]);return o&&c||void 0}var ArrayType=require("./array"),CastError=require("../error/cast"),MongooseDocumentArray=require("../types/documentarray"),SchemaType=require("../schematype"),Subdocument=require("../types/embedded"),util=require("util");DocumentArray.schemaName="DocumentArray",/*!
 * Inherits from ArrayType.
 */
DocumentArray.prototype=Object.create(ArrayType.prototype),DocumentArray.prototype.constructor=DocumentArray,DocumentArray.prototype.doValidate=function(t,r,e,o){var a=this;SchemaType.prototype.doValidate.call(this,t,function(e){function n(t){t&&(i=t),--s||r(i)}if(e)return r(e);var i,s=t&&t.length;if(!s)return r();if(o&&o.updateValidator)return r();for(var c=0,u=s;u>c;++c){var y=t[c];y?(y instanceof Subdocument||(y=t[c]=new a.casterConstructor(y,t,void 0,void 0,c)),y.$__original_validate?y.$__original_validate({__noPromise:!0},n):y.validate({__noPromise:!0},n)):--s||r(i)}},e)},DocumentArray.prototype.doValidateSync=function(t,r){var e=SchemaType.prototype.doValidateSync.call(this,t,r);if(e)return e;var o=t&&t.length,a=null;if(o){for(var n=0,i=o;i>n&&!a;++n){var s=t[n];if(s){var c=s.validateSync();c&&(a=c)}}return a}},DocumentArray.prototype.cast=function(t,r,e,o,a){var n,i,s;if(!Array.isArray(t))return r&&e&&r.markModified(this.path),this.cast([t],r,e,o);if(!(t&&t.isMongooseDocumentArray||a&&a.skipDocumentArrayCast)&&(t=new MongooseDocumentArray(t,this.path,r),o&&o._handlers))for(var c in o._handlers)r.removeListener(c,o._handlers[c]);for(s=t.length;s--;)if(t[s]&&(t[s]instanceof Subdocument&&t[s].schema!==this.casterConstructor.schema&&(t[s]=t[s].toObject({virtuals:!1})),!(t[s]instanceof Subdocument)&&t[s]))if(e)n||(n=scopePaths(this,r.$__.selected,e)),i=new this.casterConstructor(null,t,!0,n,s),t[s]=i.init(t[s]);else{try{i=o.id(t[s]._id)}catch(u){}if(o&&i)i.set(t[s]),t[s]=i;else try{i=new this.casterConstructor(t[s],t,void 0,void 0,s),t[s]=i}catch(y){var h=util.inspect(t[s]);throw new CastError("embedded",h,t._path,y)}}return t},/*!
 * Module exports.
 */
module.exports=DocumentArray;