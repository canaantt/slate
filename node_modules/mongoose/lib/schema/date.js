/*!
 * Module requirements.
 */
function SchemaDate(t,e){SchemaType.call(this,t,e,"Date")}/*!
 * Date Query casting.
 *
 * @api private
 */
function handleSingle(t){return this.cast(t)}var MongooseError=require("../error"),utils=require("../utils"),SchemaType=require("../schematype"),CastError=SchemaType.CastError;SchemaDate.schemaName="Date",/*!
 * Inherits from SchemaType.
 */
SchemaDate.prototype=Object.create(SchemaType.prototype),SchemaDate.prototype.constructor=SchemaDate,SchemaDate.prototype.expires=function(t){return this._index&&"Object"===this._index.constructor.name||(this._index={}),this._index.expires=t,utils.expires(this._index),this},SchemaDate.prototype.checkRequired=function(t){return t instanceof Date},SchemaDate.prototype.min=function(t,e){if(this.minValidator&&(this.validators=this.validators.filter(function(t){return t.validator!==this.minValidator},this)),t){var a=e||MongooseError.messages.Date.min;a=a.replace(/{MIN}/,t===Date.now?"Date.now()":this.cast(t).toString());var r=this;this.validators.push({validator:this.minValidator=function(e){var a=t===Date.now?t():r.cast(t);return null===e||e.valueOf()>=a.valueOf()},message:a,type:"min",min:t})}return this},SchemaDate.prototype.max=function(t,e){if(this.maxValidator&&(this.validators=this.validators.filter(function(t){return t.validator!==this.maxValidator},this)),t){var a=e||MongooseError.messages.Date.max;a=a.replace(/{MAX}/,t===Date.now?"Date.now()":this.cast(t).toString());var r=this;this.validators.push({validator:this.maxValidator=function(e){var a=t===Date.now?t():r.cast(t);return null===e||e.valueOf()<=a.valueOf()},message:a,type:"max",max:t})}return this},SchemaDate.prototype.cast=function(t){if(null===t||void 0===t||""===t)return null;if(t instanceof Date)return t;var e;if("boolean"==typeof t)throw new CastError("date",t,this.path);if(t instanceof Number||"number"==typeof t||String(t)==Number(t)?e=new Date(Number(t)):t.valueOf&&(e=new Date(t.valueOf())),!isNaN(e.valueOf()))return e;throw new CastError("date",t,this.path)},SchemaDate.prototype.$conditionalHandlers=utils.options(SchemaType.prototype.$conditionalHandlers,{$gt:handleSingle,$gte:handleSingle,$lt:handleSingle,$lte:handleSingle}),SchemaDate.prototype.castForQuery=function(t,e){var a;if(2!==arguments.length)return this.cast(t);if(a=this.$conditionalHandlers[t],!a)throw new Error("Can't use "+t+" with Date.");return a.call(this,e)},/*!
 * Module exports.
 */
module.exports=SchemaDate;