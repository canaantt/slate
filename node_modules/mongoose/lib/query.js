/*!
 * Module dependencies.
 */
function Query(t,e,r,i){if(this._mongooseOptions||(this._mongooseOptions={}),e)for(var s=Object.keys(e),o=0;o<s.length;++o){var n=s[o];this._mongooseOptions[n]=e[n]}if(i&&(this.mongooseCollection=i),r&&(this.model=r,this.schema=r.schema),this.model&&this.model._mapreduce&&this.lean(),mquery.call(this,this.mongooseCollection,e),t&&this.find(t),this.schema){var a={useErrorHandlers:!0};this._count=this.model.hooks.createWrapper("count",Query.prototype._count,this,a),this._execUpdate=this.model.hooks.createWrapper("update",Query.prototype._execUpdate,this,a),this._find=this.model.hooks.createWrapper("find",Query.prototype._find,this,a),this._findOne=this.model.hooks.createWrapper("findOne",Query.prototype._findOne,this,a),this._findOneAndRemove=this.model.hooks.createWrapper("findOneAndRemove",Query.prototype._findOneAndRemove,this,a),this._findOneAndUpdate=this.model.hooks.createWrapper("findOneAndUpdate",Query.prototype._findOneAndUpdate,this,a)}}/*!
 * hydrates many documents
 *
 * @param {Model} model
 * @param {Array} docs
 * @param {Object} fields
 * @param {Query} self
 * @param {Array} [pop] array of paths used in population
 * @param {Function} callback
 */
function completeMany(t,e,r,i,s,o){function n(t){return t?o(t):void(--u||o(null,a))}for(var a=[],u=e.length,p=u,c=s?{populated:s}:void 0,l=0;p>l;++l)a[l]=helpers.createModel(t,e[l],r),a[l].init(e[l],c,n)}/*!
 * hydrates a document
 *
 * @param {Model} model
 * @param {Document} doc
 * @param {Object} res 3rd parameter to callback
 * @param {Object} fields
 * @param {Query} self
 * @param {Array} [pop] array of paths used in population
 * @param {Function} callback
 */
function completeOne(t,e,r,i,s,o,n){var a=o?{populated:o}:void 0,u=helpers.createModel(t,e,i);u.init(e,a,function(t){return t?n(t):r?n(null,u,r):void n(null,u)})}/*!
 * If the model is a discriminator type and not root, then add the key & value to the criteria.
 */
function prepareDiscriminatorCriteria(t){if(t&&t.model&&t.model.schema){var e=t.model.schema;e&&e.discriminatorMapping&&!e.discriminatorMapping.isRoot&&(t._conditions[e.discriminatorMapping.key]=e.discriminatorMapping.value)}}/*!
 * The mongodb driver 1.3.23 only supports the nested array sort
 * syntax. We must convert it or sorting findAndModify will not work.
 */
function convertSortToArray(t){if(!Array.isArray(t.sort)&&utils.isObject(t.sort)){var e=[];for(var r in t.sort)utils.object.hasOwnProperty(t.sort,r)&&e.push([r,t.sort[r]]);t.sort=e}}/*!
 * castQuery
 * @api private
 */
function castQuery(t){try{return t.cast(t.model)}catch(e){return e}}/*!
 * castDoc
 * @api private
 */
function castDoc(t,e){try{return t._castUpdate(t._update,e)}catch(r){return r}}var PromiseProvider=require("./promise_provider"),QueryCursor=require("./querycursor"),QueryStream=require("./querystream"),StrictModeError=require("./error/strict"),cast=require("./cast"),helpers=require("./queryhelpers"),mquery=require("mquery"),readPref=require("./drivers").ReadPreference,setDefaultsOnInsert=require("./services/setDefaultsOnInsert"),updateValidators=require("./services/updateValidators"),util=require("util"),utils=require("./utils");/*!
 * inherit mquery
 */
Query.prototype=new mquery,Query.prototype.constructor=Query,Query.base=mquery.prototype,Query.use$geoWithin=mquery.use$geoWithin,Query.prototype.toConstructor=function(){var t=this.model,e=this.mongooseCollection,r=function(s,o){return this instanceof r?(this._mongooseOptions=utils.clone(i._mongooseOptions),void Query.call(this,s,o||null,t,e)):new r(s,o)};util.inherits(r,Query);var i=r.prototype;return i.options={},i.setOptions(this.options),i.op=this.op,i._conditions=utils.clone(this._conditions),i._fields=utils.clone(this._fields),i._update=utils.clone(this._update),i._path=this._path,i._distinct=this._distinct,i._collection=this._collection,i._mongooseOptions=this._mongooseOptions,r},Query.prototype.read=function t(e,r){var t=readPref.call(readPref,e,r);return Query.base.read.call(this,t)},Query.prototype.setOptions=function(t,e){return e?(this._mongooseOptions=t&&utils.clone(t)||{},this.options=t||{},"populate"in t&&this.populate(this._mongooseOptions),this):t&&"Object"===t.constructor.name?Query.base.setOptions.call(this,t):this},Query.prototype.getQuery=function(){return this._conditions},Query.prototype.getUpdate=function(){return this._update},Query.prototype._updateForExec=function(){for(var t=utils.clone(this._update,{retainKeyOrder:!0}),e=Object.keys(t),r=e.length,i={};r--;){var s=e[r];this.options.overwrite?i[s]=t[s]:"$"!==s[0]?(i.$set||(t.$set?i.$set=t.$set:i.$set={}),i.$set[s]=t[s],e.splice(r,1),~e.indexOf("$set")||e.push("$set")):"$set"===s?i.$set||(i[s]=t[s]):i[s]=t[s]}return this._compiledUpdate=i,i},Query.prototype._optionsForExec=function(t){var e=Query.base._optionsForExec.call(this);return delete e.populate,(t=t||this.model)?("safe"in e||!t.schema.options.safe||(e.safe=t.schema.options.safe),"readPreference"in e||!t.schema.options.read||(e.readPreference=t.schema.options.read),e):e},Query.prototype.lean=function(t){return this._mongooseOptions.lean=arguments.length?!!t:!0,this},Query.prototype._find=function(t){if(this._castError)return t(this._castError),this;this._applyPaths(),this._fields=this._castFields(this._fields);var e=this._fieldsForExec(),r=this._mongooseOptions,i=this,s=function(s,o){if(s)return t(s);if(0===o.length)return t(null,o);if(!r.populate)return r.lean===!0?t(null,o):completeMany(i.model,o,e,i,null,t);var n=helpers.preparePopulationOptionsMQ(i,r);n.__noPromise=!0,i.model.populate(o,n,function(s,o){return s?t(s):r.lean===!0?t(null,o):completeMany(i.model,o,e,i,n,t)})};return Query.base.find.call(this,{},s)},Query.prototype.find=function(t,e){"function"==typeof t&&(e=t,t={}),t=utils.toObject(t),mquery.canMerge(t)&&this.merge(t),prepareDiscriminatorCriteria(this);try{this.cast(this.model),this._castError=null}catch(r){this._castError=r}return e?(this._find(e),this):Query.base.find.call(this)},Query.prototype._findOne=function(t){if(this._castError)return t(this._castError);this._applyPaths(),this._fields=this._castFields(this._fields);var e=this._mongooseOptions,r=this._fieldsForExec(),i=this;Query.base.findOne.call(i,{},function(s,o){if(s)return t(s);if(!o)return t(null,null);if(!e.populate)return e.lean===!0?t(null,o):completeOne(i.model,o,null,r,i,null,t);var n=helpers.preparePopulationOptionsMQ(i,e);n.__noPromise=!0,i.model.populate(o,n,function(s,o){return s?t(s):e.lean===!0?t(null,o):completeOne(i.model,o,null,r,i,n,t)})})},Query.prototype.findOne=function(t,e,r,i){"function"==typeof t?(i=t,t=null,e=null,r=null):"function"==typeof e?(i=e,r=null,e=null):"function"==typeof r&&(i=r,r=null),t=utils.toObject(t),this.op="findOne",r&&this.setOptions(r),e&&this.select(e),mquery.canMerge(t)&&this.merge(t),prepareDiscriminatorCriteria(this);try{this.cast(this.model),this._castError=null}catch(s){this._castError=s}return i?(this._findOne(i),this):Query.base.findOne.call(this)},Query.prototype._count=function(t){try{this.cast(this.model)}catch(e){return process.nextTick(function(){t(e)}),this}var r=this._conditions,i=this._optionsForExec();this._collection.count(r,i,utils.tick(t))},Query.prototype.count=function(t,e){return"function"==typeof t&&(e=t,t=void 0),mquery.canMerge(t)&&this.merge(t),this.op="count",e?(this._count(e),this):this},Query.prototype.distinct=function(t,e,r){r||("function"==typeof e?(r=e,e=void 0):"function"==typeof t&&(r=t,t=void 0,e=void 0)),e=utils.toObject(e),mquery.canMerge(e)&&this.merge(e);try{this.cast(this.model)}catch(i){if(!r)throw i;return r(i),this}return Query.base.distinct.call(this,{},t,r)},Query.prototype.sort=function(t){var e={};if(arguments.length>1)throw new Error("sort() only takes 1 Argument");if(Array.isArray(t))for(var r=0;r<t.length;r++){if(!Array.isArray(t[r]))throw new Error("Invalid sort() argument.");e[t[r][0]]=t[r][1]}else e=t;return Query.base.sort.call(this,e)},Query.prototype.remove=function(t,e){"function"==typeof t&&(e=t,t=null);var r="function"==typeof e;try{this.cast(this.model)}catch(i){return r?process.nextTick(e.bind(null,i)):this}return Query.base.remove.call(this,t,e)},Query.prototype.findOneAndUpdate=function(t,e,r,i){switch(this.op="findOneAndUpdate",this._validate(),arguments.length){case 3:"function"==typeof r&&(i=r,r={});break;case 2:"function"==typeof e&&(i=e,e=t,t=void 0),r=void 0;break;case 1:"function"==typeof t?(i=t,t=r=e=void 0):(e=t,t=r=void 0)}return mquery.canMerge(t)&&this.merge(t),e&&this._mergeUpdate(e),r&&this.setOptions(r),i?this._findOneAndUpdate(i):this},Query.prototype._findOneAndUpdate=function(t){return this._findAndModify("update",t),this},Query.prototype.findOneAndRemove=function(t,e,r){switch(this.op="findOneAndRemove",this._validate(),arguments.length){case 2:"function"==typeof e&&(r=e,e={});break;case 1:"function"==typeof t&&(r=t,t=void 0,e=void 0)}return mquery.canMerge(t)&&this.merge(t),e&&this.setOptions(e),r?(this._findOneAndRemove(r),this):this},Query.prototype._findOneAndRemove=function(t){Query.base.findOneAndRemove.call(this,t)},Query.prototype._findAndModify=function(t,e){if("function"!=typeof e)throw new Error("Expected callback in _findAndModify");var r,i,s,o,n,a=this.model,u=a.schema,p=this;if(r=castQuery(this),r instanceof Error)return e(r);if(o=this._optionsForExec(a),"strict"in o&&(this._mongooseOptions.strict=o.strict),"remove"===t)o.remove=!0;else{if("new"in o||(o["new"]=!1),"upsert"in o||(o.upsert=!1),(o.upsert||o["new"])&&(o.remove=!1),i=castDoc(this,o.overwrite),i=setDefaultsOnInsert(this,u,i,o)){if(i instanceof Error)return e(i);i.$set&&0===Object.keys(i.$set).length&&delete i.$set}else{if(!o.upsert)return this.findOne(e);var c=utils.clone(r);delete c._id,i={$set:c}}n=updateValidators(this,u,i,o)}this._applyPaths();var l=this._mongooseOptions;if(this._fields&&(s=utils.clone(this._fields),o.fields=this._castFields(s),o.fields instanceof Error))return e(o.fields);o.sort&&convertSortToArray(o);var h=function(t,r,i){if(t)return e(t);if(!r||utils.isObject(r)&&0===Object.keys(r).length)return o.passRawResult?e(null,null,i):e(null,null);if(o.passRawResult||(i=null),!l.populate)return l.lean===!0?e(null,r):completeOne(p.model,r,i,s,p,null,e);var n=helpers.preparePopulationOptionsMQ(p,l);n.__noPromise=!0,p.model.populate(r,n,function(t,r){return t?e(t):l.lean===!0?e(null,r):completeOne(p.model,r,i,s,p,n,e)})};if(o.runValidators&&n){var d=function(t){return t?e(t):void p._collection.findAndModify(r,i,o,utils.tick(function(t,e){return h(t,e?e.value:e,e)}))};try{n(d)}catch(f){e(f)}}else this._collection.findAndModify(r,i,o,utils.tick(function(t,e){return h(t,e?e.value:e,e)}));return this},Query.prototype._mergeUpdate=function(t){this._update||(this._update={}),t instanceof Query?t._update&&utils.mergeClone(this._update,t._update):utils.mergeClone(this._update,t)},Query.prototype._execUpdate=function(t){var e,r,i=this.model.schema,s=this._conditions,o=this._update,n=this.options;if(this._castError)return t(this._castError),this;if(this.options.runValidators){r=this,e=updateValidators(this,i,o,n);var a=function(e){return e?t(e):void Query.base.update.call(r,s,o,n,t)};try{e(a)}catch(u){process.nextTick(function(){t(u)})}return this}return Query.base.update.call(this,s,o,n,t),this},Query.prototype.update=function(t,e,r,i){"function"==typeof r?(i=r,r=null):"function"==typeof e?(i=e,e=t,t={},r=null):"function"==typeof t?(i=t,t=void 0,e=void 0,r=void 0):"object"!=typeof t||e||r||i||(e=t,t=void 0,r=void 0,i=void 0),t=utils.toObject(t);var s=i;if(s){if("function"!=typeof s)throw new Error("Invalid callback() argument.");i=function(t,e){s(t,e?e.result:{ok:0,n:0,nModified:0})}}r&&"strict"in r&&(this._mongooseOptions.strict=r.strict),!e&&this._update&&(e=this._updateForExec()),mquery.canMerge(t)&&this.merge(t);var o=castQuery(this);if(o instanceof Error){if(this._castError=o,i)return i(o),this;if(!r||!r.dontThrowCastError)throw o}var n;try{var a={retainKeyOrder:!0};r&&r.minimize&&(a.minimize=!0),n=this._castUpdate(utils.clone(e,a),r&&r.overwrite)}catch(u){if(this._castError=o,i)return i(u),this;if(!r||!r.dontThrowCastError)throw u}return(n=setDefaultsOnInsert(this,this.schema,n,r))?(utils.isObject(r)&&this.setOptions(r),this._update||(this._update=n),i?this._execUpdate(i):Query.base.update.call(this,o,n,r,i)):(this.op="update",i&&i(null),this)},Query.prototype.exec=function(t,e){var r=PromiseProvider.get(),i=this;return"function"==typeof t?(e=t,t=null):"string"==typeof t&&(this.op=t),new r.ES6(function(t,r){return i.op?void i[i.op].call(i,function(i,s){return i?(e&&e(i),void r(i)):(e&&e.apply(null,arguments),void t(s))}):(e&&e(null,void 0),void t())})},Query.prototype.then=function(t,e){return this.exec().then(t,e)},Query.prototype["catch"]=function(t){return this.exec().then(null,t)},Query.prototype._getSchema=function(t){return this.model._getSchema(t)};/*!
 * These operators require casting docs
 * to real Documents for Update operations.
 */
var castOps={$push:1,$pushAll:1,$addToSet:1,$set:1},numberOps={$pop:1,$unset:1,$inc:1};Query.prototype._castUpdate=function(t,e){if(!t)return void 0;for(var r,i,s=Object.keys(t),o=s.length,n={},a=!1;o--;){var u=s[o];"$"===u[0]||e?"$set"===u?n.$set||(n[u]=t[u]):n[u]=t[u]:(n.$set||(t.$set?n.$set=t.$set:n.$set={}),n.$set[u]=t[u],s.splice(o,1),~s.indexOf("$set")||s.push("$set"))}for(o=s.length,e&&(r=!0);o--;)if(u=s[o],i=n[u],a=a||"$"===u.charAt(0),!i||"Object"!==i.constructor.name||e&&!a){if(!e||"Object"!==n.constructor.name){var p="Invalid atomic update value for "+u+". Expected an object, received "+typeof i;throw new Error(p)}this._walkUpdatePath(n,"$set")}else r|=this._walkUpdatePath(i,u);return r&&n},Query.prototype._walkUpdatePath=function(t,e,r){for(var i,s,o,n=r?r+".":"",a=Object.keys(t),u=a.length,p=!1,c=this.schema.options.useNestedStrict;u--;)if(s=a[u],o=t[s],o&&"Object"===o.constructor.name)if(i=this._getSchema(n+s),i&&i.caster&&e in castOps)p=!0,"$each"in o?(t[s]={$each:this._castUpdateVal(i,o.$each,e)},null!=o.$slice&&(t[s].$slice=0|o.$slice),o.$sort&&(t[s].$sort=o.$sort),(o.$position||0===o.$position)&&(t[s].$position=o.$position)):t[s]=this._castUpdateVal(i,o,e);else if("$currentDate"===e)t[s]=this._castUpdateVal(i,o,e),p=!0;else if("$set"===e&&i)t[s]=this._castUpdateVal(i,o,e),p=!0;else{var l=n+s,h=this.model.schema._getPathType(l),d="strict"in this._mongooseOptions?this._mongooseOptions.strict:(c&&h.schema||this.schema).options.strict;if("undefined"===h.pathType){if("throw"===d)throw new StrictModeError(l);if(d){delete t[s];continue}}p|=this._walkUpdatePath(o,e,n+s)||utils.isObject(o)&&0===Object.keys(o).length}else{var f="$each"===s||"$or"===s||"$and"===s?r:n+s;i=this._getSchema(f);var y=this.model.schema._getPathType(f),m="strict"in this._mongooseOptions?this._mongooseOptions.strict:(c&&y.schema||this.schema).options.strict,_=m&&!i&&!/real|nested/.test(y.pathType);if(_){if("throw"===m)throw new StrictModeError(n+s);delete t[s]}else{if("$rename"===e){p=!0;continue}p=!0,t[s]=this._castUpdateVal(i,o,e,s)}}return p},Query.prototype._castUpdateVal=function(t,e,r,i){if(!t)return r in numberOps?Number(e):e;var s=t.caster&&r in castOps&&(utils.isObject(e)||Array.isArray(e));if(s){var o=t.cast(e);e=Array.isArray(e)?o:t.caster.$isSingleNested?o:o[0]}return r in numberOps?"$inc"===r?t.castForQuery(e):Number(e):"$currentDate"===r?"object"==typeof e?{$type:e.$type}:Boolean(e):/^\$/.test(i)?t.castForQuery(i,e):t.castForQuery(e)},Query.prototype.populate=function(){var t=utils.populate.apply(null,arguments),e=this._mongooseOptions;utils.isObject(e.populate)||(e.populate={});for(var r=e.populate,i=0;i<t.length;++i){var s=t[i].path;r[s]&&r[s].populate&&t[i].populate&&(t[i].populate=r[s].populate.concat(t[i].populate)),r[t[i].path]=t[i]}return this},Query.prototype.cast=function(t,e){return e||(e=this._conditions),cast(t.schema,e)},Query.prototype._castFields=function(t){var e,r,i,s,o,n;if(t)for(i=Object.keys(t),r=[],n=i.length;n--;)s=i[n],t[s].$elemMatch&&(e||(e={}),e[s]=t[s],r.push(s));if(e){try{o=this.cast(this.model,e)}catch(a){return a}for(n=r.length;n--;)s=r[n],t[s]=o[s]}return t},Query.prototype._applyPaths=function(){var t,e,r,i=this._fields;if(i)for(e=Object.keys(i),r=e.length;r--;)if("+"!==e[r][0]){t=0===i[e[r]];break}var s=[],o=[],n=[],a=function(r,n){if("boolean"==typeof n.selected){var a="+"+r;if(i&&a in i)return delete i[a],void(t===!1&&e.length>1&&!~e.indexOf(r)&&(i[r]=1));var u=r.split(".")[0];~o.indexOf(u)||(n.selected?s:o).push(r)}},u=function(t,e){e||(e=""),~n.indexOf(t)||(n.push(t),t.eachPath(function(t,r){e&&(t=e+"."+t),a(t,r),r.schema&&u(r.schema,t)}))};switch(u(this.model.schema),t){case!0:o.length&&this.select("-"+o.join(" -"));break;case!1:this.model.schema&&this.model.schema.paths._id&&this.model.schema.paths._id.options&&this.model.schema.paths._id.options.select===!1&&s.push("-_id"),s.length&&this.select(s.join(" "));break;case void 0:o.length&&this.select("-"+o.join(" -"))}n=o=s=e=i=null},Query.prototype.stream=function(t){return this._applyPaths(),this._fields=this._castFields(this._fields),new QueryStream(this,t)},Query.prototype.stream=util.deprecate(Query.prototype.stream,"Mongoose: Query.prototype.stream() is deprecated in mongoose >= 4.5.0, use Query.prototype.cursor() instead"),Query.prototype.cursor=function(t){return this._applyPaths(),this._fields=this._castFields(this._fields),t&&this.setOptions(t),new QueryCursor(this,this.options)},Query.prototype.maxscan=Query.base.maxScan,Query.prototype.tailable=function(t,e){if(t&&"Object"===t.constructor.name&&(e=t,t=!0),void 0===t&&(t=!0),e&&"object"==typeof e)for(var r in e)"awaitdata"===r?this.options[r]=!!e[r]:this.options[r]=e[r];return Query.base.tailable.call(this,t)},/*!
 * Overwriting mquery is needed to support a couple different near() forms found in older
 * versions of mongoose
 * near([1,1])
 * near(1,1)
 * near(field, [1,2])
 * near(field, 1, 2)
 * In addition to all of the normal forms supported by mquery
 */
Query.prototype.near=function(){var t=[],e=this._mongooseOptions.nearSphere;if(1===arguments.length)if(Array.isArray(arguments[0]))t.push({center:arguments[0],spherical:e});else if("string"==typeof arguments[0])t.push(arguments[0]);else{if(!utils.isObject(arguments[0]))throw new TypeError("invalid argument");"boolean"!=typeof arguments[0].spherical&&(arguments[0].spherical=e),t.push(arguments[0])}else if(2===arguments.length)if("number"==typeof arguments[0]&&"number"==typeof arguments[1])t.push({center:[arguments[0],arguments[1]],spherical:e});else if("string"==typeof arguments[0]&&Array.isArray(arguments[1]))t.push(arguments[0]),t.push({center:arguments[1],spherical:e});else{if("string"!=typeof arguments[0]||!utils.isObject(arguments[1]))throw new TypeError("invalid argument");t.push(arguments[0]),"boolean"!=typeof arguments[1].spherical&&(arguments[1].spherical=e),t.push(arguments[1])}else{if(3!==arguments.length)throw new TypeError("invalid argument");if("string"!=typeof arguments[0]||"number"!=typeof arguments[1]||"number"!=typeof arguments[2])throw new TypeError("invalid argument");t.push(arguments[0]),t.push({center:[arguments[1],arguments[2]],spherical:e})}return Query.base.near.apply(this,t)},Query.prototype.nearSphere=function(){return this._mongooseOptions.nearSphere=!0,this.near.apply(this,arguments),this},/*!
 * this is needed to support the mongoose syntax of:
 * box(field, { ll : [x,y], ur : [x2,y2] })
 * box({ ll : [x,y], ur : [x2,y2] })
 */
Query.prototype.box=function(t,e){return!Array.isArray(t)&&utils.isObject(t)&&(e=t.ur,t=t.ll),Query.base.box.call(this,t,e)},Query.prototype.center=Query.base.circle,Query.prototype.centerSphere=function(){arguments[0]&&"Object"===arguments[0].constructor.name&&(arguments[0].spherical=!0),arguments[1]&&"Object"===arguments[1].constructor.name&&(arguments[1].spherical=!0),Query.base.circle.apply(this,arguments)},/*!
 * Export
 */
module.exports=Query;