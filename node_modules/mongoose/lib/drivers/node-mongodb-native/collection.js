/*!
 * Module dependencies.
 */
function NativeCollection(){this.collection=null,MongooseCollection.apply(this,arguments)}/*!
 * Copy the collection methods and make them subject to queues
 */
function iter(t){NativeCollection.prototype[t]=function(){if(this.buffer)return void this.addQueue(t,arguments);var o=this.collection,e=arguments,n=this,i=n.conn.base.options.debug;i&&("function"==typeof i?i.apply(i,[n.name,t].concat(utils.args(e,0,e.length-1))):this.$print(n.name,t,e));try{return o[t].apply(o,e)}catch(r){if(!(e.length>0&&"function"==typeof e[e.length-1]))throw r;e[e.length-1](r)}}}/*!
 * Debug print helper
 */
function map(t){return format(t,!0)}function formatObjectId(t,o){var e='ObjectId("'+t[o].toHexString()+'")';t[o]={inspect:function(){return e}}}function formatDate(t,o){var e='new Date("'+t[o].toUTCString()+'")';t[o]={inspect:function(){return e}}}function format(t,o){var e,n=utils.clone(t,{retainKeyOrder:1});if(null!=n){if("Binary"===n.constructor.name)n="[object Buffer]";else if("ObjectID"===n.constructor.name)e='ObjectId("'+n.toHexString()+'")',n={inspect:function(){return e}};else if("Date"===n.constructor.name)e='new Date("'+n.toUTCString()+'")',n={inspect:function(){return e}};else if("Object"===n.constructor.name)for(var i,r=Object.keys(n),c=r.length,l=0;c>l;++l)i=r[l],n[i]&&("Binary"===n[i].constructor.name?n[i]="[object Buffer]":"Object"===n[i].constructor.name?n[i]=format(n[i],!0):"ObjectID"===n[i].constructor.name?formatObjectId(n,i):"Date"===n[i].constructor.name?formatDate(n,i):Array.isArray(n[i])&&(n[i]=n[i].map(map)));if(o)return n}return require("util").inspect(n,!1,10,!0).replace(/\n/g,"").replace(/\s{2,}/g," ")}var MongooseCollection=require("../../collection"),Collection=require("mongodb").Collection,utils=require("../../utils");/*!
 * Inherit from abstract Collection.
 */
NativeCollection.prototype.__proto__=MongooseCollection.prototype,NativeCollection.prototype.onOpen=function(){function t(t,e){t?o.conn.emit("error",t):(o.collection=e,MongooseCollection.prototype.onOpen.call(o))}var o=this;return o.opts.capped.size?o.conn.db.collection(o.name,function(e,n){return e?t(e):void o.conn.db.listCollections({name:o.name}).toArray(function(e,i){if(e)return t(e);var r=i[0],c=!!r;if(c)if(r.options&&r.options.capped)t(null,n);else{var l="A non-capped collection exists with the name: "+o.name+"\n\n To use this collection as a capped collection, please first convert it.\n http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-Convertingacollectiontocapped";e=new Error(l),t(e)}else{var a=utils.clone(o.opts.capped);a.capped=!0,o.conn.db.createCollection(o.name,a,t)}})}):o.conn.db.collection(o.name,t)},NativeCollection.prototype.onClose=function(){MongooseCollection.prototype.onClose.call(this)};for(var i in Collection.prototype){try{if("function"!=typeof Collection.prototype[i])continue}catch(e){continue}iter(i)}NativeCollection.prototype.$print=function(t,o,e){console.error("[0;36mMongoose:[0m %s.%s(%s) %s %s %s",t,o,this.$format(e[0]),this.$format(e[1]),this.$format(e[2]),this.$format(e[3]))},NativeCollection.prototype.$format=function(t){var o=typeof t;return"function"===o||"undefined"===o?"":format(t)},NativeCollection.prototype.getIndexes=NativeCollection.prototype.indexInformation,/*!
 * Module exports.
 */
module.exports=NativeCollection;