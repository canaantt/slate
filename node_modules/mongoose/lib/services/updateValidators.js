/*!
 * Module dependencies.
 */
var Mixed=require("../schema/mixed"),ValidationError=require("../error/validation"),async=require("async"),flatten=require("./common").flatten,modifiedPaths=require("./common").modifiedPaths;module.exports=function(e,t,r,n){function a(r){var a=t._getSchema(y[r]);if(a){if(a instanceof Mixed&&a.path!==y[r])return;g.push(function(t){a.doValidate(l[y[r]],function(e){e&&(e.path=y[r],q.push(e)),t(null)},n&&"query"===n.context?e:null,{updateValidator:!0})})}}for(var i=Object.keys(r||{}),o={},l={},u=i.length,f=!1,c={},s=0;u>s;++s)if("$"===i[s].charAt(0)){modifiedPaths(r[i[s]],"",c);for(var d=flatten(r[i[s]]),h=Object.keys(d),m=h.length,p=0;m>p;++p){var v=h[p].replace(".$.",".0.");v=v.replace(/\.\$$/,".0"),"$set"===i[s]||"$setOnInsert"===i[s]?l[v]=d[h[p]]:"$unset"===i[s]&&(l[v]=void 0),o[v]=!0}f=!0}f||(modifiedPaths(r,"",c),l=flatten(r),o=Object.keys(l));var y=Object.keys(l),$=y.length,g=[],q=[];for(s=0;$>s;++s)a(s);return function(e){async.parallel(g,function(){if(q.length){for(var t=new ValidationError(null),r=0;r<q.length;++r)t.errors[q[r].path]=q[r];return e(t)}e(null)})}};