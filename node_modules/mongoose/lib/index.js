"use strict";function Mongoose(){this.connections=[],this.plugins=[],this.models={},this.modelSchemas={},this.options={pluralization:!0};var o=this.createConnection();o.models=this.models}function MongooseThenable(o,e){var t=this;for(var n in o)"function"==typeof o[n]&&o[n].$hasSideEffects?!function(e){t[e]=function(){return o[e].apply(o,arguments)}}(n):-1!==["connection","connections"].indexOf(n)&&(t[n]=o[n]);this.$opPromise=e}/*!
 * Module dependencies.
 */
var Schema=require("./schema"),SchemaType=require("./schematype"),VirtualType=require("./virtualtype"),STATES=require("./connectionstate"),Types=require("./types"),Query=require("./query"),Model=require("./model"),Document=require("./document"),utils=require("./utils"),format=utils.toCollectionName,pkg=require("../package.json"),querystring=require("querystring"),Aggregate=require("./aggregate"),PromiseProvider=require("./promise_provider");Mongoose.prototype.STATES=STATES,Mongoose.prototype.set=function(o,e){return 1===arguments.length?this.options[o]:(this.options[o]=e,this)},Mongoose.prototype.set.$hasSideEffects=!0,Mongoose.prototype.get=Mongoose.prototype.set;/*!
 * ReplSet connection string check.
 */
var rgxReplSet=/^.+,.+$/,checkReplicaSetInUri=function(o){if(!o)return!1;var e=o.indexOf("?"),t=!1;if(-1!==e)try{var n=querystring.parse(o.substr(e+1));n&&n.replicaSet&&(t=!0)}catch(r){return!1}return t};Mongoose.prototype.createConnection=function(o,e){var t=new Connection(this);return this.connections.push(t),arguments.length&&(rgxReplSet.test(arguments[0])||checkReplicaSetInUri(arguments[0])?t.openSet.apply(t,arguments):e&&e.replset&&(e.replset.replicaSet||e.replset.rs_name)?t.openSet.apply(t,arguments):t.open.apply(t,arguments)),t},Mongoose.prototype.createConnection.$hasSideEffects=!0,Mongoose.prototype.connect=function(){var o=this.connection;return rgxReplSet.test(arguments[0])||checkReplicaSetInUri(arguments[0])?new MongooseThenable(this,o.openSet.apply(o,arguments)):new MongooseThenable(this,o.open.apply(o,arguments))},Mongoose.prototype.connect.$hasSideEffects=!0,Mongoose.prototype.disconnect=function(o){var e;this.connections.forEach(function(o){o.close(function(o){e||o&&(e=o)})});var t=PromiseProvider.get();return new MongooseThenable(this,new t.ES6(function(t,n){return o&&o(e),e?void n(e):void t()}))},Mongoose.prototype.disconnect.$hasSideEffects=!0,Mongoose.prototype.model=function(o,e,t,n){"string"==typeof e&&(t=e,e=!1),utils.isObject(e)&&!e.instanceOfSchema&&(e=new Schema(e)),"boolean"==typeof t&&(n=t,t=null);var r;if(n&&utils.isObject(n)?(r=n,n=!0):r={},!this.modelSchemas[o]){if(!e)throw new mongoose.Error.MissingSchemaError(o);this.modelSchemas[o]=e,this._applyPlugins(e)}var s,i;if(this.models[o]&&r.cache!==!1){if(e&&e.instanceOfSchema&&e!==this.models[o].schema)throw new mongoose.Error.OverwriteModelError(o);return t?(s=this.models[o],e=s.prototype.schema,i=s.__subclass(this.connection,e,t)):this.models[o]}if(!e&&(e=this.modelSchemas[o],!e))throw new mongoose.Error.MissingSchemaError(o);"pluralization"in e.options||(e.options.pluralization=this.options.pluralization),t||(t=e.get("collection")||format(o,e.options));var p=r.connection||this.connection;return s=Model.compile(o,e,t,p,this),n||s.init(),r.cache===!1?s:(this.models[o]=s,this.models[o])},Mongoose.prototype.model.$hasSideEffects=!0,Mongoose.prototype.modelNames=function(){var o=Object.keys(this.models);return o},Mongoose.prototype.modelNames.$hasSideEffects=!0,Mongoose.prototype._applyPlugins=function(o){if(!o.$globalPluginsApplied){var e,t;for(e=0,t=this.plugins.length;t>e;++e)o.plugin(this.plugins[e][0],this.plugins[e][1]);for(o.$globalPluginsApplied=!0,e=0,t=o.childSchemas.length;t>e;++e)this._applyPlugins(o.childSchemas[e])}},Mongoose.prototype._applyPlugins.$hasSideEffects=!0,Mongoose.prototype.plugin=function(o,e){return this.plugins.push([o,e]),this},Mongoose.prototype.plugin.$hasSideEffects=!0,Mongoose.prototype.__defineGetter__("connection",function(){return this.connections[0]}),Mongoose.prototype.__defineSetter__("connection",function(o){this.connections[0]=o});/*!
 * Driver depentend APIs
 */
var driver=global.MONGOOSE_DRIVER_PATH||"./drivers/node-mongodb-native",Connection=require(driver+"/connection"),Collection=require(driver+"/collection");Mongoose.prototype.Aggregate=Aggregate,Mongoose.prototype.Collection=Collection,Mongoose.prototype.Connection=Connection,Mongoose.prototype.version=pkg.version,Mongoose.prototype.Mongoose=Mongoose,Mongoose.prototype.Schema=Schema,Mongoose.prototype.SchemaType=SchemaType,Mongoose.prototype.SchemaTypes=Schema.Types,Mongoose.prototype.VirtualType=VirtualType,Mongoose.prototype.Types=Types,Mongoose.prototype.Query=Query,Object.defineProperty(Mongoose.prototype,"Promise",{get:function(){return PromiseProvider.get()},set:function(o){PromiseProvider.set(o)}}),Mongoose.prototype.PromiseProvider=PromiseProvider,Mongoose.prototype.Model=Model,Mongoose.prototype.Document=Document,Mongoose.prototype.DocumentProvider=require("./document_provider"),Mongoose.prototype.Error=require("./error"),Mongoose.prototype.CastError=require("./error/cast"),Mongoose.prototype.mongo=require("mongodb"),Mongoose.prototype.mquery=require("mquery"),MongooseThenable.prototype=new Mongoose,MongooseThenable.prototype.then=function(o,e){var t=PromiseProvider.get();return this.$opPromise?(this.$opPromise.$hasHandler=!0,this.$opPromise.then(o,e)):new t.ES6(function(o,e){e(new Error("Can only call `.then()` if connect() or disconnect() has been called"))}).then(o,e)},MongooseThenable.prototype["catch"]=function(o){return this.then(null,o)};/*!
 * The exports object is an instance of Mongoose.
 *
 * @api public
 */
var mongoose=module.exports=exports=new Mongoose;