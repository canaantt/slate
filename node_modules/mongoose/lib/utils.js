/*!
 * Module dependencies.
 */
/*!
 * Pluralize function.
 *
 * @author TJ Holowaychuk (extracted from _ext.js_)
 * @param {String} string to pluralize
 * @api private
 */
function pluralize(e){var t;return!~uncountables.indexOf(e.toLowerCase())&&(t=rules.filter(function(t){return e.match(t[0])}),t[0])?e.replace(t[0][0],t[0][1]):e}/*!
 * ignore
 */
function cloneObject(e,t){var r,o,n,i,s,u=t&&t.retainKeyOrder,c=t&&t.minimize,f={};if(u)for(i in e)n=clone(e[i],t),c&&"undefined"==typeof n||(r||(r=!0),f[i]=n);else for(o=Object.keys(e),s=o.length;s--;)i=o[s],n=clone(e[i],t),c&&"undefined"==typeof n||(r||(r=!0),f[i]=n);return c?r&&f:f}function cloneArray(e,t){for(var r=[],o=0,n=e.length;n>o;o++)r.push(clone(e[o],t));return r}/*!
 * Populate options constructor
 */
function PopulateOptions(e,t,r,o,n,i){this.path=e,this.match=r,this.select=t,this.options=o,this.model=n,"object"==typeof i&&(this.populate=i),this._docs={}}var ObjectId=require("./types/objectid"),cloneRegExp=require("regexp-clone"),sliced=require("sliced"),mpath=require("mpath"),ms=require("ms"),MongooseBuffer,MongooseArray,Document;/*!
 * Produces a collection name from model `name`.
 *
 * @param {String} name a model name
 * @return {String} a collection name
 * @api private
 */
exports.toCollectionName=function(e,t){return t=t||{},"system.profile"===e?e:"system.indexes"===e?e:t.pluralization===!1?e:pluralize(e.toLowerCase())},exports.pluralization=[[/(m)an$/gi,"$1en"],[/(pe)rson$/gi,"$1ople"],[/(child)$/gi,"$1ren"],[/^(ox)$/gi,"$1en"],[/(ax|test)is$/gi,"$1es"],[/(octop|vir)us$/gi,"$1i"],[/(alias|status)$/gi,"$1es"],[/(bu)s$/gi,"$1ses"],[/(buffal|tomat|potat)o$/gi,"$1oes"],[/([ti])um$/gi,"$1a"],[/sis$/gi,"ses"],[/(?:([^f])fe|([lr])f)$/gi,"$1$2ves"],[/(hive)$/gi,"$1s"],[/([^aeiouy]|qu)y$/gi,"$1ies"],[/(x|ch|ss|sh)$/gi,"$1es"],[/(matr|vert|ind)ix|ex$/gi,"$1ices"],[/([m|l])ouse$/gi,"$1ice"],[/(kn|w|l)ife$/gi,"$1ives"],[/(quiz)$/gi,"$1zes"],[/s$/gi,"s"],[/([^a-z])$/,"$1"],[/$/gi,"s"]];var rules=exports.pluralization;exports.uncountables=["advice","energy","excretion","digestion","cooperation","health","justice","labour","machinery","equipment","information","pollution","sewage","paper","money","species","series","rain","rice","fish","sheep","moose","deer","news","expertise","status","media"];var uncountables=exports.uncountables;/*!
 * Determines if `a` and `b` are deep equal.
 *
 * Modified from node/lib/assert.js
 *
 * @param {any} a a value to compare to `b`
 * @param {any} b a value to compare to `a`
 * @return {Boolean}
 * @api private
 */
exports.deepEqual=function e(t,r){if(t===r)return!0;if(t instanceof Date&&r instanceof Date)return t.getTime()===r.getTime();if(t instanceof ObjectId&&r instanceof ObjectId)return t.toString()===r.toString();if(t instanceof RegExp&&r instanceof RegExp)return t.source===r.source&&t.ignoreCase===r.ignoreCase&&t.multiline===r.multiline&&t.global===r.global;if("object"!=typeof t&&"object"!=typeof r)return t==r;if(null===t||null===r||void 0===t||void 0===r)return!1;if(t.prototype!==r.prototype)return!1;if(t instanceof Number&&r instanceof Number)return t.valueOf()===r.valueOf();if(Buffer.isBuffer(t))return exports.buffer.areEqual(t,r);isMongooseObject(t)&&(t=t.toObject()),isMongooseObject(r)&&(r=r.toObject());try{var o,n,i=Object.keys(t),s=Object.keys(r)}catch(u){return!1}if(i.length!==s.length)return!1;for(i.sort(),s.sort(),n=i.length-1;n>=0;n--)if(i[n]!==s[n])return!1;for(n=i.length-1;n>=0;n--)if(o=i[n],!e(t[o],r[o]))return!1;return!0},/*!
 * Object clone with Mongoose natives support.
 *
 * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.
 *
 * Functions are never cloned.
 *
 * @param {Object} obj the object to clone
 * @param {Object} options
 * @return {Object} the cloned object
 * @api private
 */
exports.clone=function(e,t){if(void 0===e||null===e)return e;if(Array.isArray(e))return cloneArray(e,t);if(isMongooseObject(e))return t&&t.json&&"function"==typeof e.toJSON?e.toJSON(t):e.toObject(t);if(e.constructor)switch(exports.getFunctionName(e.constructor)){case"Object":return cloneObject(e,t);case"Date":return new e.constructor(+e);case"RegExp":return cloneRegExp(e)}return e instanceof ObjectId?new ObjectId(e.id):!e.constructor&&exports.isObject(e)?cloneObject(e,t):e.valueOf?e.valueOf():void 0};var clone=exports.clone;/*!
 * Shallow copies defaults into options.
 *
 * @param {Object} defaults
 * @param {Object} options
 * @return {Object} the merged object
 * @api private
 */
exports.options=function(e,t){var r,o=Object.keys(e),n=o.length;for(t=t||{};n--;)r=o[n],r in t||(t[r]=e[r]);return t},/*!
 * Generates a random string
 *
 * @api private
 */
exports.random=function(){return Math.random().toString().substr(3)},/*!
 * Merges `from` into `to` without overwriting existing properties.
 *
 * @param {Object} to
 * @param {Object} from
 * @api private
 */
exports.merge=function t(e,r){for(var o,n=Object.keys(r),i=n.length;i--;)o=n[i],"undefined"==typeof e[o]?e[o]=r[o]:exports.isObject(r[o])&&t(e[o],r[o])};/*!
 * toString helper
 */
var toString=Object.prototype.toString;/*!
 * Applies toObject recursively.
 *
 * @param {Document|Array|Object} obj
 * @return {Object}
 * @api private
 */
exports.toObject=function r(e){Document||(Document=require("./document"));var t;if(exports.isNullOrUndefined(e))return e;if(e instanceof Document)return e.toObject();if(Array.isArray(e)){t=[];for(var o=0,n=e.length;n>o;++o)t.push(r(e[o]));return t}if(e.constructor&&"Object"===exports.getFunctionName(e.constructor)||!e.constructor&&exports.isObject(e)){t={};for(var i in e)t[i]=r(e[i]);return t}return e},/*!
 * Determines if `arg` is an object.
 *
 * @param {Object|Array|String|Function|RegExp|any} arg
 * @api private
 * @return {Boolean}
 */
exports.isObject=function(e){return Buffer.isBuffer(e)?!0:"[object Object]"===toString.call(e)},/*!
 * A faster Array.prototype.slice.call(arguments) alternative
 * @api private
 */
exports.args=sliced,/*!
 * process.nextTick helper.
 *
 * Wraps `callback` in a try/catch + nextTick.
 *
 * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.
 *
 * @param {Function} callback
 * @api private
 */
exports.tick=function(e){return"function"==typeof e?function(){try{e.apply(this,arguments)}catch(t){process.nextTick(function(){throw t})}}:void 0},/*!
 * Returns if `v` is a mongoose object that has a `toObject()` method we can use.
 *
 * This is for compatibility with libs like Date.js which do foolish things to Natives.
 *
 * @param {any} v
 * @api private
 */
exports.isMongooseObject=function(e){return Document||(Document=require("./document")),MongooseArray||(MongooseArray=require("./types").Array),MongooseBuffer||(MongooseBuffer=require("./types").Buffer),e instanceof Document||e&&e.isMongooseArray||e&&e.isMongooseBuffer};var isMongooseObject=exports.isMongooseObject;/*!
 * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.
 *
 * @param {Object} object
 * @api private
 */
exports.expires=function(e){if(e&&"Object"===e.constructor.name&&"expires"in e){var t;t="string"!=typeof e.expires?e.expires:Math.round(ms(e.expires)/1e3),e.expireAfterSeconds=t,delete e.expires}},PopulateOptions.prototype.constructor=Object,exports.PopulateOptions=PopulateOptions,/*!
 * populate helper
 */
exports.populate=function(e,t,r,o,n,i){if(1===arguments.length){if(e instanceof PopulateOptions)return[e];if(Array.isArray(e))return e.map(function(e){return exports.populate(e)[0]});exports.isObject(e)&&(o=e.match,n=e.options,t=e.select,r=e.model,i=e.populate,e=e.path)}else"string"!=typeof r&&"function"!=typeof r&&(n=o,o=r,r=void 0);if("string"!=typeof e)throw new TypeError("utils.populate: invalid path. Expected string. Got typeof `"+typeof e+"`");"object"==typeof i&&(i=exports.populate(i));var s=[],u=e.split(" ");n=exports.clone(n,{retainKeyOrder:!0});for(var c=0;c<u.length;++c)s.push(new PopulateOptions(u[c],t,o,n,r,i));return s},/*!
 * Return the value of `obj` at the given `path`.
 *
 * @param {String} path
 * @param {Object} obj
 */
exports.getValue=function(e,t,r){return mpath.get(e,t,"_doc",r)},/*!
 * Sets the value of `obj` at the given `path`.
 *
 * @param {String} path
 * @param {Anything} val
 * @param {Object} obj
 */
exports.setValue=function(e,t,r,o){mpath.set(e,t,r,"_doc",o)},/*!
 * Returns an array of values from object `o`.
 *
 * @param {Object} o
 * @return {Array}
 * @private
 */
exports.object={},exports.object.vals=function(e){for(var t=Object.keys(e),r=t.length,o=[];r--;)o.push(e[t[r]]);return o},/*!
 * @see exports.options
 */
exports.object.shallowCopy=exports.options;/*!
 * Safer helper for hasOwnProperty checks
 *
 * @param {Object} obj
 * @param {String} prop
 */
var hop=Object.prototype.hasOwnProperty;exports.object.hasOwnProperty=function(e,t){return hop.call(e,t)},/*!
 * Determine if `val` is null or undefined
 *
 * @return {Boolean}
 */
exports.isNullOrUndefined=function(e){return null===e||void 0===e},/*!
 * ignore
 */
exports.array={},/*!
 * Flattens an array.
 *
 * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]
 *
 * @param {Array} arr
 * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsey value, the item will not be included in the results.
 * @return {Array}
 * @private
 */
exports.array.flatten=function o(e,t,r){return r||(r=[]),e.forEach(function(e){Array.isArray(e)?o(e,t,r):(!t||t(e))&&r.push(e)}),r},/*!
 * Removes duplicate values from an array
 *
 * [1, 2, 3, 3, 5] => [1, 2, 3, 5]
 * [ ObjectId("550988ba0c19d57f697dc45e"), ObjectId("550988ba0c19d57f697dc45e") ]
 *    => [ObjectId("550988ba0c19d57f697dc45e")]
 *
 * @param {Array} arr
 * @return {Array}
 * @private
 */
exports.array.unique=function(e){for(var t={},r={},o=[],n=e.length,i=0;n>i;++i)if("number"==typeof e[i]||"string"==typeof e[i]){if(t[e[i]])continue;o.push(e[i]),t[e[i]]=!0}else if(e[i]instanceof ObjectId){if(r[e[i].toString()])continue;o.push(e[i]),r[e[i].toString()]=!0}else o.push(e[i]);return o},/*!
 * Determines if two buffers are equal.
 *
 * @param {Buffer} a
 * @param {Object} b
 */
exports.buffer={},exports.buffer.areEqual=function(e,t){if(!Buffer.isBuffer(e))return!1;if(!Buffer.isBuffer(t))return!1;if(e.length!==t.length)return!1;for(var r=0,o=e.length;o>r;++r)if(e[r]!==t[r])return!1;return!0},exports.getFunctionName=function(e){return e.name?e.name:(e.toString().trim().match(/^function\s*([^\s(]+)/)||[])[1]},exports.decorate=function(e,t){for(var r in t)e[r]=t[r]},exports.mergeClone=function(e,t){for(var r,o=Object.keys(t),n=o.length;n--;)if(r=o[n],"undefined"==typeof e[r])e[r]=exports.clone(t[r],{retainKeyOrder:1});else if(exports.isObject(t[r])){var i=t[r];isMongooseObject(t[r])&&!t[r].isMongooseBuffer&&(i=i.toObject({virtuals:!1})),exports.mergeClone(e[r],i)}else e[r]=exports.clone(t[r],{retainKeyOrder:1})},exports.each=function(e,t){for(var r=0;r<e.length;++r)t(e[r])};