/*!
 * Module dependencies
 */
function Promise(e){MPromise.call(this,e)}var MPromise=require("mpromise"),util=require("util");Promise.ES6=function(e){var o=new Promise;return e(function(){o.complete.apply(o,arguments)},function(e){o.error(e)}),o},/*!
 * Inherit from mpromise
 */
Promise.prototype=Object.create(MPromise.prototype,{constructor:{value:Promise,enumerable:!1,writable:!0,configurable:!0}}),/*!
 * ignore
 */
Promise.prototype.then=util.deprecate(Promise.prototype.then,"Mongoose: mpromise (mongoose's default promise library) is deprecated, plug in your own promise library instead: http://mongoosejs.com/docs/promises.html"),Promise.prototype["catch"]=function(e){return this.then(null,e)},/*!
 * Override event names for backward compatibility.
 */
Promise.SUCCESS="complete",Promise.FAILURE="err",Promise.prototype.error=function(e){return e instanceof Error||(e instanceof Object&&(e=util.inspect(e)),e=new Error(e)),this.reject(e)},Promise.prototype.resolve=function(e){return e?this.error(e):this.fulfill.apply(this,Array.prototype.slice.call(arguments,1))},Promise.prototype.addBack=Promise.prototype.onResolve,Promise.prototype.complete=MPromise.prototype.fulfill,Promise.prototype.addCallback=Promise.prototype.onFulfill,Promise.prototype.addErrback=Promise.prototype.onReject,/*!
 * expose
 */
module.exports=Promise;