/*!
 * Module dependencies
 */
function Aggregate(){this._pipeline=[],this._model=void 0,this.options=void 0,1===arguments.length&&util.isArray(arguments[0])?this.append.apply(this,arguments[0]):this.append.apply(this,arguments)}/*!
 * Helpers
 */
function isOperator(e){var t;return"object"!=typeof e?!1:(t=Object.keys(e),1===t.length&&t.some(function(e){return"$"===e[0]}))}/*!
 * Adds the appropriate `$match` pipeline step to the top of an aggregate's
 * pipeline, should it's model is a non-root discriminator type. This is
 * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`.
 *
 * @param {Aggregate} aggregate Aggregate to prepare
 */
function prepareDiscriminatorPipeline(e){var t=e._model.schema,r=t&&t.discriminatorMapping;if(r&&!r.isRoot){var i=e._pipeline,o=r.key,n=r.value;if(i[0]&&i[0].$match&&!i[0].$match[o])i[0].$match[o]=n;else if(i[0]&&i[0].$geoNear)i[0].$geoNear.query=i[0].$geoNear.query||{},i[0].$geoNear.query[o]=n;else{var s={};s[o]=n,e._pipeline=[{$match:s}].concat(i)}}}var util=require("util"),utils=require("./utils"),PromiseProvider=require("./promise_provider"),Query=require("./query"),read=Query.prototype.read;Aggregate.prototype.model=function(e){return this._model=e,this},Aggregate.prototype.append=function(){var e=1===arguments.length&&util.isArray(arguments[0])?arguments[0]:utils.args(arguments);if(!e.every(isOperator))throw new Error("Arguments must be aggregate pipeline operators");return this._pipeline=this._pipeline.concat(e),this},Aggregate.prototype.project=function(e){var t={};if("object"!=typeof e||util.isArray(e)){if(1!==arguments.length||"string"!=typeof e)throw new Error("Invalid project() argument. Must be string or object");e.split(/\s+/).forEach(function(e){if(e){var r="-"===e[0]?0:1;0===r&&(e=e.substring(1)),t[e]=r}})}else Object.keys(e).forEach(function(r){t[r]=e[r]});return this.append({$project:t})},Aggregate.prototype.near=function(e){var t={};return t.$geoNear=e,this.append(t)},/*!
 * define methods
 */
"group match skip limit out".split(" ").forEach(function(e){Aggregate.prototype[e]=function(t){var r={};return r["$"+e]=t,this.append(r)}}),Aggregate.prototype.unwind=function(){for(var e=utils.args(arguments),t=[],r=0;r<e.length;++r){var i=e[r];if(i&&"object"==typeof i)t.push({$unwind:i});else{if("string"!=typeof i)throw new Error('Invalid arg "'+i+'" to unwind(), must be string or object');t.push({$unwind:i&&"$"===i.charAt(0)?i:"$"+i})}}return this.append.apply(this,t)},Aggregate.prototype.lookup=function(e){return this.append({$lookup:e})},Aggregate.prototype.sample=function(e){return this.append({$sample:{size:e}})},Aggregate.prototype.sort=function(e){var t={};if("Object"===e.constructor.name){var r=["desc","descending",-1];Object.keys(e).forEach(function(i){t[i]=-1===r.indexOf(e[i])?1:-1})}else{if(1!==arguments.length||"string"!=typeof e)throw new TypeError("Invalid sort() argument. Must be a string or object.");e.split(/\s+/).forEach(function(e){if(e){var r="-"===e[0]?-1:1;-1===r&&(e=e.substring(1)),t[e]=r}})}return this.append({$sort:t})},Aggregate.prototype.read=function(e,t){return this.options||(this.options={}),read.call(this,e,t),this},Aggregate.prototype.explain=function(e){var t=this,r=PromiseProvider.get();return new r.ES6(function(r,i){if(!t._pipeline.length){var o=new Error("Aggregate has empty pipeline");return e&&e(o),void i(o)}prepareDiscriminatorPipeline(t),t._model.collection.aggregate(t._pipeline,t.options||{}).explain(function(t,o){return t?(e&&e(t),void i(t)):(e&&e(null,o),void r(o))})})},Aggregate.prototype.allowDiskUse=function(e){return this.options||(this.options={}),this.options.allowDiskUse=e,this},Aggregate.prototype.cursor=function(e){return this.options||(this.options={}),this.options.cursor=e||{},this},Aggregate.prototype.addCursorFlag=function(e,t){return this.options||(this.options={}),this.options[e]=t,this},Aggregate.prototype.exec=function(e){if(!this._model)throw new Error("Aggregate not bound to any Model");var t=this,r=PromiseProvider.get(),i=utils.clone(this.options);return i&&i.cursor?i.cursor.async?(delete i.cursor.async,new r.ES6(function(r){return t._model.collection.buffer?void t._model.collection.emitter.once("queue",function(){var o=t._model.collection.aggregate(t._pipeline,i||{});r(o),e&&e(null,o)}):void process.nextTick(function(){var o=t._model.collection.aggregate(t._pipeline,i||{});r(o),e&&e(null,o)})})):this._model.collection.aggregate(this._pipeline,this.options||{}):new r.ES6(function(r,i){if(!t._pipeline.length){var o=new Error("Aggregate has empty pipeline");return e&&e(o),void i(o)}prepareDiscriminatorPipeline(t),t._model.collection.aggregate(t._pipeline,t.options||{},function(t,o){return t?(e&&e(t),void i(t)):(e&&e(null,o),void r(o))})})},Aggregate.prototype.then=function(e,t){var r=this,i=PromiseProvider.get(),o=new i.ES6(function(e,t){r.exec(function(r,i){r?t(r):e(i)})});return o.then(e,t)},/*!
 * Exports
 */
module.exports=Aggregate;