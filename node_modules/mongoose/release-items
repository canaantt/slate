<h2 id="mongoose-release-procedure">mongoose release procedure</h2>

<ol>
<li> tests must pass</li>
<li> update package.json version</li>
<li> update History.md using <code class="prettyprint">git changelog</code> or similar. list the related ticket(s) #<TICKET_NUMBER> as well as a link to the github user who fixed it if applicable.</li>
<li> git commit -m &lsquo;release x.x.x&rsquo;</li>
<li> git tag x.x.x</li>
<li> git push origin BRANCH &ndash;tags &amp;&amp; npm publish</li>
<li> update mongoosejs.com (see &ldquo;updating the website&rdquo; below)</li>
<li> tweet changelog link from <a href="https://twitter.com/mongoosejs">@mongoosejs</a></li>
<li>change package.json version to next patch version suffixed with &rsquo;-pre&rsquo; and commit &ldquo;now working on x.x.x&rdquo;</li>
<li>if this is a legacy release, <code class="prettyprint">git merge</code> changes into master.</li>
</ol>

<h2 id="updating-the-website">updating the website</h2>

<p>For 4.x</p>

<ol>
<li>Change to the master branch</li>
<li>execute <code class="prettyprint">make docs</code> (when this process completes you&rsquo;ll be on the gh-pages branch)</li>
<li><code class="prettyprint">git commit -a -m &#39;docs: release 4.x.x&#39;</code></li>
<li><code class="prettyprint">git push origin gh-pages</code></li>
</ol>

<p>For 3.8.x:</p>

<ol>
<li>Change to the 3.8.x branch</li>
<li>execute <code class="prettyprint">make docs_legacy</code> (when this process completes you&rsquo;ll be on the gh-pages branch)</li>
<li><code class="prettyprint">git commit -a -m &#39;website; regen &lt;x.x.x&gt;&#39;</code></li>
<li><code class="prettyprint">git push origin gh-pages</code></li>
</ol>
