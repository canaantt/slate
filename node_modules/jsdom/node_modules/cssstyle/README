<h1 id="cssstyledeclaration">CSSStyleDeclaration</h1>

<p>CSSStyleDeclaration is a work-a-like to the CSSStyleDeclaration class in Nikita Vasilyev&rsquo;s <a href="https://github.com/NV/CSSOM">CSSOM</a>. I made it so that when using <a href="https://github.com/tmtk75/node-jquery">jQuery in node</a> setting css attributes via $.fn.css() would work. node-jquery uses <a href="https://github.com/tmpvar/jsdom">jsdom</a> to create a DOM to use in node. jsdom uses CSSOM for styling, and CSSOM&rsquo;s implementation of the <a href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration">CSSStyleDeclaration</a> doesn&rsquo;t support <a href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties">CSS2Properties</a>, which is how jQuery&rsquo;s <a href="http://api.jquery.com/css/">$.fn.css()</a> operates.</p>

<h2 id="why-not-just-issue-a-pull-request">Why not just issue a pull request?</h2>

<p>Well, NV wants to keep CSSOM fast (which I can appreciate) and CSS2Properties aren&rsquo;t required by the standard (though every browser has the interface). So I figured the path of least resistence would be to just modify this one class, publish it as a node module (that requires CSSOM) and then make a pull request of jsdom to use it.</p>

<h2 id="how-do-i-test-this-code">How do I test this code?</h2>

<p><code class="prettyprint">npm test</code> should do the trick, assuming you have the dev dependencies installed:</p>

<blockquote>
<pre class="highlight plaintext"><code>$ npm test

tests
✔ Verify Has Properties
✔ Verify Has Functions
✔ Verify Has Special Properties
✔ Test From Style String
✔ Test From Properties
✔ Test Shorthand Properties
✔ Test width and height Properties and null and empty strings
✔ Test Implicit Properties
</code></pre>
</blockquote>
