<h1 id="json-stringify-safe">json-stringify-safe</h1>

<p>Like JSON.stringify, but doesn&rsquo;t throw on circular references.</p>

<h2 id="usage">Usage</h2>

<p>Takes the same arguments as <code class="prettyprint">JSON.stringify</code>.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">stringify</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'json-stringify-safe'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">circularObj</span> <span class="o">=</span> <span class="p">{};</span>
<span class="nx">circularObj</span><span class="p">.</span><span class="nx">circularRef</span> <span class="o">=</span> <span class="nx">circularObj</span><span class="p">;</span>
<span class="nx">circularObj</span><span class="p">.</span><span class="nx">list</span> <span class="o">=</span> <span class="p">[</span> <span class="nx">circularObj</span><span class="p">,</span> <span class="nx">circularObj</span> <span class="p">];</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">circularObj</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="mi">2</span><span class="p">));</span>
</code></pre>

<p>Output:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
  </span><span class="nt">"circularRef"</span><span class="p">:</span><span class="w"> </span><span class="s2">"[Circular]"</span><span class="p">,</span><span class="w">
  </span><span class="nt">"list"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="s2">"[Circular]"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"[Circular]"</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h2 id="details">Details</h2>
<pre class="highlight plaintext"><code>stringify(obj, serializer, indent, decycler)
</code></pre>

<p>The first three arguments are the same as to JSON.stringify.  The last
is an argument that&rsquo;s only used when the object has been seen already.</p>

<p>The default <code class="prettyprint">decycler</code> function returns the string <code class="prettyprint">&#39;[Circular]&#39;</code>.
If, for example, you pass in <code class="prettyprint">function(k,v){}</code> (return nothing) then it
will prune cycles.  If you pass in <code class="prettyprint">function(k,v){ return {foo: &#39;bar&#39;}}</code>,
then cyclical objects will always be represented as <code class="prettyprint">{&quot;foo&quot;:&quot;bar&quot;}</code> in
the result.</p>
<pre class="highlight plaintext"><code>stringify.getSerialize(serializer, decycler)
</code></pre>

<p>Returns a serializer that can be used elsewhere.  This is the actual
function that&rsquo;s passed to JSON.stringify.</p>

<p><strong>Note</strong> that the function returned from <code class="prettyprint">getSerialize</code> is stateful for now, so
do <strong>not</strong> use it more than once.</p>
