<h1 id="node-uuid-benchmarks">node-uuid Benchmarks</h1>

<h3 id="results">Results</h3>

<p>To see the results of our benchmarks visit https://github.com/broofa/node-uuid/wiki/Benchmark</p>

<h3 id="run-them-yourself">Run them yourself</h3>

<p>node-uuid comes with some benchmarks to measure performance of generating UUIDs. These can be run using node.js. node-uuid is being benchmarked against some other uuid modules, that are available through npm namely <code class="prettyprint">uuid</code> and <code class="prettyprint">uuid-js</code>.</p>

<p>To prepare and run the benchmark issue;</p>
<pre class="highlight plaintext"><code>npm install uuid uuid-js
node benchmark/benchmark.js
</code></pre>

<p>You&rsquo;ll see an output like this one:</p>
<pre class="highlight plaintext"><code># v4
nodeuuid.v4(): 854700 uuids/second
nodeuuid.v4('binary'): 788643 uuids/second
nodeuuid.v4('binary', buffer): 1336898 uuids/second
uuid(): 479386 uuids/second
uuid('binary'): 582072 uuids/second
uuidjs.create(4): 312304 uuids/second

# v1
nodeuuid.v1(): 938086 uuids/second
nodeuuid.v1('binary'): 683060 uuids/second
nodeuuid.v1('binary', buffer): 1644736 uuids/second
uuidjs.create(1): 190621 uuids/second
</code></pre>

<ul>
<li>The <code class="prettyprint">uuid()</code> entries are for Nikhil Marathe&rsquo;s <a href="https://bitbucket.org/nikhilm/uuidjs">uuid module</a> which is a wrapper around the native libuuid library.</li>
<li>The <code class="prettyprint">uuidjs()</code> entries are for Patrick Negri&rsquo;s <a href="https://github.com/pnegri/uuid-js">uuid-js module</a> which is a pure javascript implementation based on <a href="https://github.com/LiosK/UUID.js">UUID.js</a> by LiosK.</li>
</ul>

<p>If you want to get more reliable results you can run the benchmark multiple times and write the output into a log file:</p>
<pre class="highlight plaintext"><code>for i in {0..9}; do node benchmark/benchmark.js &gt;&gt; benchmark/bench_0.4.12.log; done;
</code></pre>

<p>If you&rsquo;re interested in how performance varies between different node versions, you can issue the above command multiple times.</p>

<p>You can then use the shell script <code class="prettyprint">bench.sh</code> provided in this directory to calculate the averages over all benchmark runs and draw a nice plot:</p>
<pre class="highlight plaintext"><code>(cd benchmark/ &amp;&amp; ./bench.sh)
</code></pre>

<p>This assumes you have <a href="http://www.gnuplot.info/">gnuplot</a> and <a href="http://www.imagemagick.org/">ImageMagick</a> installed. You&rsquo;ll find a nice <code class="prettyprint">bench.png</code> graph in the <code class="prettyprint">benchmark/</code> directory then.</p>
