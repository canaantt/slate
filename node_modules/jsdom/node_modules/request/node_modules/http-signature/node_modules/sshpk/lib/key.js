// Copyright 2015 Joyent, Inc.
function Key(r){assert.object(r,"options"),assert.arrayOfObject(r.parts,"options.parts"),assert.string(r.type,"options.type"),assert.optionalString(r.comment,"options.comment");var e=algs.info[r.type];if("object"!=typeof e)throw new InvalidAlgorithmError(r.type);for(var t={},s=0;s<r.parts.length;++s){var i=r.parts[s];t[i.name]=i}this.type=r.type,this.parts=r.parts,this.part=t,this.comment=void 0,this.source=r.source,this._rfc4253Cache=r._rfc4253Cache,this._hashCache={};var a;if(this.curve=void 0,"ecdsa"===this.type){var o=this.part.curve.data.toString();this.curve=o,a=algs.curves[o].size}else if("ed25519"===this.type)a=256,this.curve="curve25519";else{var n=this.part[e.sizePart];a=n.data.length,a=8*a-utils.countZeros(n.data)}this.size=a}module.exports=Key;var assert=require("assert-plus"),algs=require("./algs"),crypto=require("crypto"),Fingerprint=require("./fingerprint"),Signature=require("./signature"),DiffieHellman=require("./dhe"),errs=require("./errors"),utils=require("./utils"),PrivateKey=require("./private-key"),edCompat;try{edCompat=require("./ed-compat")}catch(e){}var InvalidAlgorithmError=errs.InvalidAlgorithmError,KeyParseError=errs.KeyParseError,formats={};formats.auto=require("./formats/auto"),formats.pem=require("./formats/pem"),formats.pkcs1=require("./formats/pkcs1"),formats.pkcs8=require("./formats/pkcs8"),formats.rfc4253=require("./formats/rfc4253"),formats.ssh=require("./formats/ssh"),formats["ssh-private"]=require("./formats/ssh-private"),formats.openssh=formats["ssh-private"],Key.formats=formats,Key.prototype.toBuffer=function(r,e){return void 0===r&&(r="ssh"),assert.string(r,"format"),assert.object(formats[r],"formats[format]"),assert.optionalObject(e,"options"),"rfc4253"===r?(void 0===this._rfc4253Cache&&(this._rfc4253Cache=formats.rfc4253.write(this)),this._rfc4253Cache):formats[r].write(this,e)},Key.prototype.toString=function(r,e){return this.toBuffer(r,e).toString()},Key.prototype.hash=function(r){if(assert.string(r,"algorithm"),r=r.toLowerCase(),void 0===algs.hashAlgs[r])throw new InvalidAlgorithmError(r);if(this._hashCache[r])return this._hashCache[r];var e=crypto.createHash(r).update(this.toBuffer("rfc4253")).digest();return this._hashCache[r]=e,e},Key.prototype.fingerprint=function(r){void 0===r&&(r="sha256"),assert.string(r,"algorithm");var e={type:"key",hash:this.hash(r),algorithm:r};return new Fingerprint(e)},Key.prototype.defaultHashAlgorithm=function(){var r="sha1";return"rsa"===this.type&&(r="sha256"),"dsa"===this.type&&this.size>1024&&(r="sha256"),"ed25519"===this.type&&(r="sha512"),"ecdsa"===this.type&&(r=this.size<=256?"sha256":this.size<=384?"sha384":"sha512"),r},Key.prototype.createVerify=function(r){if(void 0===r&&(r=this.defaultHashAlgorithm()),assert.string(r,"hash algorithm"),"ed25519"===this.type&&void 0!==edCompat)return new edCompat.Verifier(this,r);if("curve25519"===this.type)throw new Error("Curve25519 keys are not suitable for signing or verification");var e,t,s;try{t=r.toUpperCase(),e=crypto.createVerify(t)}catch(i){s=i}(void 0===e||s instanceof Error&&s.message.match(/Unknown message digest/))&&(t="RSA-",t+=r.toUpperCase(),e=crypto.createVerify(t)),assert.ok(e,"failed to create verifier");var a=e.verify.bind(e),o=this.toBuffer("pkcs8"),n=this;return e.verify=function(e,t){if(Signature.isSignature(e,[2,0]))return e.type!==n.type?!1:e.hashAlgorithm&&e.hashAlgorithm!==r?!1:a(o,e.toBuffer("asn1"));if("string"==typeof e||Buffer.isBuffer(e))return a(o,e,t);throw Signature.isSignature(e,[1,0])?new Error("signature was created by too old a version of sshpk and cannot be verified"):new TypeError("signature must be a string, Buffer, or Signature object")},e},Key.prototype.createDiffieHellman=function(){if("rsa"===this.type)throw new Error("RSA keys do not support Diffie-Hellman");return new DiffieHellman(this)},Key.prototype.createDH=Key.prototype.createDiffieHellman,Key.parse=function(r,e,t){"string"!=typeof r&&assert.buffer(r,"data"),void 0===e&&(e="auto"),assert.string(e,"format"),"string"==typeof t&&(t={filename:t}),assert.optionalObject(t,"options"),void 0===t&&(t={}),assert.optionalString(t.filename,"options.filename"),void 0===t.filename&&(t.filename="(unnamed)"),assert.object(formats[e],"formats[format]");try{var s=formats[e].read(r,t);return s instanceof PrivateKey&&(s=s.toPublic()),s.comment||(s.comment=t.filename),s}catch(i){if("KeyEncryptedError"===i.name)throw i;throw new KeyParseError(t.filename,e,i)}},Key.isKey=function(r,e){return utils.isCompatible(r,Key,e)},Key.prototype._sshpkApiVersion=[1,5],Key._oldVersionDetect=function(r){return assert.func(r.toBuffer),assert.func(r.fingerprint),r.createDH?[1,4]:r.defaultHashAlgorithm?[1,3]:r.formats.auto?[1,2]:r.formats.pkcs1?[1,1]:[1,0]};