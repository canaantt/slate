<p>node-asn1 is a library for encoding and decoding ASN.1 datatypes in pure JS.
Currently BER encoding is supported; at some point I&rsquo;ll likely have to do DER.</p>

<h2 id="usage">Usage</h2>

<p>Mostly, if you&rsquo;re <em>actually</em> needing to read and write ASN.1, you probably don&rsquo;t
need this readme to explain what and why.  If you have no idea what ASN.1 is,
see this: ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc</p>

<p>The source is pretty much self-explanatory, and has read/write methods for the
common types out there.</p>

<h3 id="decoding">Decoding</h3>

<p>The following reads an ASN.1 sequence with a boolean.</p>

<p>var Ber = require(&lsquo;asn1&rsquo;).Ber;</p>

<p>var reader = new Ber.Reader(new Buffer([0x30, 0x03, 0x01, 0x01, 0xff]));</p>

<p>reader.readSequence();
    console.log(&#39;Sequence len: &rsquo; + reader.length);
    if (reader.peek() === Ber.Boolean)
      console.log(reader.readBoolean());</p>

<h3 id="encoding">Encoding</h3>

<p>The following generates the same payload as above.</p>

<p>var Ber = require(&#39;asn1&rsquo;).Ber;</p>

<p>var writer = new Ber.Writer();</p>

<p>writer.startSequence();
    writer.writeBoolean(true);
    writer.endSequence();</p>

<p>console.log(writer.buffer);</p>

<h2 id="installation">Installation</h2>

<p>npm install asn1</p>

<h2 id="license">License</h2>

<p>MIT.</p>

<h2 id="bugs">Bugs</h2>

<p>See <a href="https://github.com/mcavage/node-asn1/issues">https://github.com/mcavage/node-asn1/issues</a>.</p>
