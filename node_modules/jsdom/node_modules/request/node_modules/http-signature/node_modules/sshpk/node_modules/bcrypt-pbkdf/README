<p>Port of the OpenBSD <code class="prettyprint">bcrypt_pbkdf</code> function to pure Javascript. <code class="prettyprint">npm</code>-ified
version of <a href="https://github.com/devi/tmp/blob/master/js/bcrypt_pbkdf.js">Devi Mandiri&rsquo;s port</a>,
with some minor performance improvements. The code is copied verbatim (and
un-styled) from Devi&rsquo;s work.</p>

<p>This product includes software developed by Niels Provos.</p>

<h2 id="api">API</h2>

<h3 id="bcrypt_pbkdf-pbkdf-pass-passlen-salt-saltlen-key-keylen-rounds"><code class="prettyprint">bcrypt_pbkdf.pbkdf(pass, passlen, salt, saltlen, key, keylen, rounds)</code></h3>

<p>Derive a cryptographic key of arbitrary length from a given password and salt,
using the OpenBSD <code class="prettyprint">bcrypt_pbkdf</code> function. This is a combination of Blowfish and
SHA-512.</p>

<p>See <a href="http://www.tedunangst.com/flak/post/bcrypt-pbkdf">this article</a> for
further information.</p>

<p>Parameters:</p>

<ul>
<li><code class="prettyprint">pass</code>, a Uint8Array of length <code class="prettyprint">passlen</code></li>
<li><code class="prettyprint">passlen</code>, an integer Number</li>
<li><code class="prettyprint">salt</code>, a Uint8Array of length <code class="prettyprint">saltlen</code></li>
<li><code class="prettyprint">saltlen</code>, an integer Number</li>
<li><code class="prettyprint">key</code>, a Uint8Array of length <code class="prettyprint">keylen</code>, will be filled with output</li>
<li><code class="prettyprint">keylen</code>, an integer Number</li>
<li><code class="prettyprint">rounds</code>, an integer Number, number of rounds of the PBKDF to run</li>
</ul>

<h3 id="bcrypt_pbkdf-hash-sha2pass-sha2salt-out"><code class="prettyprint">bcrypt_pbkdf.hash(sha2pass, sha2salt, out)</code></h3>

<p>Calculate a Blowfish hash, given SHA2-512 output of a password and salt. Used as
part of the inner round function in the PBKDF.</p>

<p>Parameters:</p>

<ul>
<li><code class="prettyprint">sha2pass</code>, a Uint8Array of length 64</li>
<li><code class="prettyprint">sha2salt</code>, a Uint8Array of length 64</li>
<li><code class="prettyprint">out</code>, a Uint8Array of length 32, will be filled with output</li>
</ul>
