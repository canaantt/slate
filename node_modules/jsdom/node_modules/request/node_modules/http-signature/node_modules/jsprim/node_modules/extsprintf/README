<h1 id="extsprintf-extended-posix-style-sprintf">extsprintf: extended POSIX-style sprintf</h1>

<p>Stripped down version of s[n]printf(3c).  We make a best effort to throw an
exception when given a format string we don&rsquo;t understand, rather than ignoring
it, so that we won&rsquo;t break existing programs if/when we go implement the rest
of this.</p>

<p>This implementation currently supports specifying</p>

<ul>
<li>field alignment (&rsquo;-&rsquo; flag),</li>
<li>zero-pad (&lsquo;0&rsquo; flag)</li>
<li>always show numeric sign (&rsquo;+&rsquo; flag),</li>
<li>field width</li>
<li>conversions for strings, decimal integers, and floats (numbers).</li>
<li>argument size specifiers.  These are all accepted but ignored, since
Javascript has no notion of the physical size of an argument.</li>
</ul>

<p>Everything else is currently unsupported, most notably: precision, unsigned
numbers, non-decimal numbers, and characters.</p>

<p>Besides the usual POSIX conversions, this implementation supports:</p>

<ul>
<li><code class="prettyprint">%j</code>: pretty-print a JSON object (using node&rsquo;s &ldquo;inspect&rdquo;)</li>
<li><code class="prettyprint">%r</code>: pretty-print an Error object</li>
</ul>

<h1 id="example">Example</h1>

<p>First, install it:</p>

<p># npm install extsprintf</p>

<p>Now, use it:</p>

<p>var mod_extsprintf = require(&#39;extsprintf&rsquo;);
    console.log(mod_extsprintf.sprintf(&#39;hello %25s&rsquo;, &#39;world&rsquo;));</p>

<p>outputs:</p>

<p>hello                     world</p>
