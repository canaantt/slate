<p><a href="https://travis-ci.org/justmoon/node-extend"><img alt="Build Status" src="https://travis-ci.org/justmoon/node-extend.svg" /></a>
<a href="https://david-dm.org/justmoon/node-extend"><img alt="dependency status" src="https://david-dm.org/justmoon/node-extend.svg" /></a>
<a href="https://david-dm.org/justmoon/node-extend#info=devDependencies"><img alt="dev dependency status" src="https://david-dm.org/justmoon/node-extend/dev-status.svg" /></a></p>

<h1 id="extend-for-node-js">extend() for Node.js <sup><a href="https://npmjs.org/package/extend"><img alt="Version Badge" src="http://vb.teelaun.ch/justmoon/node-extend.svg" /></a></sup></h1>

<p><code class="prettyprint">node-extend</code> is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.</p>

<h2 id="installation">Installation</h2>

<p>This package is available on <a href="https://npmjs.org/package/extend">npm</a> as: <code class="prettyprint">extend</code></p>
<pre class="highlight shell"><code>npm install extend
</code></pre>

<h2 id="usage">Usage</h2>

<p><strong>Syntax:</strong> extend <strong>(</strong> [<code class="prettyprint">deep</code>], <code class="prettyprint">target</code>, <code class="prettyprint">object1</code>, [<code class="prettyprint">objectN</code>] <strong>)</strong></p>

<p><em>Extend one object with one or more others, returning the modified object.</em></p>

<p>Keep in mind that the target object will be modified, and will be returned from extend().</p>

<p>If a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).
Undefined properties are not copied. However, properties inherited from the object&rsquo;s prototype will be copied over.
Warning: passing <code class="prettyprint">false</code> as the first argument is not supported.</p>

<h3 id="arguments">Arguments</h3>

<ul>
<li><code class="prettyprint">deep</code> <em>Boolean</em> (optional)
If set, the merge becomes recursive (i.e. deep copy).</li>
<li><code class="prettyprint">target</code>  <em>Object</em>
The object to extend.</li>
<li><code class="prettyprint">object1</code> <em>Object</em>
The object that will be merged into the first.</li>
<li><code class="prettyprint">objectN</code> <em>Object</em> (Optional)
More objects to merge into the first.</li>
</ul>

<h2 id="license">License</h2>

<p><code class="prettyprint">node-extend</code> is licensed under the <a href="http://opensource.org/licenses/MIT">MIT License</a>.</p>

<h2 id="acknowledgements">Acknowledgements</h2>

<p>All credit to the jQuery authors for perfecting this amazing utility.</p>

<p>Ported to Node.js by <a href="https://github.com/justmoon">Stefan Thomas</a> with contributions by <a href="https://github.com/insin">Jonathan Buchanan</a> and <a href="https://github.com/ljharb">Jordan Harband</a>.</p>
