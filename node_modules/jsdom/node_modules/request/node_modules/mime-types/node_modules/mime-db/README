<h1 id="mime-db">mime-db</h1>

<p><a href="https://npmjs.org/package/mime-db"><img alt="NPM Version" src="https://img.shields.io/npm/v/mime-db.svg" /></a>
<a href="https://npmjs.org/package/mime-db"><img alt="NPM Downloads" src="https://img.shields.io/npm/dm/mime-db.svg" /></a>
<a href="http://nodejs.org/download/"><img alt="Node.js Version" src="https://img.shields.io/node/v/mime-db.svg" /></a>
<a href="https://travis-ci.org/jshttp/mime-db"><img alt="Build Status" src="https://img.shields.io/travis/jshttp/mime-db/master.svg" /></a>
<a href="https://coveralls.io/r/jshttp/mime-db?branch=master"><img alt="Coverage Status" src="https://img.shields.io/coveralls/jshttp/mime-db/master.svg" /></a></p>

<p>This is a database of all mime types.
It consists of a single, public JSON file and does not include any logic,
allowing it to remain as un-opinionated as possible with an API.
It aggregates data from the following sources:</p>

<ul>
<li>http://www.iana.org/assignments/media-types/media-types.xhtml</li>
<li>http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types</li>
<li>http://hg.nginx.org/nginx/raw-file/default/conf/mime.types</li>
</ul>

<h2 id="installation">Installation</h2>
<pre class="highlight shell"><code>npm install mime-db
</code></pre>

<h3 id="database-download">Database Download</h3>

<p>If you&rsquo;re crazy enough to use this in the browser, you can just grab the
JSON file using <a href="https://rawgit.com/">RawGit</a>. It is recommended to replace
<code class="prettyprint">master</code> with <a href="https://github.com/jshttp/mime-db/tags">a release tag</a> as the
JSON format may change in the future.</p>
<pre class="highlight plaintext"><code>https://cdn.rawgit.com/jshttp/mime-db/master/db.json
</code></pre>

<h2 id="usage">Usage</h2>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">db</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'mime-db'</span><span class="p">);</span>

<span class="c1">// grab data on .js files</span>
<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">db</span><span class="p">[</span><span class="s1">'application/javascript'</span><span class="p">];</span>
</code></pre>

<h2 id="data-structure">Data Structure</h2>

<p>The JSON file is a map lookup for lowercased mime types.
Each mime type has the following properties:</p>

<ul>
<li><code class="prettyprint">.source</code> - where the mime type is defined.
If not set, it&rsquo;s probably a custom media type.

<ul>
<li><code class="prettyprint">apache</code> - <a href="http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types">Apache common media types</a></li>
<li><code class="prettyprint">iana</code> - <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA-defined media types</a></li>
<li><code class="prettyprint">nginx</code> - <a href="http://hg.nginx.org/nginx/raw-file/default/conf/mime.types">nginx media types</a></li>
</ul></li>
<li><code class="prettyprint">.extensions[]</code> - known extensions associated with this mime type.</li>
<li><code class="prettyprint">.compressible</code> - whether a file of this type can be gzipped.</li>
<li><code class="prettyprint">.charset</code> - the default charset associated with this type, if any.</li>
</ul>

<p>If unknown, every property could be <code class="prettyprint">undefined</code>.</p>

<h2 id="contributing">Contributing</h2>

<p>To edit the database, only make PRs against <code class="prettyprint">src/custom.json</code> or
<code class="prettyprint">src/custom-suffix.json</code>.</p>

<p>To update the build, run <code class="prettyprint">npm run build</code>.</p>

<h2 id="adding-custom-media-types">Adding Custom Media Types</h2>

<p>The best way to get new media types included in this library is to register
them with the IANA. The community registration procedure is outlined in
<a href="http://tools.ietf.org/html/rfc6838#section-5">RFC 6838 section 5</a>. Types
registered with the IANA are automatically pulled into this library.</p>
