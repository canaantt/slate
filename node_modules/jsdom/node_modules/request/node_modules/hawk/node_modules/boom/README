<p><img alt="boom Logo" src="https://raw.github.com/hapijs/boom/master/images/boom.png" /></p>

<p>HTTP-friendly error objects</p>

<p><a href="http://travis-ci.org/hapijs/boom"><img alt="Build Status" src="https://secure.travis-ci.org/hapijs/boom.png" /></a>
<a href="https://www.npmjs.com/package/boom"><img alt="Current Version" src="https://img.shields.io/npm/v/boom.svg" /></a></p>

<p>Lead Maintainer: <a href="https://github.com/arb">Adam Bretz</a></p>

<p><strong>boom</strong> provides a set of utilities for returning HTTP errors. Each utility returns a <code class="prettyprint">Boom</code> error response
object (instance of <code class="prettyprint">Error</code>) which includes the following properties:
- <code class="prettyprint">isBoom</code> - if <code class="prettyprint">true</code>, indicates this is a <code class="prettyprint">Boom</code> object instance.
- <code class="prettyprint">isServer</code> - convenience bool indicating status code &gt;= 500.
- <code class="prettyprint">message</code> - the error message.
- <code class="prettyprint">output</code> - the formatted response. Can be directly manipulated after object construction to return a custom
  error response. Allowed root keys:
    - <code class="prettyprint">statusCode</code> - the HTTP status code (typically 4xx or 5xx).
    - <code class="prettyprint">headers</code> - an object containing any HTTP headers where each key is a header name and value is the header content.
    - <code class="prettyprint">payload</code> - the formatted object used as the response payload (stringified). Can be directly manipulated but any
      changes will be lost
      if <code class="prettyprint">reformat()</code> is called. Any content allowed and by default includes the following content:
        - <code class="prettyprint">statusCode</code> - the HTTP status code, derived from <code class="prettyprint">error.output.statusCode</code>.
        - <code class="prettyprint">error</code> - the HTTP status message (e.g. &lsquo;Bad Request&rsquo;, &#39;Internal Server Error&rsquo;) derived from <code class="prettyprint">statusCode</code>.
        - <code class="prettyprint">message</code> - the error message derived from <code class="prettyprint">error.message</code>.
- inherited <code class="prettyprint">Error</code> properties.</p>

<p>The <code class="prettyprint">Boom</code> object also supports the following method:
- <code class="prettyprint">reformat()</code> - rebuilds <code class="prettyprint">error.output</code> using the other object properties.</p>

<h2 id="overview">Overview</h2>

<ul>
<li>Helper methods

<ul>
<li><a href="#wraperror-statuscode-message"><code class="prettyprint">wrap(error, [statusCode], [message])</code></a></li>
<li><a href="#createstatuscode-message-data"><code class="prettyprint">create(statusCode, [message], [data])</code></a></li>
</ul></li>
<li>HTTP 4xx Errors

<ul>
<li>400: <a href="#boombadrequestmessage-data"><code class="prettyprint">Boom.badRequest([message], [data])</code></a></li>
<li>401: <a href="#boomunauthorizedmessage-scheme-attributes"><code class="prettyprint">Boom.unauthorized([message], [scheme], [attributes])</code></a></li>
<li>403: <a href="#boomforbiddenmessage-data"><code class="prettyprint">Boom.forbidden([message], [data])</code></a></li>
<li>404: <a href="#boomnotfoundmessage-data"><code class="prettyprint">Boom.notFound([message], [data])</code></a></li>
<li>405: <a href="#boommethodnotallowedmessage-data"><code class="prettyprint">Boom.methodNotAllowed([message], [data])</code></a></li>
<li>406: <a href="#boomnotacceptablemessage-data"><code class="prettyprint">Boom.notAcceptable([message], [data])</code></a></li>
<li>407: <a href="#boomproxyauthrequiredmessage-data"><code class="prettyprint">Boom.proxyAuthRequired([message], [data])</code></a></li>
<li>408: <a href="#boomclienttimeoutmessage-data"><code class="prettyprint">Boom.clientTimeout([message], [data])</code></a></li>
<li>409: <a href="#boomconflictmessage-data"><code class="prettyprint">Boom.conflict([message], [data])</code></a></li>
<li>410: <a href="#boomresourcegonemessage-data"><code class="prettyprint">Boom.resourceGone([message], [data])</code></a></li>
<li>411: <a href="#boomlengthrequiredmessage-data"><code class="prettyprint">Boom.lengthRequired([message], [data])</code></a></li>
<li>412: <a href="#boompreconditionfailedmessage-data"><code class="prettyprint">Boom.preconditionFailed([message], [data])</code></a></li>
<li>413: <a href="#boomentitytoolargemessage-data"><code class="prettyprint">Boom.entityTooLarge([message], [data])</code></a></li>
<li>414: <a href="#boomuritoolongmessage-data"><code class="prettyprint">Boom.uriTooLong([message], [data])</code></a></li>
<li>415: <a href="#boomunsupportedmediatypemessage-data"><code class="prettyprint">Boom.unsupportedMediaType([message], [data])</code></a></li>
<li>416: <a href="#boomrangenotsatisfiablemessage-data"><code class="prettyprint">Boom.rangeNotSatisfiable([message], [data])</code></a></li>
<li>417: <a href="#boomexpectationfailedmessage-data"><code class="prettyprint">Boom.expectationFailed([message], [data])</code></a></li>
<li>422: <a href="#boombaddatamessage-data"><code class="prettyprint">Boom.badData([message], [data])</code></a></li>
<li>428: <a href="#boompreconditionrequiredmessage-data"><code class="prettyprint">Boom.preconditionRequired([message], [data])</code></a></li>
<li>429: <a href="#boomtoomanyrequestsmessage-data"><code class="prettyprint">Boom.tooManyRequests([message], [data])</code></a></li>
</ul></li>
<li>HTTP 5xx Errors

<ul>
<li>500: <a href="#boombadimplementationmessage-data"><code class="prettyprint">Boom.badImplementation([message], [data])</code></a></li>
<li>501: <a href="#boomnotimplementedmessage-data"><code class="prettyprint">Boom.notImplemented([message], [data])</code></a></li>
<li>502: <a href="#boombadgatewaymessage-data"><code class="prettyprint">Boom.badGateway([message], [data])</code></a></li>
<li>503: <a href="#boomservertimeoutmessage-data"><code class="prettyprint">Boom.serverTimeout([message], [data])</code></a></li>
<li>504: <a href="#boomgatewaytimeoutmessage-data"><code class="prettyprint">Boom.gatewayTimeout([message], [data])</code></a></li>
</ul></li>
<li><a href="#faq">FAQ</a></li>
</ul>

<h2 id="helper-methods">Helper Methods</h2>

<h3 id="wrap-error-statuscode-message"><code class="prettyprint">wrap(error, [statusCode], [message])</code></h3>

<p>Decorates an error with the <strong>boom</strong> properties where:
- <code class="prettyprint">error</code> - the error object to wrap. If <code class="prettyprint">error</code> is already a <strong>boom</strong> object, returns back the same object.
- <code class="prettyprint">statusCode</code> - optional HTTP status code. Defaults to <code class="prettyprint">500</code>.
- <code class="prettyprint">message</code> - optional message string. If the error already has a message, it adds the message as a prefix.
  Defaults to no message.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">error</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">'Unexpected input'</span><span class="p">);</span>
<span class="nx">Boom</span><span class="p">.</span><span class="nx">wrap</span><span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="mi">400</span><span class="p">);</span>
</code></pre>

<h3 id="create-statuscode-message-data"><code class="prettyprint">create(statusCode, [message], [data])</code></h3>

<p>Generates an <code class="prettyprint">Error</code> object with the <strong>boom</strong> decorations where:
- <code class="prettyprint">statusCode</code> - an HTTP error code number. Must be greater or equal 400.
- <code class="prettyprint">message</code> - optional message string.
- <code class="prettyprint">data</code> - additional error data set to <code class="prettyprint">error.data</code> property.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">error</span> <span class="o">=</span> <span class="nx">Boom</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="mi">400</span><span class="p">,</span> <span class="s1">'Bad request'</span><span class="p">,</span> <span class="p">{</span> <span class="na">timestamp</span><span class="p">:</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="p">});</span>
</code></pre>

<h2 id="http-4xx-errors">HTTP 4xx Errors</h2>

<h3 id="boom-badrequest-message-data"><code class="prettyprint">Boom.badRequest([message], [data])</code></h3>

<p>Returns a 400 Bad Request error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">badRequest</span><span class="p">(</span><span class="s1">'invalid query'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">400</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bad Request"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid query"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-unauthorized-message-scheme-attributes"><code class="prettyprint">Boom.unauthorized([message], [scheme], [attributes])</code></h3>

<p>Returns a 401 Unauthorized error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">scheme</code> can be one of the following:
  - an authentication scheme name
  - an array of string values. These values will be separated by &rsquo;, &rsquo; and set to the &#39;WWW-Authenticate&rsquo; header.
- <code class="prettyprint">attributes</code> - an object of values to use while setting the &#39;WWW-Authenticate&rsquo; header. This value is only used
  when <code class="prettyprint">schema</code> is a string, otherwise it is ignored. Every key/value pair will be included in the
  &#39;WWW-Authenticate&rsquo; in the format of &#39;key=&ldquo;value&rdquo;&rsquo; as well as in the response payload under the <code class="prettyprint">attributes</code> key.
  <code class="prettyprint">null</code> and <code class="prettyprint">undefined</code> will be replaced with an empty string. If <code class="prettyprint">attributes</code> is set, <code class="prettyprint">message</code> will be used as
  the &#39;error&rsquo; segment of the &#39;WWW-Authenticate&rsquo; header. If <code class="prettyprint">message</code> is unset, the &#39;error&rsquo; segment of the header
  will not be present and <code class="prettyprint">isMissing</code> will be true on the error object.</p>

<p>If either <code class="prettyprint">scheme</code> or <code class="prettyprint">attributes</code> are set, the resultant <code class="prettyprint">Boom</code> object will have the &#39;WWW-Authenticate&rsquo; header set for the response.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">unauthorized</span><span class="p">(</span><span class="s1">'invalid password'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response:</p>
<pre class="highlight json"><code><span class="s2">"payload"</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">401</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Unauthorized"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid password"</span><span class="w">
</span><span class="p">}</span><span class="err">,</span><span class="w">
</span><span class="s2">"headers"</span><span class="w"> </span><span class="p">{}</span><span class="w">
</span></code></pre>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">unauthorized</span><span class="p">(</span><span class="s1">'invalid password'</span><span class="p">,</span> <span class="s1">'sample'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response:</p>
<pre class="highlight json"><code><span class="s2">"payload"</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">401</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Unauthorized"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid password"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"attributes"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid password"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="err">,</span><span class="w">
</span><span class="s2">"headers"</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nt">"WWW-Authenticate"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sample error=\"invalid password\""</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">unauthorized</span><span class="p">(</span><span class="s1">'invalid password'</span><span class="p">,</span> <span class="s1">'sample'</span><span class="p">,</span> <span class="p">{</span> <span class="na">ttl</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="na">cache</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span> <span class="na">foo</span><span class="p">:</span> <span class="s1">'bar'</span> <span class="p">});</span>
</code></pre>

<p>Generates the following response:</p>
<pre class="highlight json"><code><span class="s2">"payload"</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">401</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Unauthorized"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid password"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"attributes"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid password"</span><span class="p">,</span><span class="w">
        </span><span class="nt">"ttl"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
        </span><span class="nt">"cache"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
        </span><span class="nt">"foo"</span><span class="p">:</span><span class="w"> </span><span class="s2">"bar"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="err">,</span><span class="w">
</span><span class="s2">"headers"</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nt">"WWW-Authenticate"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sample ttl=\"0\", cache=\"\", foo=\"bar\", error=\"invalid password\""</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-forbidden-message-data"><code class="prettyprint">Boom.forbidden([message], [data])</code></h3>

<p>Returns a 403 Forbidden error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">forbidden</span><span class="p">(</span><span class="s1">'try again some time'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">403</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Forbidden"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"try again some time"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-notfound-message-data"><code class="prettyprint">Boom.notFound([message], [data])</code></h3>

<p>Returns a 404 Not Found error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">notFound</span><span class="p">(</span><span class="s1">'missing'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">404</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Not Found"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"missing"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-methodnotallowed-message-data"><code class="prettyprint">Boom.methodNotAllowed([message], [data])</code></h3>

<p>Returns a 405 Method Not Allowed error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">methodNotAllowed</span><span class="p">(</span><span class="s1">'that method is not allowed'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">405</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Method Not Allowed"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"that method is not allowed"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-notacceptable-message-data"><code class="prettyprint">Boom.notAcceptable([message], [data])</code></h3>

<p>Returns a 406 Not Acceptable error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">notAcceptable</span><span class="p">(</span><span class="s1">'unacceptable'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">406</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Not Acceptable"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"unacceptable"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-proxyauthrequired-message-data"><code class="prettyprint">Boom.proxyAuthRequired([message], [data])</code></h3>

<p>Returns a 407 Proxy Authentication Required error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">proxyAuthRequired</span><span class="p">(</span><span class="s1">'auth missing'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">407</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Proxy Authentication Required"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"auth missing"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-clienttimeout-message-data"><code class="prettyprint">Boom.clientTimeout([message], [data])</code></h3>

<p>Returns a 408 Request Time-out error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">clientTimeout</span><span class="p">(</span><span class="s1">'timed out'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">408</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Request Time-out"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"timed out"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-conflict-message-data"><code class="prettyprint">Boom.conflict([message], [data])</code></h3>

<p>Returns a 409 Conflict error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">conflict</span><span class="p">(</span><span class="s1">'there was a conflict'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">409</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Conflict"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"there was a conflict"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-resourcegone-message-data"><code class="prettyprint">Boom.resourceGone([message], [data])</code></h3>

<p>Returns a 410 Gone error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">resourceGone</span><span class="p">(</span><span class="s1">'it is gone'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">410</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Gone"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"it is gone"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-lengthrequired-message-data"><code class="prettyprint">Boom.lengthRequired([message], [data])</code></h3>

<p>Returns a 411 Length Required error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">lengthRequired</span><span class="p">(</span><span class="s1">'length needed'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">411</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Length Required"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"length needed"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-preconditionfailed-message-data"><code class="prettyprint">Boom.preconditionFailed([message], [data])</code></h3>

<p>Returns a 412 Precondition Failed error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">preconditionFailed</span><span class="p">();</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">412</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Precondition Failed"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-entitytoolarge-message-data"><code class="prettyprint">Boom.entityTooLarge([message], [data])</code></h3>

<p>Returns a 413 Request Entity Too Large error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">entityTooLarge</span><span class="p">(</span><span class="s1">'too big'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">413</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Request Entity Too Large"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"too big"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-uritoolong-message-data"><code class="prettyprint">Boom.uriTooLong([message], [data])</code></h3>

<p>Returns a 414 Request-URI Too Large error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">uriTooLong</span><span class="p">(</span><span class="s1">'uri is too long'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">414</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Request-URI Too Large"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"uri is too long"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-unsupportedmediatype-message-data"><code class="prettyprint">Boom.unsupportedMediaType([message], [data])</code></h3>

<p>Returns a 415 Unsupported Media Type error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">unsupportedMediaType</span><span class="p">(</span><span class="s1">'that media is not supported'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">415</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Unsupported Media Type"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"that media is not supported"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-rangenotsatisfiable-message-data"><code class="prettyprint">Boom.rangeNotSatisfiable([message], [data])</code></h3>

<p>Returns a 416 Requested Range Not Satisfiable error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">rangeNotSatisfiable</span><span class="p">();</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">416</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Requested Range Not Satisfiable"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-expectationfailed-message-data"><code class="prettyprint">Boom.expectationFailed([message], [data])</code></h3>

<p>Returns a 417 Expectation Failed error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">expectationFailed</span><span class="p">(</span><span class="s1">'expected this to work'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">417</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Expectation Failed"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"expected this to work"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-baddata-message-data"><code class="prettyprint">Boom.badData([message], [data])</code></h3>

<p>Returns a 422 Unprocessable Entity error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">badData</span><span class="p">(</span><span class="s1">'your data is bad and you should feel bad'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">422</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Unprocessable Entity"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"your data is bad and you should feel bad"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-preconditionrequired-message-data"><code class="prettyprint">Boom.preconditionRequired([message], [data])</code></h3>

<p>Returns a 428 Precondition Required error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">preconditionRequired</span><span class="p">(</span><span class="s1">'you must supply an If-Match header'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">428</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Precondition Required"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"you must supply an If-Match header"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-toomanyrequests-message-data"><code class="prettyprint">Boom.tooManyRequests([message], [data])</code></h3>

<p>Returns a 429 Too Many Requests error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">tooManyRequests</span><span class="p">(</span><span class="s1">'you have exceeded your request limit'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">429</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Too Many Requests"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"you have exceeded your request limit"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h2 id="http-5xx-errors">HTTP 5xx Errors</h2>

<p>All 500 errors hide your message from the end user. Your message is recorded in the server log.</p>

<h3 id="boom-badimplementation-message-data"><code class="prettyprint">Boom.badImplementation([message], [data])</code></h3>

<p>Returns a 500 Internal Server Error error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">badImplementation</span><span class="p">(</span><span class="s1">'terrible implementation'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">500</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Internal Server Error"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"An internal server error occurred"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-notimplemented-message-data"><code class="prettyprint">Boom.notImplemented([message], [data])</code></h3>

<p>Returns a 501 Not Implemented error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">notImplemented</span><span class="p">(</span><span class="s1">'method not implemented'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">501</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Not Implemented"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"method not implemented"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-badgateway-message-data"><code class="prettyprint">Boom.badGateway([message], [data])</code></h3>

<p>Returns a 502 Bad Gateway error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">badGateway</span><span class="p">(</span><span class="s1">'that is a bad gateway'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">502</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bad Gateway"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"that is a bad gateway"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-servertimeout-message-data"><code class="prettyprint">Boom.serverTimeout([message], [data])</code></h3>

<p>Returns a 503 Service Unavailable error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">serverTimeout</span><span class="p">(</span><span class="s1">'unavailable'</span><span class="p">);</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">503</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Service Unavailable"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"unavailable"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h3 id="boom-gatewaytimeout-message-data"><code class="prettyprint">Boom.gatewayTimeout([message], [data])</code></h3>

<p>Returns a 504 Gateway Time-out error where:
- <code class="prettyprint">message</code> - optional message.
- <code class="prettyprint">data</code> - optional additional error data.</p>
<pre class="highlight javascript"><code><span class="nx">Boom</span><span class="p">.</span><span class="nx">gatewayTimeout</span><span class="p">();</span>
</code></pre>

<p>Generates the following response payload:</p>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="nt">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">504</span><span class="p">,</span><span class="w">
    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Gateway Time-out"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>

<h2 id="f-a-q">F.A.Q.</h2>

<h6 id="how-do-i-include-extra-information-in-my-responses-output-payload-is-missing-data-what-gives">How do I include extra information in my responses? <code class="prettyprint">output.payload</code> is missing <code class="prettyprint">data</code>, what gives?</h6>

<p>There is a reason the values passed back in the response payloads are pretty locked down. It&rsquo;s mostly for security and to not leak any important information back to the client. This means you will need to put in a little more effort to include extra information about your custom error. Check out the <a href="https://github.com/hapijs/hapi/blob/master/API.md#error-transformation">&ldquo;Error transformation&rdquo;</a> section in the hapi documentation.</p>
