<h2 id="caseless-wrap-an-object-to-set-and-get-property-with-caseless-semantics-but-also-preserve-caseing">Caseless &ndash; wrap an object to set and get property with caseless semantics but also preserve caseing.</h2>

<p>This library is incredibly useful when working with HTTP headers. It allows you to get/set/check for headers in a caseless manner while also preserving the caseing of headers the first time they are set.</p>

<h2 id="usage">Usage</h2>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">caseless</span><span class="p">(</span><span class="nx">headers</span><span class="p">)</span>
  <span class="p">;</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'a-Header'</span><span class="p">,</span> <span class="s1">'asdf'</span><span class="p">)</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'a-header'</span><span class="p">)</span> <span class="o">===</span> <span class="s1">'asdf'</span>
</code></pre>

<h2 id="has-key">has(key)</h2>

<p>Has takes a name and if it finds a matching header will return that header name with the preserved caseing it was set with.</p>
<pre class="highlight javascript"><code><span class="nx">c</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">'a-header'</span><span class="p">)</span> <span class="o">===</span> <span class="s1">'a-Header'</span>
</code></pre>

<h2 id="set-key-value-clobber-true">set(key, value[, clobber=true])</h2>

<p>Set is fairly straight forward except that if the header exists and clobber is disabled it will add <code class="prettyprint">&#39;,&#39;+value</code> to the existing header.</p>
<pre class="highlight javascript"><code><span class="nx">c</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'a-Header'</span><span class="p">,</span> <span class="s1">'fdas'</span><span class="p">)</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'a-HEADER'</span><span class="p">,</span> <span class="s1">'more'</span><span class="p">,</span> <span class="kc">false</span><span class="p">)</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'a-header'</span><span class="p">)</span> <span class="o">===</span> <span class="s1">'fdsa,more'</span>
</code></pre>

<h2 id="swap-key">swap(key)</h2>

<p>Swaps the casing of a header with the new one that is passed in.</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">caseless</span><span class="p">(</span><span class="nx">headers</span><span class="p">)</span>
  <span class="p">;</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'a-Header'</span><span class="p">,</span> <span class="s1">'fdas'</span><span class="p">)</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">swap</span><span class="p">(</span><span class="s1">'a-HEADER'</span><span class="p">)</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">'a-header'</span><span class="p">)</span> <span class="o">===</span> <span class="s1">'a-HEADER'</span>
<span class="nx">headers</span> <span class="o">===</span> <span class="p">{</span><span class="s1">'a-HEADER'</span><span class="p">:</span> <span class="s1">'fdas'</span><span class="p">}</span>
</code></pre>
