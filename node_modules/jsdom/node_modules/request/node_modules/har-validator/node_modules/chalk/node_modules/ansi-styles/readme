<h1 id="ansi-styles">ansi-styles <a href="https://travis-ci.org/chalk/ansi-styles"><img alt="Build Status" src="https://travis-ci.org/chalk/ansi-styles.svg?branch=master" /></a></h1>

<blockquote>
<p><a href="http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles">ANSI escape codes</a> for styling strings in the terminal</p>
</blockquote>

<p>You probably want the higher-level <a href="https://github.com/chalk/chalk">chalk</a> module for styling your strings.</p>

<p><img src="/images/screenshot.png" /></p>

<h2 id="install">Install</h2>
<pre class="highlight plaintext"><code>$ npm install --save ansi-styles
</code></pre>

<h2 id="usage">Usage</h2>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">ansi</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'ansi-styles'</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ansi</span><span class="p">.</span><span class="nx">green</span><span class="p">.</span><span class="nx">open</span> <span class="o">+</span> <span class="s1">'Hello world!'</span> <span class="o">+</span> <span class="nx">ansi</span><span class="p">.</span><span class="nx">green</span><span class="p">.</span><span class="nx">close</span><span class="p">);</span>
</code></pre>

<h2 id="api">API</h2>

<p>Each style has an <code class="prettyprint">open</code> and <code class="prettyprint">close</code> property.</p>

<h2 id="styles">Styles</h2>

<h3 id="modifiers">Modifiers</h3>

<ul>
<li><code class="prettyprint">reset</code></li>
<li><code class="prettyprint">bold</code></li>
<li><code class="prettyprint">dim</code></li>
<li><code class="prettyprint">italic</code> <em>(not widely supported)</em></li>
<li><code class="prettyprint">underline</code></li>
<li><code class="prettyprint">inverse</code></li>
<li><code class="prettyprint">hidden</code></li>
<li><code class="prettyprint">strikethrough</code> <em>(not widely supported)</em></li>
</ul>

<h3 id="colors">Colors</h3>

<ul>
<li><code class="prettyprint">black</code></li>
<li><code class="prettyprint">red</code></li>
<li><code class="prettyprint">green</code></li>
<li><code class="prettyprint">yellow</code></li>
<li><code class="prettyprint">blue</code></li>
<li><code class="prettyprint">magenta</code></li>
<li><code class="prettyprint">cyan</code></li>
<li><code class="prettyprint">white</code></li>
<li><code class="prettyprint">gray</code></li>
</ul>

<h3 id="background-colors">Background colors</h3>

<ul>
<li><code class="prettyprint">bgBlack</code></li>
<li><code class="prettyprint">bgRed</code></li>
<li><code class="prettyprint">bgGreen</code></li>
<li><code class="prettyprint">bgYellow</code></li>
<li><code class="prettyprint">bgBlue</code></li>
<li><code class="prettyprint">bgMagenta</code></li>
<li><code class="prettyprint">bgCyan</code></li>
<li><code class="prettyprint">bgWhite</code></li>
</ul>

<h2 id="advanced-usage">Advanced usage</h2>

<p>By default you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don&rsquo;t show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.</p>

<ul>
<li><code class="prettyprint">ansi.modifiers</code></li>
<li><code class="prettyprint">ansi.colors</code></li>
<li><code class="prettyprint">ansi.bgColors</code></li>
</ul>

<h6 id="example">Example</h6>
<pre class="highlight javascript"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ansi</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">green</span><span class="p">.</span><span class="nx">open</span><span class="p">);</span>
</code></pre>

<h2 id="license">License</h2>

<p>MIT Â© <a href="http://sindresorhus.com">Sindre Sorhus</a></p>
