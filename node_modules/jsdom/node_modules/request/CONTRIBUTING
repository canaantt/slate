<h1 id="contributing-to-request">Contributing to Request</h1>

<p>:+1::tada: First off, thanks for taking the time to contribute! :tada::+1:</p>

<p>The following is a set of guidelines for contributing to Request and its packages, which are hosted in the <a href="https://github.com/request">Request Organization</a> on GitHub.
These are just guidelines, not rules, use your best judgment and feel free to propose changes to this document in a pull request.</p>

<h2 id="submitting-an-issue">Submitting an Issue</h2>

<ol>
<li>Provide a small self <strong>sufficient</strong> code example to <strong>reproduce</strong> the issue.</li>
<li>Run your test code using <a href="https://github.com/request/request-debug">request-debug</a> and copy/paste the results inside the issue.</li>
<li>You should <strong>always</strong> use fenced code blocks when submitting code examples or any other formatted output:
<pre>
<code class="prettyprint">js
put your javascript code here
</code></li>
</ol>
<pre class="highlight plaintext"><code>  put any other formatted output here,
  like for example the one returned from using request-debug
</code></pre>

<p></pre></p>

<p>If the problem cannot be reliably reproduced, the issue will be marked as <code class="prettyprint">Not enough info (see CONTRIBUTING.md)</code>.</p>

<p>If the problem is not related to request the issue will be marked as <code class="prettyprint">Help (please use Stackoverflow)</code>.</p>

<h2 id="submitting-a-pull-request">Submitting a Pull Request</h2>

<ol>
<li>In almost all of the cases your PR <strong>needs tests</strong>. Make sure you have any.</li>
<li>Run <code class="prettyprint">npm test</code> locally. Fix any errors before pushing to GitHub.</li>
<li>After submitting the PR a build will be triggered on TravisCI. Wait for it to ends and make sure all jobs are passing.</li>
</ol>

<hr>

<h2 id="becoming-a-contributor">Becoming a Contributor</h2>

<p>Individuals making significant and valuable contributions are given
commit-access to the project to contribute as they see fit. This project is
more like an open wiki than a standard guarded open source project.</p>

<h2 id="rules">Rules</h2>

<p>There are a few basic ground-rules for contributors:</p>

<ol>
<li><strong>No <code class="prettyprint">--force</code> pushes</strong> or modifying the Git history in any way.</li>
<li><strong>Non-master branches</strong> ought to be used for ongoing work.</li>
<li><strong>Any</strong> change should be added through Pull Request.</li>
<li><strong>External API changes and significant modifications</strong> ought to be subject
to an <strong>internal pull-request</strong> to solicit feedback from other contributors.</li>
<li>Internal pull-requests to solicit feedback are <em>encouraged</em> for any other
non-trivial contribution but left to the discretion of the contributor.</li>
<li>For significant changes wait a full 24 hours before merging so that active
contributors who are distributed throughout the world have a chance to weigh
in.</li>
<li>Contributors should attempt to adhere to the prevailing code-style.</li>
<li>Run <code class="prettyprint">npm test</code> locally before submitting your PR, to catch any easy to miss
style &amp; testing issues.  To diagnose test failures, there are two ways to
run a single test file:

<ul>
<li><code class="prettyprint">node_modules/.bin/taper tests/test-file.js</code> - run using the default
<a href="https://github.com/nylen/taper"><code class="prettyprint">taper</code></a> test reporter.</li>
<li><code class="prettyprint">node tests/test-file.js</code> - view the raw
<a href="https://testanything.org/">tap</a> output.</li>
</ul></li>
</ol>

<h2 id="releases">Releases</h2>

<p>Declaring formal releases remains the prerogative of the project maintainer.</p>

<h2 id="changes-to-this-arrangement">Changes to this arrangement</h2>

<p>This is an experiment and feedback is welcome! This document may also be
subject to pull-requests or changes by contributors where you believe you have
something valuable to add or change.</p>
