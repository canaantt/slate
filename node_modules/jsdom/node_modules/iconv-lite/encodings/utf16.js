"use strict";function Utf16BECodec(){}function Utf16BEEncoder(){}function Utf16BEDecoder(){this.overflowByte=-1}function Utf16Codec(t,e){this.iconv=e}function Utf16Encoder(t,e){t=t||{},void 0===t.addBOM&&(t.addBOM=!0),this.encoder=e.iconv.getEncoder("utf-16le",t)}function Utf16Decoder(t,e){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=t||{},this.iconv=e.iconv}function detectEncoding(t,e){var o=e||"utf-16le";if(t.length>=2)if(254==t[0]&&255==t[1])o="utf-16be";else if(255==t[0]&&254==t[1])o="utf-16le";else{for(var n=0,i=0,r=Math.min(t.length-t.length%2,64),c=0;r>c;c+=2)0===t[c]&&0!==t[c+1]&&i++,0!==t[c]&&0===t[c+1]&&n++;i>n?o="utf-16be":n>i&&(o="utf-16le")}return o}exports.utf16be=Utf16BECodec,Utf16BECodec.prototype.encoder=Utf16BEEncoder,Utf16BECodec.prototype.decoder=Utf16BEDecoder,Utf16BECodec.prototype.bomAware=!0,Utf16BEEncoder.prototype.write=function(t){for(var e=new Buffer(t,"ucs2"),o=0;o<e.length;o+=2){var n=e[o];e[o]=e[o+1],e[o+1]=n}return e},Utf16BEEncoder.prototype.end=function(){},Utf16BEDecoder.prototype.write=function(t){if(0==t.length)return"";var e=new Buffer(t.length+1),o=0,n=0;for(-1!==this.overflowByte&&(e[0]=t[0],e[1]=this.overflowByte,o=1,n=2);o<t.length-1;o+=2,n+=2)e[n]=t[o+1],e[n+1]=t[o];return this.overflowByte=o==t.length-1?t[t.length-1]:-1,e.slice(0,n).toString("ucs2")},Utf16BEDecoder.prototype.end=function(){},exports.utf16=Utf16Codec,Utf16Codec.prototype.encoder=Utf16Encoder,Utf16Codec.prototype.decoder=Utf16Decoder,Utf16Encoder.prototype.write=function(t){return this.encoder.write(t)},Utf16Encoder.prototype.end=function(){return this.encoder.end()},Utf16Decoder.prototype.write=function(t){if(!this.decoder){if(this.initialBytes.push(t),this.initialBytesLen+=t.length,this.initialBytesLen<16)return"";var t=Buffer.concat(this.initialBytes),e=detectEncoding(t,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(t)},Utf16Decoder.prototype.end=function(){if(!this.decoder){var t=Buffer.concat(this.initialBytes),e=detectEncoding(t,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options);var o=this.decoder.write(t),n=this.decoder.end();return n?o+n:o}return this.decoder.end()};