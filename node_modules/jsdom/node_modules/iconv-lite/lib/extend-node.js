"use strict";module.exports=function(e){var t=void 0;e.supportsNodeEncodingsExtension=!(new Buffer(0)instanceof Uint8Array),e.extendNodeEncodings=function(){if(!t){if(t={},!e.supportsNodeEncodingsExtension)return console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node"),void console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");var o={hex:!0,utf8:!0,"utf-8":!0,ascii:!0,binary:!0,base64:!0,ucs2:!0,"ucs-2":!0,utf16le:!0,"utf-16le":!0};Buffer.isNativeEncoding=function(e){return e&&o[e.toLowerCase()]};var r=require("buffer").SlowBuffer;if(t.SlowBufferToString=r.prototype.toString,r.prototype.toString=function(o,r,n){return o=String(o||"utf8").toLowerCase(),Buffer.isNativeEncoding(o)?t.SlowBufferToString.call(this,o,r,n):("undefined"==typeof r&&(r=0),"undefined"==typeof n&&(n=this.length),e.decode(this.slice(r,n),o))},t.SlowBufferWrite=r.prototype.write,r.prototype.write=function(o,r,n,i){if(isFinite(r))isFinite(n)||(i=n,n=void 0);else{var f=i;i=r,r=n,n=f}r=+r||0;var u=this.length-r;if(n?(n=+n,n>u&&(n=u)):n=u,i=String(i||"utf8").toLowerCase(),Buffer.isNativeEncoding(i))return t.SlowBufferWrite.call(this,o,r,n,i);if(o.length>0&&(0>n||0>r))throw new RangeError("attempt to write beyond buffer bounds");var s=e.encode(o,i);return s.length<n&&(n=s.length),s.copy(this,r,0,n),n},t.BufferIsEncoding=Buffer.isEncoding,Buffer.isEncoding=function(t){return Buffer.isNativeEncoding(t)||e.encodingExists(t)},t.BufferByteLength=Buffer.byteLength,Buffer.byteLength=r.byteLength=function(o,r){return r=String(r||"utf8").toLowerCase(),Buffer.isNativeEncoding(r)?t.BufferByteLength.call(this,o,r):e.encode(o,r).length},t.BufferToString=Buffer.prototype.toString,Buffer.prototype.toString=function(o,r,n){return o=String(o||"utf8").toLowerCase(),Buffer.isNativeEncoding(o)?t.BufferToString.call(this,o,r,n):("undefined"==typeof r&&(r=0),"undefined"==typeof n&&(n=this.length),e.decode(this.slice(r,n),o))},t.BufferWrite=Buffer.prototype.write,Buffer.prototype.write=function(o,r,n,i){var f=r,u=n,s=i;if(isFinite(r))isFinite(n)||(i=n,n=void 0);else{var d=i;i=r,r=n,n=d}if(i=String(i||"utf8").toLowerCase(),Buffer.isNativeEncoding(i))return t.BufferWrite.call(this,o,f,u,s);r=+r||0;var c=this.length-r;if(n?(n=+n,n>c&&(n=c)):n=c,o.length>0&&(0>n||0>r))throw new RangeError("attempt to write beyond buffer bounds");var g=e.encode(o,i);return g.length<n&&(n=g.length),g.copy(this,r,0,n),n},e.supportsStreams){var n=require("stream").Readable;t.ReadableSetEncoding=n.prototype.setEncoding,n.prototype.setEncoding=function(t,o){this._readableState.decoder=e.getDecoder(t,o),this._readableState.encoding=t},n.prototype.collect=e._collect}}},e.undoExtendNodeEncodings=function(){if(e.supportsNodeEncodingsExtension){if(!t)throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");delete Buffer.isNativeEncoding;var o=require("buffer").SlowBuffer;if(o.prototype.toString=t.SlowBufferToString,o.prototype.write=t.SlowBufferWrite,Buffer.isEncoding=t.BufferIsEncoding,Buffer.byteLength=t.BufferByteLength,Buffer.prototype.toString=t.BufferToString,Buffer.prototype.write=t.BufferWrite,e.supportsStreams){var r=require("stream").Readable;r.prototype.setEncoding=t.ReadableSetEncoding,delete r.prototype.collect}t=void 0}}};