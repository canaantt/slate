<h1 id="acorn-globals">acorn-globals</h1>

<p>Detect global variables in JavaScript using acorn</p>

<p><a href="https://travis-ci.org/ForbesLindesay/acorn-globals"><img alt="Build Status" src="https://img.shields.io/travis/ForbesLindesay/acorn-globals/master.svg" /></a>
<a href="https://david-dm.org/ForbesLindesay/acorn-globals"><img alt="Dependency Status" src="https://img.shields.io/david/ForbesLindesay/acorn-globals.svg" /></a>
<a href="https://www.npmjs.org/package/acorn-globals"><img alt="NPM version" src="https://img.shields.io/npm/v/acorn-globals.svg" /></a></p>

<h2 id="installation">Installation</h2>

<p>npm install acorn-globals</p>

<h2 id="usage">Usage</h2>

<p>detect.js</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'fs'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">detect</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'acorn-globals'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">src</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">'/input.js'</span><span class="p">,</span> <span class="s1">'utf8'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">scope</span> <span class="o">=</span> <span class="nx">detect</span><span class="p">(</span><span class="nx">src</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">scope</span><span class="p">);</span>
</code></pre>

<p>input.js</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">z</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">w</span><span class="p">.</span><span class="nx">foo</span><span class="p">();</span>
<span class="nx">w</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">RAWR</span><span class="o">=</span><span class="mi">444</span><span class="p">;</span>
<span class="nx">RAWR</span><span class="p">.</span><span class="nx">foo</span><span class="p">();</span>

<span class="nx">BLARG</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span>

<span class="nx">foo</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">BAR</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
    <span class="nx">process</span><span class="p">.</span><span class="nx">nextTick</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">ZZZZZZZZZZZZ</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'beep boop'</span><span class="p">);</span>
        <span class="kd">var</span> <span class="nx">xyz</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
        <span class="nx">x</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="nx">x</span><span class="p">.</span><span class="nx">zzzzzz</span><span class="p">;</span>
        <span class="nx">ZZZ</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span>
    <span class="p">});</span>
    <span class="kd">function</span> <span class="nx">doom</span> <span class="p">()</span> <span class="p">{</span>
    <span class="p">}</span>
    <span class="nx">ZZZ</span><span class="p">.</span><span class="nx">foo</span><span class="p">();</span>

<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">xyz</span><span class="p">);</span>
</code></pre>

<p>output:</p>
<pre class="highlight plaintext"><code>$ node example/detect.js
[ { name: 'BLARG', nodes: [ [Object] ] },
  { name: 'RAWR', nodes: [ [Object], [Object] ] },
  { name: 'ZZZ', nodes: [ [Object], [Object] ] },
  { name: 'console', nodes: [ [Object], [Object] ] },
  { name: 'foo', nodes: [ [Object] ] },
  { name: 'process', nodes: [ [Object] ] },
  { name: 'w', nodes: [ [Object], [Object] ] },
  { name: 'xyz', nodes: [ [Object] ] } ]
</code></pre>

<h2 id="license">License</h2>

<p>MIT</p>
