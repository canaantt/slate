(function(){function r(r,t){return l(function(r){return a(r,t.of)},r)}function t(r,t){var e,n,u,i,f;for(e=0,n=0,i=(u=t.of).length;i>n;++n){if(f=u[n],!a(r[e],f))return!1;e++}return r.length<=e}function e(r,t){var e,n,u,i,f,l,c;e={},n=0;for(u in r)e[u]=!0,n++;i=0;for(f in l=t.of){if(c=l[f],!a(r[f],c))return!1;e[f]&&i++}return t.subset||n===i}function n(n,u){if(!(n instanceof Object))return!1;switch(u.structure){case"fields":return e(n,u);case"array":return r(n,u);case"tuple":return t(n,u)}}function u(r,t){var e,u,a,i;if(e=t.type,u=t.structure,e)return"*"===e?!0:(a=y[e]||o[e],a?a.typeOf===p.call(r).slice(8,-1)&&a.validate(r):e===p.call(r).slice(8,-1)&&(!u||n(r,t)));if(u)return(i=s[u])&&i!==p.call(r).slice(8,-1)?!1:n(r,t);throw new Error("No type defined. Input: "+r+".")}function a(r,t){if("Array"!==p.call(t).slice(8,-1))throw new Error("Types must be in an array. Input: "+r+".");return f(function(t){return u(r,t)},t)}var i,f,l,c,o,s,y,p={}.toString;i=require("prelude-ls"),f=i.any,l=i.all,c=i.isItNaN,o={Number:{typeOf:"Number",validate:function(r){return!c(r)}},NaN:{typeOf:"Number",validate:c},Int:{typeOf:"Number",validate:function(r){return!c(r)&&r%1===0}},Float:{typeOf:"Number",validate:function(r){return!c(r)}},Date:{typeOf:"Date",validate:function(r){return!c(r.getTime())}}},s={array:"Array",tuple:"Array"},module.exports=function(r,t,e){return null==e&&(e={}),y=e.customTypes||{},a(t,r)}}).call(this);