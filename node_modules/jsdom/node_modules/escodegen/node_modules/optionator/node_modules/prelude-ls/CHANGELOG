<h1 id="1-1-2">1.1.2</h1>

<ul>
<li>add <code class="prettyprint">Func.memoize</code></li>
<li>fix <code class="prettyprint">zip-all</code> and <code class="prettyprint">zip-with-all</code> corner case (no input)</li>
<li>build with LiveScript 1.4.0</li>
</ul>

<h1 id="1-1-1">1.1.1</h1>

<ul>
<li>curry <code class="prettyprint">unique-by</code>, <code class="prettyprint">minimum-by</code></li>
</ul>

<h1 id="1-1-0">1.1.0</h1>

<ul>
<li>added <code class="prettyprint">List</code> functions: <code class="prettyprint">maximum-by</code>, <code class="prettyprint">minimum-by</code>, <code class="prettyprint">unique-by</code></li>
<li>added <code class="prettyprint">List</code> functions: <code class="prettyprint">at</code>, <code class="prettyprint">elem-index</code>, <code class="prettyprint">elem-indices</code>, <code class="prettyprint">find-index</code>, <code class="prettyprint">find-indices</code></li>
<li>added <code class="prettyprint">Str</code> functions: <code class="prettyprint">capitalize</code>, <code class="prettyprint">camelize</code>, <code class="prettyprint">dasherize</code></li>
<li>added <code class="prettyprint">Func</code> function: <code class="prettyprint">over</code> - eg. <code class="prettyprint">same-length = (==) `over` (.length)</code></li>
<li>exported <code class="prettyprint">Str.repeat</code> through main <code class="prettyprint">prelude</code> object</li>
<li>fixed definition of <code class="prettyprint">foldr</code> and <code class="prettyprint">foldr1</code>, the new correct definition is backwards incompatible with the old, incorrect one</li>
<li>fixed issue with <code class="prettyprint">fix</code></li>
<li>improved code coverage</li>
</ul>

<h1 id="1-0-3">1.0.3</h1>

<ul>
<li>build browser versions</li>
</ul>

<h1 id="1-0-2">1.0.2</h1>

<ul>
<li>bug fix for <code class="prettyprint">flatten</code> - slight change with bug fix, flattens arrays only, not array-like objects</li>
</ul>

<h1 id="1-0-1">1.0.1</h1>

<ul>
<li>bug fixes for <code class="prettyprint">drop-while</code> and <code class="prettyprint">take-while</code></li>
</ul>

<h1 id="1-0-0">1.0.0</h1>

<ul>
<li>massive update - separated functions into separate modules</li>
<li>functions do not accept multiple types anymore - use different versions in their respective modules in some cases (eg. <code class="prettyprint">Obj.map</code>), or use <code class="prettyprint">chars</code> or <code class="prettyprint">values</code> in other cases to transform into a list</li>
<li>objects are no longer transformed into functions, simply use <code class="prettyprint">(obj.)</code> in LiveScript to do that</li>
<li>browser version now using browserify - use <code class="prettyprint">prelude = require(&#39;prelude-ls&#39;)</code></li>
<li>added <code class="prettyprint">compact</code>, <code class="prettyprint">split</code>, <code class="prettyprint">flatten</code>, <code class="prettyprint">difference</code>, <code class="prettyprint">intersection</code>, <code class="prettyprint">union</code>, <code class="prettyprint">count-by</code>, <code class="prettyprint">group-by</code>, <code class="prettyprint">chars</code>, <code class="prettyprint">unchars</code>, <code class="prettyprint">apply</code></li>
<li>added <code class="prettyprint">lists-to-obj</code> which takes a list of keys and list of values and zips them up into an object, and the converse <code class="prettyprint">obj-to-lists</code></li>
<li>added <code class="prettyprint">pairs-to-obj</code> which takes a list of pairs (2 element lists) and creates an object, and the converse <code class="prettyprint">obj-to-pairs</code></li>
<li>removed <code class="prettyprint">cons</code>, <code class="prettyprint">append</code> - use the concat operator</li>
<li>removed <code class="prettyprint">compose</code> - use the compose operator</li>
<li>removed <code class="prettyprint">obj-to-func</code> - use partially applied access (eg. <code class="prettyprint">(obj.)</code>)</li>
<li>removed <code class="prettyprint">length</code> - use <code class="prettyprint">(.length)</code></li>
<li><code class="prettyprint">sort-by</code> renamed to <code class="prettyprint">sort-with</code></li>
<li>added new <code class="prettyprint">sort-by</code></li>
<li>removed <code class="prettyprint">compare</code> - just use the new <code class="prettyprint">sort-by</code></li>
<li><code class="prettyprint">break-it</code> renamed <code class="prettyprint">break-list</code>, (<code class="prettyprint">Str.break-str</code> for the string version)</li>
<li>added <code class="prettyprint">Str.repeat</code> which creates a new string by repeating the input n times</li>
<li><code class="prettyprint">unfold</code> as alias to <code class="prettyprint">unfoldr</code> is no longer used</li>
<li>fixed up style and compiled with LiveScript 1.1.1</li>
<li>use Make instead of Slake</li>
<li>greatly improved tests</li>
</ul>

<h1 id="0-6-0">0.6.0</h1>

<ul>
<li>fixed various bugs</li>
<li>added <code class="prettyprint">fix</code>, a fixpoint (Y combinator) for anonymous recursive functions</li>
<li>added <code class="prettyprint">unfoldr</code> (alias <code class="prettyprint">unfold</code>)</li>
<li>calling <code class="prettyprint">replicate</code> with a string now returns a list of strings</li>
<li>removed <code class="prettyprint">partial</code>, just use native partial application in LiveScript using the <code class="prettyprint">_</code> placeholder, or currying</li>
<li>added <code class="prettyprint">sort</code>, <code class="prettyprint">sortBy</code>, and <code class="prettyprint">compare</code></li>
</ul>

<h1 id="0-5-0">0.5.0</h1>

<ul>
<li>removed <code class="prettyprint">lookup</code> - use (.prop)</li>
<li>removed <code class="prettyprint">call</code> - use (.func arg1, arg2)</li>
<li>removed <code class="prettyprint">pluck</code> - use map (.prop), xs</li>
<li>fixed buys wtih <code class="prettyprint">head</code> and <code class="prettyprint">last</code></li>
<li>added non-minifed browser version, as <code class="prettyprint">prelude-browser.js</code></li>
<li>renamed <code class="prettyprint">prelude-min.js</code> to <code class="prettyprint">prelude-browser-min.js</code></li>
<li>renamed <code class="prettyprint">zip</code> to <code class="prettyprint">zipAll</code></li>
<li>renamed <code class="prettyprint">zipWith</code> to <code class="prettyprint">zipAllWith</code></li>
<li>added <code class="prettyprint">zip</code>, a curried zip that takes only two arguments</li>
<li>added <code class="prettyprint">zipWith</code>, a curried zipWith that takes only two arguments</li>
</ul>

<h1 id="0-4-0">0.4.0</h1>

<ul>
<li>added <code class="prettyprint">parition</code> function</li>
<li>added <code class="prettyprint">curry</code> function</li>
<li>removed <code class="prettyprint">elem</code> function (use <code class="prettyprint">in</code>)</li>
<li>removed <code class="prettyprint">notElem</code> function (use <code class="prettyprint">not in</code>)</li>
</ul>

<h1 id="0-3-0">0.3.0</h1>

<ul>
<li>added <code class="prettyprint">listToObject</code></li>
<li>added <code class="prettyprint">unique</code></li>
<li>added <code class="prettyprint">objToFunc</code></li>
<li>added support for using strings in map and the like</li>
<li>added support for using objects in map and the like</li>
<li>added ability to use objects instead of functions in certain cases</li>
<li>removed <code class="prettyprint">error</code> (just use throw)</li>
<li>added <code class="prettyprint">tau</code> constant</li>
<li>added <code class="prettyprint">join</code></li>
<li>added <code class="prettyprint">values</code></li>
<li>added <code class="prettyprint">keys</code></li>
<li>added <code class="prettyprint">partial</code></li>
<li>renamed <code class="prettyprint">log</code> to <code class="prettyprint">ln</code></li>
<li>added alias to <code class="prettyprint">head</code>: <code class="prettyprint">first</code></li>
<li>added <code class="prettyprint">installPrelude</code> helper</li>
</ul>

<h1 id="0-2-0">0.2.0</h1>

<ul>
<li>removed functions that simply warp operators as you can now use operators as functions in LiveScript</li>
<li><code class="prettyprint">min/max</code> are now curried and take only 2 arguments</li>
<li>added <code class="prettyprint">call</code></li>
</ul>

<h1 id="0-1-0">0.1.0</h1>

<ul>
<li>initial public release</li>
</ul>
