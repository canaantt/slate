(function(){function e(e,r){var n={}.hasOwnProperty;for(var t in r)n.call(r,t)&&(e[t]=r[t]);return e}var r,n,t,o,a,l,i,s,p,u,f,c,d,h,y,w,g,m,v,E,O,A,b,R,N,T,q={}.toString,x=[].slice;r="0.8.1",n=require("prelude-ls"),t=n.id,o=n.map,a=n.compact,l=n.any,i=n.groupBy,s=n.partition,p=n.chars,u=n.isItNaN,f=n.keys,c=n.Obj,d=n.camelize,h=require("deep-is"),n=require("./util"),y=n.closestString,w=n.nameToRaw,g=n.dasherize,m=n.naturalJoin,n=require("./help"),v=n.generateHelp,E=n.generateHelpForOption,n=require("type-check"),O=n.parsedTypeCheck,A=n.parseType,b=require("levn").parsedTypeParse,R=function(e){var r,n,t={};for(r in e)n=e[r],t[d(r)]=n;return t},N=function(e){var r,n,t,a;return r="--?[a-zA-Z][-a-z-A-Z0-9]*=",n=RegExp("(?:"+r+")?(?:'(?:\\\\'|[^'])+'|\"(?:\\\\\"|[^\"])+\")|[^'\"\\s]+","g"),t=RegExp("^("+r+")?['\"]([\\s\\S]*)['\"]$"),a=o(function(e){return e.replace(t,"$1$2")},e.match(n)||[])},T=function(r){var n,t,o,a,i,u;return n={},t={},o=[],"Undefined"===q.call(r.stdout).slice(8,-1)&&(r.stdout=process.stdout),null==r.positionalAnywhere&&(r.positionalAnywhere=!0),null==r.typeAliases&&(r.typeAliases={}),null==r.defaults&&(r.defaults={}),null!=r.concatRepeatedArrays&&(r.defaults.concatRepeatedArrays=r.concatRepeatedArrays),null!=r.mergeRepeatedObjects&&(r.defaults.mergeRepeatedObjects=r.mergeRepeatedObjects),a=function(e){function a(e){return 1===e.length}var l,i,p,u,f,c,d,h,y,w,g,m,v,E,O,R,N,T,I,j,B,P;if("Array"!==q.call(e).slice(8,-1))throw new Error("No options defined.");for(l=0,i=e.length;i>l;++l)if(p=e[l],null==p.heading){if(u=p.option,null!=n[u])throw new Error("Option '"+u+"' already defined.");for(f in c=r.defaults)d=c[f],null==p[f]&&(p[f]=d);if("Boolean"===p.type&&null==p["boolean"]&&(p["boolean"]=!0),null==p.parsedType){if(!p.type)throw new Error("No type defined for option '"+u+"'.");try{h=null!=(y=r.typeAliases[p.type])?y:p.type,p.parsedType=A(h)}catch(k){throw w=k,new Error("Option '"+u+"': Error parsing type '"+p.type+"': "+w.message)}}if(p["default"])try{t[u]=b(p.parsedType,p["default"])}catch(k){throw w=k,new Error("Option '"+u+"': Error parsing default value '"+p["default"]+"' for type '"+p.type+"': "+w.message)}if(p["enum"]&&!p.parsedPossiblities){for(g=[],m=p.parsedType,v=0,E=(c=p["enum"]).length;E>v;++v){O=c[v];try{g.push(b(m,O))}catch(k){throw w=k,new Error("Option '"+u+"': Error parsing enum value '"+O+"' for type '"+p.type+"': "+w.message)}}p.parsedPossibilities=g}if(y=p.dependsOn)if(y.length)if(c=[].concat(p.dependsOn),R=c[0],N=x.call(c,1),T=R.toLowerCase(),N.length){if("and"!==T&&"or"!==T)throw new Error("Option '"+u+"': If you have more than one dependency, you must specify either 'and' or 'or'");p.dependsOn=[T].concat(x.call(N))}else"and"===(c=T.toLowerCase())||"or"===c?p.dependsOn=null:p.dependsOn=["and",R];else p.dependsOn=null;if(p.required&&o.push(u),n[u]=p,null!=p.concatRepeatedArrays)if(I=p.concatRepeatedArrays,"Boolean"===q.call(I).slice(8,-1))p.concatRepeatedArrays=[I,{}];else if(1===I.length)p.concatRepeatedArrays=[I[0],{}];else if(2!==I.length)throw new Error("Invalid setting for concatRepeatedArrays");if(p.alias||p.aliases){if("NUM"===u)throw new Error("-NUM option can't have aliases.");for(p.alias&&null==p.aliases&&(p.aliases=[].concat(p.alias)),v=0,E=(c=p.aliases).length;E>v;++v){if(j=c[v],null!=n[j])throw new Error("Option '"+j+"' already defined.");n[j]=p}c=s(a,p.aliases),B=c[0],P=c[1],null==p.shortNames&&(p.shortNames=B),null==p.longNames&&(p.longNames=P)}p.aliases&&0!==p.shortNames.length||"Boolean"!==p.type||"true"!==p["default"]||(p.negateName=!0)}},a(r.options),i=function(e){var r,t;if(r=n[e],null==r)throw t=y(f(n),e),new Error("Invalid option '"+w(e)+"'"+(t?" - perhaps you meant '"+w(t)+"'?":"."));return r},u=function(a,s){var u,f,c,d,y,v,E,A,T,I,j,B,P,k,z,$,M,S,U,C,H,Z,_,F,V,L,J,D,G,K,Q,W,X,Y,ee,re,ne,te;switch(u=(null!=s?s:{}).slice,f={},c=[],d=!1,y=!1,v=null,E=function(r,n){var t,o,a,s,p;if(t=i(r),t["boolean"])o=n;else{try{a=t.concatRepeatedArrays,o=null!=a&&a[0]&&a[1].oneValuePerFlag&&1===t.parsedType.length&&"array"===t.parsedType[0].structure?[b(t.parsedType[0].of,n)]:b(t.parsedType,n)}catch(u){throw s=u,new Error("Invalid value for option '"+r+"' - expected type "+t.type+", received value: "+n+".")}if(t["enum"]&&!l(function(e){return h(e,o)},t.parsedPossibilities))throw new Error("Option "+r+": '"+o+"' not one of "+m(t["enum"])+".")}p=q.call(f[r]).slice(8,-1),null!=f[r]?null!=t.concatRepeatedArrays&&t.concatRepeatedArrays[0]&&"Array"===p?f[r]=f[r].concat(o):t.mergeRepeatedObjects&&"Object"===p?e(f[r],o):f[r]=o:f[r]=o,t.restPositional&&(d=!0),t.overrideRequired&&(y=!0)},A=function(){var e,r,n;for(e in r=t)n=r[e],null==f[e]&&(f[e]=n)},T=function(){var e,r,n,t;if(!y)for(e=0,n=(r=o).length;n>e;++e)if(t=r[e],!f[t])throw new Error("Option "+w(t)+" is required.")},I=function(e,r){throw new Error("The options "+w(e)+" and "+w(r)+" are mutually exclusive - you cannot use them at the same time.")},j=function(){var e,n,t,o,a,l,i,s,p,u,c;if(e=r.mutuallyExclusive)for(n=0,t=e.length;t>n;++n)for(o=e[n],a=null,l=0,i=o.length;i>l;++l)if(s=o[l],"Array"===q.call(s).slice(8,-1)){for(p=0,u=s.length;u>p;++p)if(c=s[p],c in f){if(null==a){a=c;break}I(a,c)}}else s in f&&(null!=a?I(a,s):a=s)},B=function(e){var r,n,t,o,a,l,i;if(r=e.dependsOn,!r||e.dependenciesMet)return!0;for(n=r[0],t=x.call(r,1),o=0,a=t.length;a>o;++o)if(l=t[o],i=f[l],i&&B(i)){if("or"===n)return!0}else if("and"===n)throw new Error("The option '"+e.option+"' did not have its dependencies met.");if("and"===n)return!0;throw new Error("The option '"+e.option+"' did not meet any of its dependencies.")},P=function(){var e;for(e in f)B(n[e])},q.call(a).slice(8,-1)){case"String":k=N(a.slice(null!=u?u:0));break;case"Array":k=a.slice(null!=u?u:2);break;case"Object":f={};for(z in a)if($=a[z],"_"!==z){if(M=i(g(z)),!O(M.parsedType,$))throw new Error("Option '"+M.option+"': Invalid type for '"+$+"' - expected type '"+M.type+"'.");f[M.option]=$}return j(),P(),A(),T(),S=R(f),S._=a._||[],S;default:throw new Error("Invalid argument to 'parse': "+a+".")}for(U=0,C=k.length;C>U;++U)if(H=k[U],"--"===H)d=!0;else if(d)c.push(H);else if(Z=H.match(/^(--?)([a-zA-Z][-a-zA-Z0-9]*)(=)?(.*)?$/)){if(_=Z,v)throw new Error("Value for '"+v+"' of type '"+i(v).type+"' required.");if(F=1===_[1].length,V=_[2],L=null!=_[3],J=_[4],L&&null==J)throw new Error("No value for '"+V+"' specified.");if(F)for(D=p(V),G=D.length,K=0,Q=D.length;Q>K;++K)if(W=K,X=D[K],Y=i(X),ee=Y.option,d)c.push(X);else if(W===G-1)L?(re=Y["boolean"]?b([{type:"Boolean"}],J):J,E(ee,re)):Y["boolean"]?E(ee,!0):v=ee;else{if(!Y["boolean"])throw new Error("Can't set argument '"+X+"' when not last flag in a group of short flags.");E(ee,!0)}else if(ne=!1,(Z=V.match(/^no-(.+)$/))?(ne=!0,te=Z[1],Y=i(te)):Y=i(V),ee=Y.option,Y["boolean"])re=L?b([{type:"Boolean"}],J):!0,ne?E(ee,!re):E(ee,re);else{if(ne)throw new Error("Only use 'no-' prefix for Boolean options, not with '"+te+"'.");L?E(ee,J):v=ee}}else if(Z=H.match(/^-([0-9]+(?:\.[0-9]+)?)$/)){if(Y=n.NUM,!Y)throw new Error("No -NUM option defined.");E(Y.option,Z[1])}else v?(E(v,H),v=null):(c.push(H),r.positionalAnywhere||(d=!0));return j(),P(),A(),T(),S=R(f),S._=c,S},{parse:u,parseArgv:function(e){return u(e,{slice:2})},generateHelp:v(r),generateHelpForOption:E(i,r)}},T.VERSION=r,module.exports=T}).call(this);