var assert=require("assert"),Kareem=require("../");describe("execPost",function(){var o;beforeEach(function(){o=new Kareem}),it("handles errors",function(e){o.post("cook",function(o,e){e("error!")}),o.execPost("cook",null,[4],function(o,t){assert.equal("error!",o),assert.ok(!t),e()})}),it("multiple posts",function(e){o.post("cook",function(o,e){setTimeout(function(){e()},5)}),o.post("cook",function(o,e){setTimeout(function(){e()},5)}),o.execPost("cook",null,[4],function(o,t){assert.ifError(o),assert.equal(4,t),e()})}),it("error posts",function(e){var t={};o.post("cook",function(o,e){t.first=!0,e()}),o.post("cook",function(o,e){t.second=!0,e(new Error("fail"))}),o.post("cook",function(o,e){assert.ok(!1)}),o.post("cook",function(o,e,s){t.fourth=!0,assert.equal(o.message,"fail"),s(new Error("fourth"))}),o.post("cook",function(o,e,s){t.fifth=!0,assert.equal(o.message,"fourth"),s(new Error("fifth"))}),o.execPost("cook",null,[4],function(o,s){assert.ok(o),assert.equal(o.message,"fifth"),assert.deepEqual(t,{first:!0,second:!0,fourth:!0,fifth:!0}),e()})}),it("error posts with initial error",function(e){var t={};o.post("cook",function(o,e){assert.ok(!1)}),o.post("cook",function(o,e,s){t.second=!0,assert.equal(o.message,"fail"),s(new Error("second"))}),o.post("cook",function(o,e,s){t.third=!0,assert.equal(o.message,"second"),s(new Error("third"))}),o.post("cook",function(o,e,s){t.fourth=!0,assert.equal(o.message,"third"),s()});var s={error:new Error("fail")};o.execPost("cook",null,[4],s,function(o,s){assert.ok(o),assert.equal(o.message,"third"),assert.deepEqual(t,{second:!0,third:!0,fourth:!0}),e()})})}),describe("execPostSync",function(){var o;beforeEach(function(){o=new Kareem}),it("executes hooks synchronously",function(){var e={};o.post("cook",function(){e.first=!0}),o.post("cook",function(){e.second=!0}),o.execPostSync("cook",null),assert.ok(e.first),assert.ok(e.second)}),it("works with no hooks specified",function(){assert.doesNotThrow(function(){o.execPostSync("cook",null)})})});