var comongo=require("co-mongodb"),co=require("co"),disease_tables=[],db,collection,db_collections,collection_name,count,manifest,manifest_content,format={h1:function(o){console.log(),console.log("# "+o)},h2:function(o){console.log(),console.log("## "+o)},h3:function(o){console.log(),console.log("### "+o)},h4:function(o){console.log(),console.log("#### "+o)},textbold:function(o){console.log(),console.log(),console.log("**"+o+"**")},textlist:function(o){console.log(),console.log("- "+o)},textsublist:function(o){console.log("  * "+o)},text:function(o){console.log(),console.log(o)},url:function(o){console.log(),console.log("`"+o+"`"),console.log()},codeStart:function(){console.log(),console.log("```")},codeComment:function(o){console.log(),console.log(">"+o)},codeStop:function(){console.log(),console.log("```")},code:function(o){console.log('"'+o+'"')},jsonfy:function(o){console.log("{"+o+"}")},codeRStart:function(o){console.log("```r"),console.log(o)},codeMongoStart:function(o){console.log("```mongo"),console.log(o)},codeJSStart:function(o){console.log("```javascript"),console.log(o)},codePyStart:function(o){console.log("```python"),console.log(o)},table:function(o){console.log(o)}};format.codeJSStart(),format.codeComment("To get the fields of first document and the count of the documents in collection"),format.code('var collection = "gbm_patient_tcga_clinical";'),format.code('var url = "https://dev.oncoscape.sttrcancer.io/api/" + collection + "/?q=";'),format.code('$.get(url, function(data) {var field_names = Object.keys(data[0]);var count = data.length;console.log("fields name of the first records: " + field_names);console.log("counts: " + count);});'),format.codeStop();